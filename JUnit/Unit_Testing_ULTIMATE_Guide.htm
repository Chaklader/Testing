<!DOCTYPE html>
<!-- saved from url=(0070)https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html -->
<html lang="en-US" prefix="og: http://ogp.me/ns#"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><link rel="stylesheet" type="text/css" href="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/3f1ae.default.include.822e59.css" media="all"><link rel="profile" href="https://gmpg.org/xfn/11"><link rel="pingback" href="https://www.javacodegeeks.com/xmlrpc.php">  <script async="" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/analytics.js"></script><script src="https://securepubads.g.doubleclick.net/gampad/ads?gdfp_req=1&amp;correlator=1047405995218221&amp;output=json_html&amp;callback=googletag.impl.pubads.callbackProxy1&amp;impl=fifs&amp;json_a=1&amp;eid=108809080%2C108809132%2C108809147%2C108809107%2C108809155%2C21060164&amp;sc=1&amp;sfv=1-0-8&amp;iu_parts=70432299%2CJCG_Header%2CJCG_In-post%2CJCG_Side%2CJCG_Side_1%2CJCG_Under-post%2CJCG_Side_2%2CJCG_NotifBar&amp;enc_prev_ius=%2F0%2F1%2C%2F0%2F2%2C%2F0%2F3%2C%2F0%2F4%2C%2F0%2F5%2C%2F0%2F6%2C%2F0%2F7&amp;prev_iu_szs=728x90%2C300x250%2C300x250%2C300x250%2C300x250%2C300x600%2C1220x50&amp;cust_params=PostID%3D31893%26PostCAT%3D7&amp;cookie_enabled=1&amp;abxe=1&amp;lmt=1496544225&amp;dt=1496544252833&amp;frm=20&amp;biw=1432&amp;bih=723&amp;oid=3&amp;adxs=0%2C0%2C0%2C-9%2C0%2C-9%2C-9&amp;adys=0%2C0%2C0%2C-9%2C0%2C-9%2C-9&amp;adks=3917931340%2C2292939308%2C1430340824%2C2006874815%2C2131506249%2C778024483%2C3359392277&amp;gut=v2&amp;ifi=1&amp;u_tz=360&amp;u_his=3&amp;u_h=900&amp;u_w=1440&amp;u_ah=797&amp;u_aw=1440&amp;u_cd=24&amp;u_nplug=4&amp;u_nmime=5&amp;u_sd=1&amp;flash=0&amp;url=https%3A%2F%2Fwww.javacodegeeks.com%2F2014%2F11%2Fjunit-tutorial-unit-testing.html&amp;ref=https%3A%2F%2Fwww.google.com%2F&amp;dssz=14&amp;icsg=706&amp;std=0&amp;vrg=120&amp;vrp=120&amp;ga_vid=1999712305.1490359553&amp;ga_sid=1496544253&amp;ga_hid=711961794"></script><script type="text/javascript" async="" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/recaptcha__en.js"></script><script async="" type="text/javascript" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/gpt.js"></script><script type="text/javascript">var googletag=googletag||{};googletag.cmd=googletag.cmd||[];(function(){var gads=document.createElement('script');gads.async=true;gads.type='text/javascript';var useSSL='https:'==document.location.protocol;gads.src=(useSSL?'https:':'http:')+'//www.googletagservices.com/tag/js/gpt.js';var node=document.getElementsByTagName('script')[0];node.parentNode.insertBefore(gads,node);})();</script> <script type="text/javascript">googletag.cmd.push(function(){googletag.defineSlot('/70432299/JCG_Header',[728,90],'div-gpt-ad-1415445260332-0').addService(googletag.pubads());googletag.defineSlot('/70432299/JCG_In-post',[300,250],'div-gpt-ad-1415445260332-2').addService(googletag.pubads());googletag.defineSlot('/70432299/JCG_Side',[300,250],'div-gpt-ad-1415445260332-3').addService(googletag.pubads());googletag.defineSlot('/70432299/JCG_Side_1',[300,250],'div-gpt-ad-1415445260332-4').addService(googletag.pubads());googletag.defineSlot('/70432299/JCG_Under-post',[300,250],'div-gpt-ad-1415445260332-5').addService(googletag.pubads());googletag.defineSlot('/70432299/JCG_Side_2',[300,600],'div-gpt-ad-1415445260332-6').addService(googletag.pubads());googletag.defineSlot('/70432299/JCG_NotifBar',[1220,50],'div-gpt-ad-1431445244472-0').addService(googletag.pubads());googletag.pubads().setTargeting("PostID","31893");googletag.pubads().setTargeting("PostCAT","7");googletag.pubads().enableSingleRequest();googletag.enableServices();});</script> <title>JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)</title><meta name="description" content="Looking for a JUnit example for Java unit testing? We have the ULTIMATE guide for you, whether you are a beginner or an experienced developer!"><meta name="robots" content="noodp"><link rel="canonical" href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html"><link rel="publisher" href="https://plus.google.com/+JavaCodeGeeks/"><meta name="twitter:card" content="summary"><meta name="twitter:description" content="Looking for a JUnit example for Java unit testing? We have the ULTIMATE guide for you, whether you are a beginner or an experienced developer!"><meta name="twitter:title" content="JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)"><meta name="twitter:site" content="@javacodegeeks"><meta name="twitter:image" content="https://www.javacodegeeks.com/wp-content/uploads/2012/10/junit-logo-e1426444701180.jpg"><meta name="twitter:creator" content="@javacodegeeks"><link rel="dns-prefetch" href="https://www.google.com/"><link rel="dns-prefetch" href="https://gdc.indeed.com/"><link rel="dns-prefetch" href="https://fonts.googleapis.com/"><link rel="dns-prefetch" href="https://s.w.org/"><link rel="alternate" type="application/rss+xml" title="Java Code Geeks » Feed" href="https://www.javacodegeeks.com/feed/"><link rel="alternate" type="application/rss+xml" title="Java Code Geeks » Comments Feed" href="https://www.javacodegeeks.com/comments/feed/"><link rel="alternate" type="application/rss+xml" title="Java Code Geeks » JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download) Comments Feed" href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html/feed/"><link rel="stylesheet" id="um_recaptcha-css" href="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/um-recaptcha.css" type="text/css" media="all"><link rel="stylesheet" id="dlm-frontend-css" href="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/frontend.css" type="text/css" media="all"><link rel="stylesheet" id="Oswald-css" href="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/css" type="text/css" media="all"><link rel="stylesheet" id="um_minified-css" href="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/um.min.css" type="text/css" media="all"> <script type="text/javascript" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/jquery.js"></script> <script type="text/javascript" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/api.js"></script> <script type="text/javascript" src="https://gdc.indeed.com/ads/apiresults.js"></script> <link rel="https://api.w.org/" href="https://www.javacodegeeks.com/wp-json/"><link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://www.javacodegeeks.com/xmlrpc.php?rsd"><link rel="wlwmanifest" type="application/wlwmanifest+xml" href="https://www.javacodegeeks.com/wp-includes/wlwmanifest.xml"><meta name="generator" content="WordPress 4.7.5"><link rel="shortlink" href="https://www.javacodegeeks.com/?p=31893"><link rel="alternate" type="application/json+oembed" href="https://www.javacodegeeks.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.javacodegeeks.com%2F2014%2F11%2Fjunit-tutorial-unit-testing.html"><link rel="alternate" type="text/xml+oembed" href="https://www.javacodegeeks.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.javacodegeeks.com%2F2014%2F11%2Fjunit-tutorial-unit-testing.html&amp;format=xml"><link rel="shortcut icon" href="https://www.javacodegeeks.com/wp-content/uploads/2012/12/JavaCodeGeeks-favIcon.png" title="Favicon"><meta property="og:title" content="JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)"><meta property="og:type" content="article"><meta property="og:description" content="EDITORIAL NOTE: We have provided plenty of JUnit tutorials here at Java Code Geeks, like JUnit Getti..."><meta property="og:url" content="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html"><meta property="og:site_name" content="Java Code Geeks"><meta property="og:image" content="https://www.javacodegeeks.com/wp-content/uploads/2012/10/junit-logo-e1426444701180.jpg"> <!--[if IE]> <script type="text/javascript">jQuery(document).ready(function(){jQuery(".menu-item").has("ul").children("a").attr("aria-haspopup","true");});</script> <![endif]--> <!--[if lt IE 9]> <script src="//www.javacodegeeks.com/wp-content/themes/jarida/js/html5.js"></script> <script src="//www.javacodegeeks.com/wp-content/themes/jarida/js/selectivizr-min.js"></script> <![endif]--> <!--[if IE 8]><link rel="stylesheet" type="text/css" media="all" href="//www.javacodegeeks.com/wp-content/themes/jarida/css/ie8.css" /> <![endif]--><meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"><meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no"><style type="text/css" media="screen">body{background-image:url(https://www.javacodegeeks.com/wp-content/themes/jarida/images/patterns/body-bg1.png);background-position:top center}body.single .entry, body.page
.entry{font-size:15px !important}#main-nav ul li.current-menu-item a,
#main-nav ul li.current-menu-item a:hover,
#main-nav ul li.current-menu-parent a,
#main-nav ul li.current-menu-parent a:hover,
#main-nav ul li.current-page-ancestor a,
#main-nav ul li.current-page-ancestor a:hover,
.pagination span.current,
.ei-slider-thumbs li.ei-slider-element,
.breaking-news span,
.ei-title h2,h2.cat-box-title,
a.more-link,.scroll-nav a,
.flex-direction-nav a,
.tagcloud a:hover,
#tabbed-widget ul.tabs li.active a,
.slider-caption h2, .full-width .content .slider-caption h2,
.review-percentage .review-item span span,.review-final-score,
.woocommerce span.onsale, .woocommerce-page span.onsale ,
.woocommerce .widget_price_filter .ui-slider .ui-slider-handle, .woocommerce-page .widget_price_filter .ui-slider .ui-slider-handle,
.button,a.button,#main-content input[type="submit"],#main-content input[type="submit"]:focus, span.onsale,
.mejs-container .mejs-controls .mejs-time-rail .mejs-time-current,#reading-position-indicator{background-color:#326693 !important}::-webkit-scrollbar-thumb{background-color:#326693 !important}#main-nav,.top-nav{border-bottom-color:#326693}.cat-box , .footer-bottom
.container{border-top-color:#326693}body.single .post .entry a, body.page .post .entry
a{color:#326693}body.single .post .entry a:hover, body.page .post .entry a:hover{color:#478cc4;text-decoration:underline}#main-nav ul
li{text-transform:none}.toc
dl{display:block}.toc
dt{display:block}.toc
dd{display:block;-webkit-margin-start:20px;-moz-margin-start:20px}.toc{line-height:1.4;font-size:90%;border-bottom:1px solid #eee;padding:20px;border:1px
solid #e1e1e1;background:#f1f1f1;border-radius:9px;-moz-border-radius:9px;-webkit-border-radius:9px;width:80%;display:inline-block;margin:20px
0}code{display:inline}.tip{background:url(/wp-content/uploads/sprites.png) -201px -72px no-repeat;padding:10px
20px 25px 80px;margin:2.5em 1em;border-color:#dedede #d8d8d8 #d3d3d3;text-shadow:0 1px 0 #fff;-webkit-box-shadow:0 1px 1px #eaeaea, inset 0 1px 0 #fbfbfb;-moz-box-shadow:0 1px 1px #eaeaea, inset 0 1px 0 #fbfbfb;box-shadow:0 1px 1px #eaeaea, inset 0 1px 0 #fbfbfb;background-color:#FAFAFA;color:#555;border:1px
solid #DEDEDE;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px}.download{background:url(/wp-content/uploads/sprites.png) -266px 0px no-repeat;padding:10px
20px 25px 80px;margin:2.5em 1em;border-color:#dedede #d8d8d8 #d3d3d3;text-shadow:0 1px 0 #fff;-webkit-box-shadow:0 1px 1px #eaeaea, inset 0 1px 0 #fbfbfb;-moz-box-shadow:0 1px 1px #eaeaea, inset 0 1px 0 #fbfbfb;box-shadow:0 1px 1px #eaeaea, inset 0 1px 0 #fbfbfb;background-color:#FAFAFA;color:#555;border:1px
solid #DEDEDE;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px}.nlbox{background:#E2ECFA;margin:15px
0px 15px;padding:10px;-webkit-border-radius:3px;-mozilla-border-radius:3px;-o-border-radius:3px;border-radius:3px;-moz-box-shadow:0px 2px 2px 1px #d7e1eb;-webkit-box-shadow:0px 2px 2px 1px #d7e1eb;box-shadow:0px 2px 2px 1px #d7e1eb;border:solid 1px #D8D8D8;display:inline-block}.nlbox1{background:#E2ECFA;margin:-10px 0 25px;width:auto;max-width:798px;padding:10px;-webkit-border-radius:3px;-mozilla-border-radius:3px;-o-border-radius:3px;border-radius:3px;-moz-box-shadow:0px 2px 2px 1px #d7e1eb;-webkit-box-shadow:0px 2px 2px 1px #d7e1eb;box-shadow:0px 2px 2px 1px #d7e1eb;border:solid 1px #D8D8D8}.button-gw{border-top:1px solid #96d1f8;background:#65a9d7;background:-webkit-gradient(linear, left top, left bottom, from(#3e779d), to(#65a9d7));background:-webkit-linear-gradient(top, #3e779d, #65a9d7);background:-moz-linear-gradient(top, #3e779d, #65a9d7);background:-ms-linear-gradient(top, #3e779d, #65a9d7);background:-o-linear-gradient(top, #3e779d, #65a9d7);padding:20px
40px;-webkit-border-radius:8px;-moz-border-radius:8px;border-radius:8px;-webkit-box-shadow:rgba(0,0,0,1) 0 1px 0;-moz-box-shadow:rgba(0,0,0,1) 0 1px 0;box-shadow:rgba(0,0,0,1) 0 1px 0;text-shadow:rgba(0,0,0,.4) 0 1px 0;color:white;font-size:25px;font-family:Georgia,Serif;text-decoration:none !important;vertical-align:middle}.button-gw:hover{border-top-color:#28597a;background:#28597a;color:#ccc}.button-gw:active{border-top-color:#1b435e;background:#1b435e}.widget_wpjb-recent-jobs .wpjb-grid-compact{margin-left:5%;margin-right:5%}.attribution{border-color:#dedede #d8d8d8 #d3d3d3;text-shadow:0 1px 0 #fff;-webkit-box-shadow:0 1px 1px #eaeaea, inset 0 1px 0 #fbfbfb;-moz-box-shadow:0 1px 1px #eaeaea, inset 0 1px 0 #fbfbfb;box-shadow:0 1px 1px #eaeaea, inset 0 1px 0 #fbfbfb;background:#fff;background:-moz-linear-gradient(top, #fff 0%, #f6f6f6 47%, #ededed 100%);background:-webkit-gradient(linear, left top, left bottom, color-stop(0%,#ffffff), color-stop(47%,#f6f6f6), color-stop(100%,#ededed));background:-webkit-linear-gradient(top, #fff 0%,#f6f6f6 47%,#ededed 100%);background:-o-linear-gradient(top, #fff 0%,#f6f6f6 47%,#ededed 100%);background:-ms-linear-gradient(top, #fff 0%,#f6f6f6 47%,#ededed 100%);background:linear-gradient(top, #fff 0%,#f6f6f6 47%,#ededed 100%);padding:3px
8px;line-height:20px;color:#555;border:1px
solid #DEDEDE;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px;margin-top:20px;display:inline-block}.attribution
.reference{font-weight:bold}.attribution
table{border:none;background-color:inherit}.attribution table
td{vertical-align:top;padding:0px
5px;border-bottom:none;font-size:inherit}a.TPbutton_w_cnd01lb:hover{background-color:#fc0;background:url(/wp-content/uploads/sprites.png) 0 -102px;color:#fff;text-decoration:none;transition:none}a.TPbutton_w_cnd01lb{-webkit-border-radius:7px;-mozilla-border-radius:7px;-o-border-radius:7px;border-radius:7px;text-decoration:none;color:#fff;font-family:'lucida sans','lucida grande',arial,helvetica,sans-serif;letter-spacing:-1px;font-weight:bold;background-color:#f90;background:url(/wp-content/uploads/sprites.png) 0 -73px;padding:4px
10px 4px 10px;font-size:16px;-moz-box-shadow:0px 3px 3px 2px #d7e1eb;-webkit-box-shadow:0px 3px 3px 2px #d7e1eb;box-shadow:0px 3px 3px 2px #d7e1eb;border:solid 2px #fff;width:200px;height:56px;transition:none}.TPbutton_w_cnd01lb_arrow{position:relative;display:inline-block;overflow:hidden;vertical-align:bottom;width:30px;height:20px;background:url(/wp-content/uploads/sprites.png) -146px 0px}#commentform
input{width:inherit}#author-box .post-listing{margin-bottom:0px}#author-box .block-head
h3{text-transform:none}header#theme-header{margin:0
0 0}blockquote{display:inline-block;margin:20px
0 10px 40px;font-size:14px}blockquote:before{font-size:25px;line-height:inherit}.syntaxhighlighter{display:inline-block}@media (max-width: 767px){#div-gpt-ad-1415445260332-0{display:none}}@media (max-width: 479px){#div-gpt-ad-1415445260332-3{margin-left:-10px}#div-gpt-ad-1415445260332-4{margin-left:-10px}#div-gpt-ad-1415445260332-6{margin-left:-10px}}.sidebar{position:relative}@media screen and (min-width: 500px){.cc_container{left:15px !important}}.cc_container{-webkit-animation-name:fadeInLeft !important;animation-name:fadeInLeft !important}div.datepicker{z-index:1000}.wp-listing{width:33%;padding-bottom:50px;float:left;line-height:20px;display:table}.wp-listing
table{padding:11px;text-align:center;border:1px
solid #FFF}.wp-listing table:hover{border-color:#dedede #d8d8d8 #d3d3d3;text-shadow:0 1px 0 #fff;-webkit-box-shadow:0 1px 1px #eaeaea, inset 0 1px 0 #fbfbfb;-moz-box-shadow:0 1px 1px #eaeaea, inset 0 1px 0 #fbfbfb;box-shadow:0 1px 1px #eaeaea, inset 0 1px 0 #fbfbfb;background:#fff;background:-moz-linear-gradient(top, #fff 0%, #f6f6f6 47%, #ededed 100%);background:-webkit-gradient(linear, left top, left bottom, color-stop(0%,#ffffff), color-stop(47%,#f6f6f6), color-stop(100%,#ededed));background:-webkit-linear-gradient(top, #fff 0%,#f6f6f6 47%,#ededed 100%);background:-o-linear-gradient(top, #fff 0%,#f6f6f6 47%,#ededed 100%);background:-ms-linear-gradient(top, #fff 0%,#f6f6f6 47%,#ededed 100%);background:linear-gradient(top, #fff 0%,#f6f6f6 47%,#ededed 100%);color:#555;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px}.download-button{width:80%}.minibook
img{border:none}.minibook
table{border:none;background:none}.minibook table
td{border:none;font-size:14px;color:inherit}.minibook .e3lan-post{display:none}div.um-register .um-form::after{content:"* By registering you agree to receive email notifications about our products/services. You can unsubscribe anytime from your account page.";font-size:12px;font-style:italic;display:block;margin-top:30px}</style> <script type="text/javascript">var ultimatemember_image_upload_url='https://www.javacodegeeks.com/wp-content/plugins/ultimate-member/core/lib/upload/um-image-upload.php';var ultimatemember_file_upload_url='https://www.javacodegeeks.com/wp-content/plugins/ultimate-member/core/lib/upload/um-file-upload.php';var ultimatemember_ajax_url='https://www.javacodegeeks.com/wp-admin/admin-ajax.php';</script> <style type="text/css">.request_name{display:none !important}</style><script src="https://securepubads.g.doubleclick.net/gpt/pubads_impl_120.js" async=""></script></head><body id="top" class="post-template-default single single-post postid-31893 single-format-standard"><div class="background-cover"></div><div class="wrapper"><div class="top-nav fade-in animated1 head_menu"><div class="container"><div class="search-block"><form method="get" id="searchform" action="https://www.javacodegeeks.com/"> <button class="search-button" type="submit" value="Search"></button> <input type="text" id="s" name="s" value="Search..." onfocus="if (this.value == &#39;Search...&#39;) {this.value = &#39;&#39;;}" onblur="if (this.value == &#39;&#39;) {this.value = &#39;Search...&#39;;}"></form></div><div class="social-icons icon_flat"> <a class="tooldown" href="http://feeds.feedburner.com/JavaCodeGeeks" target="_blank" original-title="Rss"><i class="tieicon-rss"></i></a><a class="tooldown" href="https://plus.google.com/+JavaCodeGeeks/" target="_blank" original-title="Google+"><i class="tieicon-gplus"></i></a><a class="tooldown" href="https://www.facebook.com/javacodegeeks" target="_blank" original-title="Facebook"><i class="tieicon-facebook"></i></a><a class="tooldown" href="https://twitter.com/javacodegeeks" target="_blank" original-title="Twitter"><i class="tieicon-twitter"></i></a><a class="tooldown" href="https://www.linkedin.com/groups/Java-Code-Geeks-3810709" target="_blank" original-title="LinkedIn"><i class="tieicon-linkedin"></i></a><a class="tooldown" href="https://github.com/javacodegeeks/" target="_blank" original-title="Github"><i class="tieicon-github"></i></a></div><div class="top-menu"><ul id="menu-pages" class="menu"><li id="menu-item-38541" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-has-children menu-item-38541 parent-list"><a href="http://www.javacodegeeks.com/#">Knowledge Base <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-38217" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-38217 parent-list"><a href="https://www.javacodegeeks.com/tutorials/">Tutorials <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-38218" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-38218 parent-list"><a href="https://www.javacodegeeks.com/tutorials/java-tutorials/">Java Tutorials <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-38219" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38219"><a href="https://www.javacodegeeks.com/tutorials/java-tutorials/core-java-tutorials/">Core Java Tutorials</a></li><li id="menu-item-38220" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-38220 parent-list"><a href="https://www.javacodegeeks.com/tutorials/java-tutorials/enterprise-java-tutorials/">Enterprise Java Tutorials <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-38221" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38221"><a href="https://www.javacodegeeks.com/tutorials/java-tutorials/enterprise-java-tutorials/spring-tutorials/">Spring Tutorials</a></li></ul></li><li id="menu-item-38222" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38222"><a href="https://www.javacodegeeks.com/tutorials/java-tutorials/desktop-java-tutorials/">Desktop Java Tutorials</a></li></ul></li><li id="menu-item-38223" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-38223 parent-list"><a href="https://www.javacodegeeks.com/tutorials/android-tutorials/">Android Tutorials <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-38224" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38224"><a href="https://www.javacodegeeks.com/tutorials/android-tutorials/android-core-tutorials/">Android Core Tutorials</a></li><li id="menu-item-38225" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38225"><a href="https://www.javacodegeeks.com/tutorials/android-tutorials/android-game-tutorials/">Android Game Tutorials</a></li></ul></li><li id="menu-item-38226" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38226"><a href="https://www.javacodegeeks.com/tutorials/scala-tutorials/">Scala Tutorials</a></li><li id="menu-item-38227" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38227"><a href="https://www.javacodegeeks.com/tutorials/devops-tutorials/">DevOps Tutorials</a></li><li id="menu-item-38228" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38228"><a href="https://www.javacodegeeks.com/tutorials/nosql-tutorials/">NoSQL Tutorials</a></li><li id="menu-item-38229" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38229"><a href="https://www.javacodegeeks.com/tutorials/groovy-grails-tutorials/">Groovy/Grails Tutorials</a></li></ul></li><li id="menu-item-38273" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-38273"><a href="http://examples.javacodegeeks.com/">Examples</a></li><li id="menu-item-45446" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-45446"><a href="https://www.javacodegeeks.com/courses/">Courses</a></li><li id="menu-item-65167" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-65167"><a href="http://www.javacodegeeks.com/minibook/">Minibooks</a></li></ul></li><li id="menu-item-38243" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-38243 parent-list"><a href="https://www.javacodegeeks.com/resources/">Resources <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-38244" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38244"><a href="https://www.javacodegeeks.com/resources/software/">Software</a></li><li id="menu-item-38245" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38245"><a href="https://www.javacodegeeks.com/resources/our-projects/">Our Projects</a></li></ul></li><li id="menu-item-54369" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-54369"><a href="https://deals.javacodegeeks.com/">Deals</a></li><li id="menu-item-38240" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-38240 parent-list"><a href="https://www.javacodegeeks.com/job-board/">Job Board <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-61394" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-61394 parent-list"><a href="https://www.javacodegeeks.com/jobs/">Jobs <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-61395" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-61395"><a href="https://www.javacodegeeks.com/jobs/advanced-search/">Advanced Search</a></li><li id="menu-item-61396" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-61396"><a href="https://www.javacodegeeks.com/jobs/post-a-job/">Post a Job</a></li></ul></li><li id="menu-item-61392" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-61392 parent-list"><a href="https://www.javacodegeeks.com/resumes/">Resumes <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-61393" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-61393"><a href="https://www.javacodegeeks.com/resumes/advanced-search/">Advanced Search</a></li></ul></li><li id="menu-item-61390" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-61390 parent-list"><a href="https://www.javacodegeeks.com/employer-panel/">Employer Panel <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-61391" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-61391"><a href="https://www.javacodegeeks.com/employer-panel/employer-registration/">Employer Registration</a></li></ul></li><li id="menu-item-61388" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-61388 parent-list"><a href="https://www.javacodegeeks.com/candidate-panel/">Candidate Panel <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-61389" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-61389"><a href="https://www.javacodegeeks.com/candidate-panel/candidate-registration/">Candidate Registration</a></li></ul></li></ul></li><li id="menu-item-38230" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-38230 parent-list"><a href="https://www.javacodegeeks.com/join-us/">Join Us <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-38231" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38231"><a href="https://www.javacodegeeks.com/join-us/jcg/">JCG</a></li><li id="menu-item-38232" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-38232 parent-list"><a href="https://www.javacodegeeks.com/join-us/w4g/">W4G <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-38233" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38233"><a href="https://www.javacodegeeks.com/join-us/w4g/submission-guidelines/">Submission Guidelines</a></li><li id="menu-item-38234" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38234"><a href="https://www.javacodegeeks.com/join-us/w4g/terms-conditions/">Terms &amp; Conditions</a></li></ul></li></ul></li><li id="menu-item-38235" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-38235 parent-list"><a href="https://www.javacodegeeks.com/about/">About <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-38236" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38236"><a href="https://www.javacodegeeks.com/about/about-jcgs/">About JCGs</a></li><li id="menu-item-38237" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38237"><a href="https://www.javacodegeeks.com/about/advertising/">Advertising</a></li><li id="menu-item-38238" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38238"><a href="https://www.javacodegeeks.com/about/terms-of-use/">Terms of Use</a></li><li id="menu-item-38239" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38239"><a href="https://www.javacodegeeks.com/about/privacy-policy/">Privacy Policy</a></li></ul></li><li id="menu-item-65125" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-65125"><a href="https://www.javacodegeeks.com/login/">Login</a></li><li id="menu-item-65124" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-65124"><a href="https://www.javacodegeeks.com/register/">Register</a></li></ul><select id="top-menu-mob"><option value="#">Go to...</option><option value="http://www.javacodegeeks.com/#">&nbsp;Knowledge Base </option><option value="https://www.javacodegeeks.com/tutorials/">&nbsp; &nbsp; –&nbsp;Tutorials </option><option value="https://www.javacodegeeks.com/tutorials/java-tutorials/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;Java Tutorials </option><option value="https://www.javacodegeeks.com/tutorials/java-tutorials/core-java-tutorials/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;Core Java Tutorials</option><option value="https://www.javacodegeeks.com/tutorials/java-tutorials/enterprise-java-tutorials/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;Enterprise Java Tutorials </option><option value="https://www.javacodegeeks.com/tutorials/java-tutorials/enterprise-java-tutorials/spring-tutorials/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;Spring Tutorials</option><option value="https://www.javacodegeeks.com/tutorials/java-tutorials/desktop-java-tutorials/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;Desktop Java Tutorials</option><option value="https://www.javacodegeeks.com/tutorials/android-tutorials/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;Android Tutorials </option><option value="https://www.javacodegeeks.com/tutorials/android-tutorials/android-core-tutorials/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;Android Core Tutorials</option><option value="https://www.javacodegeeks.com/tutorials/android-tutorials/android-game-tutorials/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;Android Game Tutorials</option><option value="https://www.javacodegeeks.com/tutorials/scala-tutorials/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;Scala Tutorials</option><option value="https://www.javacodegeeks.com/tutorials/devops-tutorials/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;DevOps Tutorials</option><option value="https://www.javacodegeeks.com/tutorials/nosql-tutorials/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;NoSQL Tutorials</option><option value="https://www.javacodegeeks.com/tutorials/groovy-grails-tutorials/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;Groovy/Grails Tutorials</option><option value="http://examples.javacodegeeks.com/">&nbsp; &nbsp; –&nbsp;Examples</option><option value="https://www.javacodegeeks.com/courses/">&nbsp; &nbsp; –&nbsp;Courses</option><option value="http://www.javacodegeeks.com/minibook/">&nbsp; &nbsp; –&nbsp;Minibooks</option><option value="https://www.javacodegeeks.com/resources/">&nbsp;Resources </option><option value="https://www.javacodegeeks.com/resources/software/">&nbsp; &nbsp; –&nbsp;Software</option><option value="https://www.javacodegeeks.com/resources/our-projects/">&nbsp; &nbsp; –&nbsp;Our Projects</option><option value="https://deals.javacodegeeks.com/">&nbsp;Deals</option><option value="https://www.javacodegeeks.com/job-board/">&nbsp;Job Board </option><option value="https://www.javacodegeeks.com/jobs/">&nbsp; &nbsp; –&nbsp;Jobs </option><option value="https://www.javacodegeeks.com/jobs/advanced-search/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;Advanced Search</option><option value="https://www.javacodegeeks.com/jobs/post-a-job/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;Post a Job</option><option value="https://www.javacodegeeks.com/resumes/">&nbsp; &nbsp; –&nbsp;Resumes </option><option value="https://www.javacodegeeks.com/resumes/advanced-search/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;Advanced Search</option><option value="https://www.javacodegeeks.com/employer-panel/">&nbsp; &nbsp; –&nbsp;Employer Panel </option><option value="https://www.javacodegeeks.com/employer-panel/employer-registration/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;Employer Registration</option><option value="https://www.javacodegeeks.com/candidate-panel/">&nbsp; &nbsp; –&nbsp;Candidate Panel </option><option value="https://www.javacodegeeks.com/candidate-panel/candidate-registration/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;Candidate Registration</option><option value="https://www.javacodegeeks.com/join-us/">&nbsp;Join Us </option><option value="https://www.javacodegeeks.com/join-us/jcg/">&nbsp; &nbsp; –&nbsp;JCG</option><option value="https://www.javacodegeeks.com/join-us/w4g/">&nbsp; &nbsp; –&nbsp;W4G </option><option value="https://www.javacodegeeks.com/join-us/w4g/submission-guidelines/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;Submission Guidelines</option><option value="https://www.javacodegeeks.com/join-us/w4g/terms-conditions/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;Terms &amp; Conditions</option><option value="https://www.javacodegeeks.com/about/">&nbsp;About </option><option value="https://www.javacodegeeks.com/about/about-jcgs/">&nbsp; &nbsp; –&nbsp;About JCGs</option><option value="https://www.javacodegeeks.com/about/advertising/">&nbsp; &nbsp; –&nbsp;Advertising</option><option value="https://www.javacodegeeks.com/about/terms-of-use/">&nbsp; &nbsp; –&nbsp;Terms of Use</option><option value="https://www.javacodegeeks.com/about/privacy-policy/">&nbsp; &nbsp; –&nbsp;Privacy Policy</option><option value="https://www.javacodegeeks.com/login/">&nbsp;Login</option><option value="https://www.javacodegeeks.com/register/">&nbsp;Register</option></select></div></div></div><div class="container"> <header id="theme-header"><div class="header-content fade-in animated1"><div class="logo"><h2>								<a title="Java Code Geeks" href="https://www.javacodegeeks.com/"> <img src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/JavaCodeGeeks-logo.png" alt="Java Code Geeks"><strong>Java Code Geeks Java Developers Resource Center</strong> </a></h2></div><div class="e3lan-top"><div id="div-gpt-ad-1415445260332-0" style="width:728px;height:90px;float:right;margin-top:8px;"> <script type="text/javascript">googletag.cmd.push(function(){googletag.display('div-gpt-ad-1415445260332-0');});</script> <div id="google_ads_iframe_/70432299/JCG_Header_0__container__" style="border: 0pt none;"><iframe id="google_ads_iframe_/70432299/JCG_Header_0" title="3rd party ad content" name="google_ads_iframe_/70432299/JCG_Header_0" width="728" height="90" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" style="border: 0px; vertical-align: bottom;" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/saved_resource.html"></iframe></div></div></div><div class="clear"></div></div> <nav id="main-nav" class="fade-in animated2"><div class="container"><div class="main-menu"><ul id="menu-categories" class="menu"><li id="menu-item-38251" class="menu-item  menu-item-type-taxonomy  menu-item-object-category  menu-item-has-children parent-list"><a href="https://www.javacodegeeks.com/category/android/">Android <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-38252" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/android/android-core/">Android Core</a></li><li id="menu-item-38253" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/android/android-games/">Android Games</a></li></ul></li><li id="menu-item-38257" class="menu-item  menu-item-type-taxonomy  menu-item-object-category  current-post-ancestor  menu-item-has-children parent-list"><a href="https://www.javacodegeeks.com/category/java/">Java <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-38258" class="menu-item  menu-item-type-taxonomy  menu-item-object-category  current-post-ancestor  current-menu-parent  current-post-parent"><a href="https://www.javacodegeeks.com/category/java/core-java/">Core Java</a></li><li id="menu-item-38259" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/java/desktop-java/">Desktop Java</a></li><li id="menu-item-38260" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/java/enterprise-java/">Enterprise Java</a></li></ul></li><li id="menu-item-38261" class="menu-item  menu-item-type-taxonomy  menu-item-object-category  menu-item-has-children parent-list"><a href="https://www.javacodegeeks.com/category/jvm-languages/">JVM Languages <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-38262" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/jvm-languages/ceylon/">Ceylon</a></li><li id="menu-item-38263" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/jvm-languages/clojure/">Clojure</a></li><li id="menu-item-38264" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/jvm-languages/groovy/">Groovy</a></li><li id="menu-item-38265" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/jvm-languages/jruby/">JRuby</a></li><li id="menu-item-38266" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/jvm-languages/kotlin/">Kotlin</a></li><li id="menu-item-38267" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/jvm-languages/scala/">Scala</a></li></ul></li><li id="menu-item-38271" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/software-development/">Software Development</a></li><li id="menu-item-38250" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/agile/">Agile</a></li><li id="menu-item-38254" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/career/">Career</a></li><li id="menu-item-38255" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/communications/">Communications</a></li><li id="menu-item-38256" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/devops/">DevOps</a></li><li id="menu-item-38268" class="menu-item  menu-item-type-taxonomy  menu-item-object-category  menu-item-has-children parent-list"><a href="https://www.javacodegeeks.com/category/meta-jcg/">Meta JCG <span class="sub-indicator"></span></a><ul class="sub-menu" style="overflow: hidden; height: 1px; padding-top: 0px; margin-top: 0px; padding-bottom: 0px; margin-bottom: 0px; display: none;"><li id="menu-item-38269" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/meta-jcg/best-of-the-week/">Best Of The Week</a></li><li id="menu-item-38270" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/misc/">Misc</a></li></ul></li></ul><select id="main-menu-mob"><option value="#">Go to...</option><option value="https://www.javacodegeeks.com/category/android/">&nbsp;Android </option><option value="https://www.javacodegeeks.com/category/android/android-core/">&nbsp; &nbsp; –&nbsp;Android Core</option><option value="https://www.javacodegeeks.com/category/android/android-games/">&nbsp; &nbsp; –&nbsp;Android Games</option><option value="https://www.javacodegeeks.com/category/java/">&nbsp;Java </option><option value="https://www.javacodegeeks.com/category/java/core-java/">&nbsp; &nbsp; –&nbsp;Core Java</option><option value="https://www.javacodegeeks.com/category/java/desktop-java/">&nbsp; &nbsp; –&nbsp;Desktop Java</option><option value="https://www.javacodegeeks.com/category/java/enterprise-java/">&nbsp; &nbsp; –&nbsp;Enterprise Java</option><option value="https://www.javacodegeeks.com/category/jvm-languages/">&nbsp;JVM Languages </option><option value="https://www.javacodegeeks.com/category/jvm-languages/ceylon/">&nbsp; &nbsp; –&nbsp;Ceylon</option><option value="https://www.javacodegeeks.com/category/jvm-languages/clojure/">&nbsp; &nbsp; –&nbsp;Clojure</option><option value="https://www.javacodegeeks.com/category/jvm-languages/groovy/">&nbsp; &nbsp; –&nbsp;Groovy</option><option value="https://www.javacodegeeks.com/category/jvm-languages/jruby/">&nbsp; &nbsp; –&nbsp;JRuby</option><option value="https://www.javacodegeeks.com/category/jvm-languages/kotlin/">&nbsp; &nbsp; –&nbsp;Kotlin</option><option value="https://www.javacodegeeks.com/category/jvm-languages/scala/">&nbsp; &nbsp; –&nbsp;Scala</option><option value="https://www.javacodegeeks.com/category/software-development/">&nbsp;Software Development</option><option value="https://www.javacodegeeks.com/category/agile/">&nbsp;Agile</option><option value="https://www.javacodegeeks.com/category/career/">&nbsp;Career</option><option value="https://www.javacodegeeks.com/category/communications/">&nbsp;Communications</option><option value="https://www.javacodegeeks.com/category/devops/">&nbsp;DevOps</option><option value="https://www.javacodegeeks.com/category/meta-jcg/">&nbsp;Meta JCG </option><option value="https://www.javacodegeeks.com/category/meta-jcg/best-of-the-week/">&nbsp; &nbsp; –&nbsp;Best Of The Week</option><option value="https://www.javacodegeeks.com/category/misc/">&nbsp; &nbsp; –&nbsp;Misc</option></select></div></div> </nav> </header><div id="main-content" class="container fade-in animated3 sidebar-narrow-left"><div class="content-wrap-wide"><div class="content"><div xmlns:v="http://rdf.data-vocabulary.org/#" id="crumbs"><span typeof="v:Breadcrumb"><a rel="v:url" property="v:title" class="crumbs-home" href="https://www.javacodegeeks.com/"><i class="tieicon-home"></i>Home</a></span> » <span typeof="v:Breadcrumb"><a rel="v:url" property="v:title" href="https://www.javacodegeeks.com/category/java/">Java</a></span> » <span typeof="v:Breadcrumb"><a rel="v:url" property="v:title" href="https://www.javacodegeeks.com/category/java/core-java/">Core Java</a></span> » <span class="current">JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)</span></div> <section id="author-box"><div class="block-head"><h3>About Konstantina Dimtsa</h3></div><div class="post-listing"><div class="author-avatar"> <img src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/profile_photo-80.jpg" class="func-um_user gravatar avatar avatar-60 um-avatar um-avatar-uploaded" width="60" height="60" alt="Konstantina Dimtsa"></div><div class="author-description"> Konstantina has graduated from the Department of Informatics and Telecommunications in National and Kapodistrian University of Athens (NKUA) and she is currently pursuing M.Sc studies in Advanced Information Systems at the same department. She is also working as a research associate for NKUA in the field of telecommunications. Her main interests lie in software engineering, web applications, databases and telecommunications.</div><div class="author-social"> <a class="ttip" href="http://www.javacodegeeks.com/" original-title="Konstantina Dimtsa &#39;s site"><img src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/author_site.png" width="18" height="18" alt=""></a></div><div class="clear"></div></div> </section> <article id="the-post" class="post-listing post-31893 post type-post status-publish format-standard has-post-thumbnail hentry category-core-java tag-junit tag-testing tag-ultimate"><div class="post-inner"><h1 class="name post-title entry-title" itemprop="itemReviewed" itemscope="" itemtype="http://schema.org/Thing"><span itemprop="name">JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)</span></h1><p class="post-meta"> <span class="post-meta-author">Posted by:  <a href="https://www.javacodegeeks.com/author/konstantina-dimtsa/" title="">Konstantina Dimtsa </a></span> <span class="post-cats">in  <a href="https://www.javacodegeeks.com/category/java/core-java/" rel="category tag">Core Java</a></span> <span class="tie-date">November 10th, 2014</span></p><div class="clear"></div><div class="entry"><div class="e3lan-post"><div id="div-gpt-ad-1415445260332-2" style="width:300px; height:250px;float:left; margin-right:20px;"> <script type="text/javascript">googletag.cmd.push(function(){googletag.display('div-gpt-ad-1415445260332-2');});</script> <div id="google_ads_iframe_/70432299/JCG_In-post_0__container__" style="border: 0pt none;"><iframe id="google_ads_iframe_/70432299/JCG_In-post_0" title="3rd party ad content" name="google_ads_iframe_/70432299/JCG_In-post_0" width="300" height="250" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" style="border: 0px; vertical-align: bottom;" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/saved_resource(1).html"></iframe></div></div></div><p><strong>EDITORIAL NOTE:</strong> <em>We have provided plenty of <a href="http://junit.org/">JUnit</a> tutorials here at Java Code Geeks, like <a href="http://examples.javacodegeeks.com/core-java/junit/junit-getting-started-example/">JUnit Getting Started Example</a>, <a href="http://examples.javacodegeeks.com/core-java/junit/junit-using-assertions-and-annotations-example/">JUnit Using Assertions and Annotations Example</a>, <a href="http://examples.javacodegeeks.com/core-java/junit/junit-annotations-example/">JUnit Annotations Example</a> and so on.</em></p><p><em>However, we prefered to gather all the <a href="http://junit.org/">JUnit</a> features in one detailed guide for the convenience of the reader. We hope you like it!</em></p><p>&nbsp;<br> &nbsp;<br> &nbsp;<br> &nbsp;<br> &nbsp;<br> <script type="text/javascript">(function(){if(!window.mc4wp){window.mc4wp={listeners:[],forms:{on:function(event,callback){window.mc4wp.listeners.push({event:event,callback:callback});}}}}})();</script></p><form id="mc4wp-form-1" class="mc4wp-form mc4wp-form-33142 mc4wp-form-theme mc4wp-form-theme-red mc4wp-ajax" method="post" data-id="33142" data-name="JUnit"><div class="mc4wp-form-fields"><div class="nlbox" style="font-family: Tahoma,Arial,Verdana,sans-serif; font-size: 13px;"><h1 style="font-family: inherit; font-size: 2em; margin: 0; text-align: center;">Want to be a JUnit Master ?</h1><div style="background: url(&#39;/wp-content/uploads/2014/11/junit_book.png&#39;) no-repeat; float:left; padding: 75px 120px 240px; margin-top: -10px;"></div><table style="margin-top: 20px; border: none; background-color: inherit; width: inherit; font-family: inherit; padding-left: 20px;"><tbody><tr><td style="vertical-align:top; border: none; padding: 0; font-size: inherit;"><h2 style="font-family: inherit; font-size: 1.5em; margin: 0;">Subscribe to our newsletter and download the JUnit <span style="color: #CAB43D; text-shadow: 1px 1px #835D5D;">Ultimate</span> Guide <span style="text-decoration: underline;">right now!</span></h2><h5>In order to help you master unit testing with JUnit, we have compiled a kick-ass guide with all the major JUnit features and use cases! Besides studying them online you may download the eBook in PDF format!</h5><p>&nbsp;</p><p> <label for="mc4wp_email"><span style="font-weight: bold; font-size: 13pt;">Email address: </span></label> <input type="email" id="mc4wp_email" name="EMAIL" required="" placeholder="Your email address"></p> <input type="submit" value="Sign up"></td></tr></tbody></table></div><div style="display: none;"><input type="text" name="_mc4wp_honeypot" value="" tabindex="-1" autocomplete="off"></div><input type="hidden" name="_mc4wp_timestamp" value="1496544225"><input type="hidden" name="_mc4wp_form_id" value="33142"><input type="hidden" name="_mc4wp_form_element_id" value="mc4wp-form-1"></div><div class="mc4wp-response"></div></form><div class="toc"><h3>Table Of Contents</h3><dl><dt><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#unit_testing_intro">1. Unit testing introduction</a></dt><dd><dl><dt><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#definition">1.1. What is unit testing?</a></dt><dt><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#test_coverage">1.2. Test coverage</a></dt><dt><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#unit_testing_java">1.3.Unit testing in Java</a></dt></dl></dd><dt><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#junit_intro">2. JUnit introduction</a></dt><dd><dl><dt><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#simple_example">2.1. JUnit Simple Example using Eclipse</a></dt><dt><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#annotations">2.2. JUnit annotations</a></dt><dt><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#assertions">2.3. JUnit assertions</a></dt></dl></dd><dt><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#full_example">3. JUnit complete example using Eclipse</a></dt><dd><dl><dt><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#initial_steps">3.1. Initial steps</a></dt><dt><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#simple_class">3.2. Create a java class to be tested</a></dt><dt><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#creation_run">3.3. Create and run a JUnit test case</a></dt><dt><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#ignore">3.4. Using @Ignore annotation</a></dt><dt><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#suite_tests">3.5. Creating suite tests</a></dt><dt><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#parameterized">3.6. Creating parameterized tests</a></dt><dt><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#rules">3.7. Rules</a></dt><dt><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#categories">3.8. Categories</a></dt></dl></dd><dt><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#command_line">4. Run JUnit tests from command line</a></dt><dt><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#conclusions">5. Conclusions</a></dt></dl></div><p>&nbsp;</p><h2><a name="unit_testing_intro"></a>1. Unit testing introduction</h2><h3><a name="definition"></a>1.1. What is unit testing?</h3><p>A unit can be a function, a class, a package, or a subsystem. So, the term unit testing refers to the practice of testing such small units of your code, so as to ensure that they work as expected. For example, we can test whether an output is what we expected to see given some inputs or if a condition is true or false.</p><p>This practice helps developers to discover failures in their logic behind their code and improve the quality of their code. Also, unit testing can be used so as to ensure that the code will work as expected in case of future changes.</p><h3><a name="test_coverage"></a>1.2. Test coverage</h3><p>In general, the development community has different opinion regarding the percentage of code that should be tested (test coverage). Some developers believe that the code should have 100% test coverage, while others are comprised with a test coverage of 50% or less. In any case, you should write tests for complex or critical parts of your code.</p><h3><a name="unit_testing_java"></a>1.3. Unit testing in Java</h3><p>The most popular testing framework in Java is <a href="http://junit.org/">JUnit</a>. As this guide is focused to JUnit, more details for this testing framework will presented in the next sections. Another popular testing framework in Java is <a href="http://testng.org/doc/index.html">TestNG</a>.</p><h2><a name="junit_intro"></a>2. JUnit introduction</h2><p><a href="http://junit.org/">JUnit</a> is an open source testing framework which is used to write and run repeatable automated tests, so that we can be ensured that our code works as expected. <a href="http://junit.org/">JUnit</a> is widely used in industry and can be used as stand alone Java program (from the command line) or within an IDE such as Eclipse.</p><p>JUnit provides:</p><ul><li>Assertions for testing expected results.</li><li>Test features for sharing common test data.</li><li>Test suites for easily organizing and running tests.</li><li>Graphical and textual test runners.</li></ul><p>JUnit is used to test:</p><ul><li>an entire object</li><li>part of an object – a method or some interacting methods</li><li>interaction between several objects</li></ul><h3><a name="simple_example"></a>2.1. JUnit Simple Example using Eclipse</h3><p>In this section we will see a simple <a href="http://junit.org/">JUnit</a> example. First we will present the class we would like to test:</p><p><span style="text-decoration: underline"><em>Calculate.java</em></span></p><div id="highlighter_562178" class="syntaxhighlighter  "><div class="bar "><div class="toolbar"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>01</code></td><td class="content"><code class="keyword">package</code> <code class="plain">com.javacodegeeks.junit;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>02</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>03</code></td><td class="content"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">Calculate {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>04</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>05</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">int</code> <code class="plain">sum(</code><code class="keyword">int</code> <code class="plain">var1, </code><code class="keyword">int</code> <code class="plain">var2) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>06</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">System.out.println(</code><code class="string">"Adding values: "</code> <code class="plain">+ var1 + </code><code class="string">" + "</code> <code class="plain">+ var2);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>07</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">return</code> <code class="plain">var1 + var2;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>08</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>09</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>10</code></td><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div><p>In the above source code, we can notice that the class has one public method named <code>sum()</code>, which gets as inputs two integers, adds them and returns the result. So, we will test this method. For this purpose, we will create another class including methods that will test each one of the methods of the previous class (in this case, we have only one method to be tested). This is the most common way of usage. Of course, if a method is very complex and extended, we can have more than one test methods for this complex method. The details of creating test cases will be presented in the next sections. Below, there is the code of the class named <code>CalculateTest.java</code>, which has the role of our test class:</p><p><span style="text-decoration: underline"><em>CalculateTest.java</em></span></p><div id="highlighter_907450" class="syntaxhighlighter  "><div class="bar"><div class="toolbar"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>01</code></td><td class="content"><code class="keyword">package</code> <code class="plain">com.javacodegeeks.junit;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>02</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>03</code></td><td class="content"><code class="keyword">import</code> <code class="keyword">static</code> <code class="plain">org.junit.Assert.*;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>04</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>05</code></td><td class="content"><code class="keyword">import</code> <code class="plain">org.junit.Test;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>06</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>07</code></td><td class="content"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">CalculateTest {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>08</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>09</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">Calculate calculation = </code><code class="keyword">new</code> <code class="plain">Calculate();</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>10</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">int</code> <code class="plain">sum = calculation.sum(</code><code class="value">2</code><code class="plain">, </code><code class="value">5</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>11</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">int</code> <code class="plain">testSum = </code><code class="value">7</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>12</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>13</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color1">@Test</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>14</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testSum() {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>15</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">System.out.println(</code><code class="string">"@Test sum(): "</code> <code class="plain">+ sum + </code><code class="string">" = "</code> <code class="plain">+ testSum);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>16</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">assertEquals(sum, testSum);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>17</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>18</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>19</code></td><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div><p>Let’s explain the above code. Firstly, we can see that there is a <code>@Test</code> annotation above the <code>testSum()</code> method. This annotation indicates that the public void method to which it is attached can be run as a test case. Hence, the <code>testSum()</code> method is the method that will test the <code>sum()</code> public method. We can also observe a method called <code>assertEquals(sum, testsum)</code>. The method <code>assertEquals ([String message], object expected, object actual)</code> takes as inputs two objects and asserts that the two objects are equal.</p><p>If we run the test class, by right-clicking in the test class and select <em>Run As -&gt; Junit Test</em>, the program output will look like that:</p><div id="highlighter_547633" class="syntaxhighlighter  "><div class="bar"><div class="toolbar"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="plain">Adding values: 2 + 5</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="plain">@Test </code><code class="functions">sum</code><code class="plain">(): 7 = 7</code></td></tr></tbody></table></div></div></div><p>To see the actual result of a JUnit test, Eclipse IDE provides a JUnit window which shows the results of the tests. In this case where the test succeeds, the JUnit window does not show any errors or failures, as we can see in the image below:</p><div id="attachment_32071" style="width: 531px" class="wp-caption aligncenter"><a href="http://www.javacodegeeks.com/wp-content/uploads/2014/10/everythingOKwater.png"><img src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/everythingOKwater.png" alt="Figure 1" width="521" height="444" class="size-full wp-image-32071" srcset="//www.javacodegeeks.com/wp-content/uploads/2014/10/everythingOKwater.png 521w, //www.javacodegeeks.com/wp-content/uploads/2014/10/everythingOKwater-300x255.png 300w" sizes="(max-width: 521px) 100vw, 521px"></a><p class="wp-caption-text">Figure 1: JUnit window after a successful test.</p></div><p>Now, if we change this line of code:</p><div id="highlighter_838036" class="syntaxhighlighter  "><div class="bar"><div class="toolbar"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="keyword">int</code> <code class="plain">testSum = </code><code class="value">10</code><code class="plain">;</code></td></tr></tbody></table></div></div></div><p>so that the integers to be tested are not equal, the output will be:</p><div id="highlighter_86631" class="syntaxhighlighter  "><div class="bar"><div class="toolbar"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="plain">Adding values: 2 + 5</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="plain">@Test </code><code class="functions">sum</code><code class="plain">(): 7 = 10</code></td></tr></tbody></table></div></div></div><p>And in the JUnit window, an error will appear and this message will be displayed:</p><div id="highlighter_994060" class="syntaxhighlighter  "><div class="bar"><div class="toolbar"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="plain">java.lang.AssertionError: expected: but was:</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="plain">at com.javacodegeeks.junit.CalculateTest.testSum(CalculateTest.java:16)</code></td></tr></tbody></table></div></div></div><h3><a name="annotations"></a>2.2. JUnit annotations</h3><p>In this section we will mention the basic annotations supported in Junit 4. The table below presents a summary of those annotations:</p><table border="2"><tbody><tr><th style="width: 250px;background-color:#dedede"><strong>Annotation</strong></th><th style="background-color:#dedede"><strong>Description</strong></th></tr><tr style="height:70px"><td><code><strong> @Test</strong><br> public void method() </code></td><td>The <code>Test</code> annotation indicates that the public void method to which it is attached can be run as a test case.</td></tr><tr style="height:70px"><td><code><strong> @Before</strong><br> public void method() </code></td><td>The <code>Before</code> annotation indicates that this method must be executed before each test in the class, so as to execute some preconditions necessary for the test.</td></tr><tr style="height:70px"><td><code><strong> @BeforeClass</strong><br> public static void method() </code></td><td>The <code>BeforeClass</code> annotation indicates that the static method to which is attached must be executed once and before all tests in the class. That happens when the test methods share computationally expensive setup (e.g. connect to database).</td></tr><tr style="height:70px"><td><code><strong> @After</strong><br> public void method() </code></td><td>The <code>After</code> annotation indicates that this method gets executed after execution of each test (e.g. reset some variables after execution of every test, delete temporary variables etc)</td></tr><tr style="height:70px"><td><code><strong> @AfterClass</strong><br> public static void method() </code></td><td>The <code>AfterClass</code> annotation can be used when a method needs to be executed after executing all the tests in a JUnit Test Case class so as to clean-up the expensive set-up (e.g disconnect from a database). Attention: The method attached with this annotation (similar to <code>BeforeClass</code>) must be defined as static.</td></tr><tr style="height:70px"><td><code><strong> @Ignore</strong><br> public static void method() </code></td><td>The <code>Ignore</code> annotation can be used when you want temporarily disable the execution of a specific test. Every method that is annotated with <code>@Ignore</code> won’t be executed.</td></tr></tbody></table><p>&nbsp;<br> Let’s see an example of a test class with some of the annotations mentioned above.</p><p><span style="text-decoration: underline"><em>AnnotationsTest.java</em></span></p><div id="highlighter_647474" class="syntaxhighlighter  "><div class="bar              "><div class="toolbar"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>01</code></td><td class="content"><code class="keyword">package</code> <code class="plain">com.javacodegeeks.junit;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>02</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>03</code></td><td class="content"><code class="keyword">import</code> <code class="keyword">static</code> <code class="plain">org.junit.Assert.*;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>04</code></td><td class="content"><code class="keyword">import</code> <code class="plain">java.util.*;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>05</code></td><td class="content"><code class="keyword">import</code> <code class="plain">org.junit.*;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>06</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>07</code></td><td class="content"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">AnnotationsTest {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>08</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>09</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">private</code> <code class="plain">ArrayList testList;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>10</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>11</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color1">@BeforeClass</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>12</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">static</code> <code class="keyword">void</code> <code class="plain">onceExecutedBeforeAll() {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>13</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">System.out.println(</code><code class="string">"@BeforeClass: onceExecutedBeforeAll"</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>14</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>15</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>16</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color1">@Before</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>17</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">executedBeforeEach() {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>18</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">testList = </code><code class="keyword">new</code> <code class="plain">ArrayList();</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>19</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">System.out.println(</code><code class="string">"@Before: executedBeforeEach"</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>20</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>21</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>22</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color1">@AfterClass</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>23</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">static</code> <code class="keyword">void</code> <code class="plain">onceExecutedAfterAll() {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>24</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">System.out.println(</code><code class="string">"@AfterClass: onceExecutedAfterAll"</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>25</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>26</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>27</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color1">@After</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>28</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">executedAfterEach() {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>29</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">testList.clear();</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>30</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">System.out.println(</code><code class="string">"@After: executedAfterEach"</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>31</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>32</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>33</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color1">@Test</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>34</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">EmptyCollection() {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>35</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">assertTrue(testList.isEmpty());</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>36</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">System.out.println(</code><code class="string">"@Test: EmptyArrayList"</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>37</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>38</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>39</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>40</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color1">@Test</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>41</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">OneItemCollection() {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>42</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">testList.add(</code><code class="string">"oneItem"</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>43</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">assertEquals(</code><code class="value">1</code><code class="plain">, testList.size());</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>44</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">System.out.println(</code><code class="string">"@Test: OneItemArrayList"</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>45</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>46</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>47</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color1">@Ignore</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>48</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">executionIgnored() {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>49</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>50</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">System.out.println(</code><code class="string">"@Ignore: This execution is ignored"</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>51</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>52</code></td><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div><p>If we run the above test, the console output would be the following:</p><div id="highlighter_290715" class="syntaxhighlighter  "><div class="bar       "><div class="toolbar"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="plain">@BeforeClass: onceExecutedBeforeAll</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="plain">@Before: executedBeforeEach</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>3</code></td><td class="content"><code class="plain">@Test: EmptyArrayList</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>4</code></td><td class="content"><code class="plain">@After: executedAfterEach</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>5</code></td><td class="content"><code class="plain">@Before: executedBeforeEach</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>6</code></td><td class="content"><code class="plain">@Test: OneItemArrayList</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>7</code></td><td class="content"><code class="plain">@After: executedAfterEach</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>8</code></td><td class="content"><code class="plain">@AfterClass: onceExecutedAfterAll</code></td></tr></tbody></table></div></div></div><h3><a name="assertions"></a>2.3. JUnit assertions</h3><p>In this section we will present a number of assertion methods. All those methods are provided by the <code>Assert</code> class which extends the <code>class java.lang.Object</code> and they are useful for writing tests so as to detect failures. In the table below there is a more detailed explanation of the most commonly used assertion methods.</p><table border="2"><tbody><tr><th style="background-color:#dedede"><strong>Assertion</strong></th><th style="background-color:#dedede"><strong>Description</strong></th></tr><tr style="height:70px"><td><code>void assertEquals([String message], expected value, actual value)</code></td><td>Asserts that two values are equal. Values might be type of int, short, long, byte, char or java.lang.Object. The first argument is an optional String message.</td></tr><tr style="height:70px"><td><code>void assertTrue([String message], boolean condition)</code></td><td>Asserts that a condition is true.</td></tr><tr style="height:70px"><td><code>void assertFalse([String message],boolean condition)</code></td><td>Asserts that a condition is false.</td></tr><tr style="height:70px"><td><code>void assertNotNull([String message], java.lang.Object object)</code></td><td>Asserts that an object is not null.</td></tr><tr style="height:70px"><td><code>void assertNull([String message], java.lang.Object object)</code></td><td>Asserts that an object is null.</td></tr><tr style="height:70px"><td><code>void assertSame([String message], java.lang.Object expected, java.lang.Object actual)</code></td><td>Asserts that the two objects refer to the same object.</td></tr><tr style="height:70px"><td><code>void assertNotSame([String message], java.lang.Object unexpected, java.lang.Object actual)</code></td><td>Asserts that the two objects do not refer to the same object.</td></tr><tr style="height:70px"><td><code>void assertArrayEquals([String message], expectedArray, resultArray)</code></td><td>Asserts that the array expected and the resulted array are equal. The type of Array might be int, long, short, char, byte or java.lang.Object.</td></tr></tbody></table><p>&nbsp;<br> Let’s see an example of some of the aforementioned assertions.</p><p><span style="text-decoration: underline"><em>AssertionsTest.java</em></span></p><div id="highlighter_120635" class="syntaxhighlighter  "><div class="bar"><div class="toolbar"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>01</code></td><td class="content"><code class="keyword">package</code> <code class="plain">com.javacodegeeks.junit;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>02</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>03</code></td><td class="content"><code class="keyword">import</code> <code class="keyword">static</code> <code class="plain">org.junit.Assert.*;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>04</code></td><td class="content"><code class="keyword">import</code> <code class="plain">org.junit.Test;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>05</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>06</code></td><td class="content"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">AssertionsTest {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>07</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>08</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color1">@Test</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>09</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">test() {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>10</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">String obj1 = </code><code class="string">"junit"</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>11</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">String obj2 = </code><code class="string">"junit"</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>12</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">String obj3 = </code><code class="string">"test"</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>13</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">String obj4 = </code><code class="string">"test"</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>14</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">String obj5 = </code><code class="keyword">null</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>15</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">int</code> <code class="plain">var1 = </code><code class="value">1</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>16</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">int</code> <code class="plain">var2 = </code><code class="value">2</code><code class="plain">;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>17</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">int</code><code class="plain">[] arithmetic1 = { </code><code class="value">1</code><code class="plain">, </code><code class="value">2</code><code class="plain">, </code><code class="value">3</code> <code class="plain">};</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>18</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">int</code><code class="plain">[] arithmetic2 = { </code><code class="value">1</code><code class="plain">, </code><code class="value">2</code><code class="plain">, </code><code class="value">3</code> <code class="plain">};</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>19</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>20</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">assertEquals(obj1, obj2);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>21</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>22</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">assertSame(obj3, obj4);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>23</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>24</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">assertNotSame(obj2, obj4);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>25</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>26</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">assertNotNull(obj1);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>27</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>28</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">assertNull(obj5);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>29</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>30</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">assertTrue(var1&nbsp; var2);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>31</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>32</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">assertArrayEquals(arithmetic1, arithmetic2);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>33</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>34</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>35</code></td><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div><p>In the class above we can see how these assert methods work.</p><ul><li>The <code>assertEquals()</code> method will return normally if the two compared objects are equal, otherwise a failure will be displayed in the JUnit window and the test will abort.</li><li>The <code>assertSame()</code> and <code>assertNotSame()</code> methods tests if two object references point to exactly the same object.</li><li>The <code>assertNull()</code> and <code>assertNotNull()</code> methods test whether a variable is null or not null.</li><li>The <code>assertTrue()</code> and <code>assertFalse()</code> methods tests if a condition or a variable is true or false.</li><li>The <code>assertArrayEquals()</code> will compare the two arrays and if they are equal, the method will proceed without errors. Otherwise, a failure will be displayed in the JUnit window and the test will abort.</li></ul><h2><a name="full_example"></a>3. JUnit complete example using Eclipse</h2><p>In this section we will show a complete example of using JUnit. We will see in detail how to create and run tests and we will show how to use specific annotations and assertions of JUnit.</p><h3><a name="initial_steps"></a>3.1. Initial Steps</h3><p>Let’s create a java project named <em>JUnitGuide</em>. In the <em>src</em> folder, we right-click and select <em>New -&gt; Package</em>, so as to create a new package named <code>com.javacodegeeks.junit</code> where we will locate the class to be tested. For the test classes, it is considered as good practice to create a new source folder dedicated to tests, so that the classes to be tested and the test classes will be in different source folders. For this purpose, right-click your project, select <em>New -&gt; Source Folder</em>, name the new source folder test and click <em>Finish</em>.</p><div id="attachment_31948" style="width: 538px" class="wp-caption aligncenter"><a href="http://www.javacodegeeks.com/wp-content/uploads/2014/10/waterjunitGuide_testFolder1.png"><img src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/waterjunitGuide_testFolder1.png" alt="Create a new source folder named test." width="528" height="503" class="size-full wp-image-31948" srcset="//www.javacodegeeks.com/wp-content/uploads/2014/10/waterjunitGuide_testFolder1.png 528w, //www.javacodegeeks.com/wp-content/uploads/2014/10/waterjunitGuide_testFolder1-300x285.png 300w" sizes="(max-width: 528px) 100vw, 528px"></a><p class="wp-caption-text">Figure 2: Create a new source folder named <em>test</em>.</p></div><div class="tip"><strong>Tip</strong><br>Alternatively, you can create a new source folder by right-clicking your project and select <em>Properties -&gt; Java Build Path</em>, select the tab <em>Source</em>, select <em>Add Folder -&gt; Create New Folder</em>, write the name <em>test</em> and press <em>Finish</em>.</div><p>You can easily see that there are two source folders in your project:</p><div id="attachment_31949" style="width: 740px" class="wp-caption aligncenter"><a href="http://www.javacodegeeks.com/wp-content/uploads/2014/10/waterJunit_guide_test_folder2.png"><img src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/waterJunit_guide_test_folder2.png" alt="Figure 2" width="730" height="556" class="size-full wp-image-31949" srcset="//www.javacodegeeks.com/wp-content/uploads/2014/10/waterJunit_guide_test_folder2.png 730w, //www.javacodegeeks.com/wp-content/uploads/2014/10/waterJunit_guide_test_folder2-300x228.png 300w" sizes="(max-width: 730px) 100vw, 730px"></a><p class="wp-caption-text">Figure 3</p></div><p>You can also create a new package in the newly created test folder, which will be called <code>com.javacodegeeks.junit</code>, so that your test classes won’t be located to the default package and we are ready to start!</p><h3><a name="simple_class"></a>3.2. Create the java class to be tested</h3><p>Right-click the <em>src</em> folder and create a new java class called <code>FirstDayAtSchool.java</code>. This will be the class whose public methods will be tested.</p><p><span style="text-decoration: underline"><em>FirstDayAtSchool.java</em></span></p><div id="highlighter_123871" class="syntaxhighlighter  "><div class="bar"><div class="toolbar"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>01</code></td><td class="content"><code class="keyword">package</code> <code class="plain">com.javacodegeeks.junit;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>02</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>03</code></td><td class="content"><code class="keyword">import</code> <code class="plain">java.util.Arrays;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>04</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>05</code></td><td class="content"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">FirstDayAtSchool {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>06</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>07</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="plain">String[] prepareMyBag() {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>08</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">String[] schoolbag = { </code><code class="string">"Books"</code><code class="plain">, </code><code class="string">"Notebooks"</code><code class="plain">, </code><code class="string">"Pens"</code> <code class="plain">};</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>09</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">System.out.println(</code><code class="string">"My school bag contains: "</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>10</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">+ Arrays.toString(schoolbag));</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>11</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">return</code> <code class="plain">schoolbag;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>12</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>13</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>14</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="plain">String[] addPencils() {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>15</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">String[] schoolbag = { </code><code class="string">"Books"</code><code class="plain">, </code><code class="string">"Notebooks"</code><code class="plain">, </code><code class="string">"Pens"</code><code class="plain">, </code><code class="string">"Pencils"</code> <code class="plain">};</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>16</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">System.out.println(</code><code class="string">"Now my school bag contains: "</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>17</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">+ Arrays.toString(schoolbag));</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>18</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">return</code> <code class="plain">schoolbag;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>19</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>20</code></td><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div><h3><a name="creation_run"></a>3.3. Create and run a JUnit test case</h3><p>To create a JUnit test case for the existing class <code>FirstDayAtSchool.java</code>, right-click on it in the Package Explorer view and select <em>New → JUnit Test Case</em>. Change the source folder so that the class will be located to <em>test</em> source folder and ensure that the flag <em>New JUnit4 test</em> is selected.</p><div id="attachment_31955" style="width: 537px" class="wp-caption aligncenter"><a href="http://www.javacodegeeks.com/wp-content/uploads/2014/10/water_new_test.png"><img src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/water_new_test.png" alt="Create a new test class." width="527" height="605" class="size-full wp-image-31955" srcset="//www.javacodegeeks.com/wp-content/uploads/2014/10/water_new_test.png 527w, //www.javacodegeeks.com/wp-content/uploads/2014/10/water_new_test-261x300.png 261w" sizes="(max-width: 527px) 100vw, 527px"></a><p class="wp-caption-text">Figure 4: Create a new test class.</p></div><p>Then, click <em>Finish</em>. If your project does not contain the JUnit library in its classpath, the following message will be displayed so as to add the JUnit library to the classpath:</p><div id="attachment_31953" style="width: 537px" class="wp-caption aligncenter"><a href="http://www.javacodegeeks.com/wp-content/uploads/2014/10/water_new_test1.png"><img src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/water_new_test1.png" alt="Add JUnit4 library to your project&#39;s build path." width="527" height="605" class="size-full wp-image-31953" srcset="//www.javacodegeeks.com/wp-content/uploads/2014/10/water_new_test1.png 527w, //www.javacodegeeks.com/wp-content/uploads/2014/10/water_new_test1-261x300.png 261w" sizes="(max-width: 527px) 100vw, 527px"></a><p class="wp-caption-text">Figure 5: Add JUnit4 library to your project’s build path.</p></div><p>Below, there is the code of the class named <code>FirstDayAtSchoolTest.java</code>, which is our test class:</p><p><span style="text-decoration: underline"><em>FirstDayAtSchool.java</em></span></p><div id="highlighter_946646" class="syntaxhighlighter  "><div class="bar"><div class="toolbar"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>01</code></td><td class="content"><code class="keyword">package</code> <code class="plain">com.javacodegeeks.junit;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>02</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>03</code></td><td class="content"><code class="keyword">import</code> <code class="keyword">static</code> <code class="plain">org.junit.Assert.*;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>04</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>05</code></td><td class="content"><code class="keyword">import</code> <code class="plain">org.junit.Test;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>06</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>07</code></td><td class="content"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">FirstDayAtSchoolTest {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>08</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>09</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">FirstDayAtSchool school = </code><code class="keyword">new</code> <code class="plain">FirstDayAtSchool();</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>10</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">String[] bag1 = { </code><code class="string">"Books"</code><code class="plain">, </code><code class="string">"Notebooks"</code><code class="plain">, </code><code class="string">"Pens"</code> <code class="plain">};</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>11</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">String[] bag2 = { </code><code class="string">"Books"</code><code class="plain">, </code><code class="string">"Notebooks"</code><code class="plain">, </code><code class="string">"Pens"</code><code class="plain">, </code><code class="string">"Pencils"</code> <code class="plain">};</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>12</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>13</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color1">@Test</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>14</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testPrepareMyBag() {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>15</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">System.out.println(</code><code class="string">"Inside testPrepareMyBag()"</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>16</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">assertArrayEquals(bag1, school.prepareMyBag());</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>17</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>18</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>19</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color1">@Test</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>20</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testAddPencils() {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>21</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">System.out.println(</code><code class="string">"Inside testAddPencils()"</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>22</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">assertArrayEquals(bag2, school.addPencils());</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>23</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>24</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>25</code></td><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div><p>Now we can run the test case by right-clicking on the test class and select <em>Run As -&gt; JUnit Test</em>.</p><p>The program output will look like that:</p><div id="highlighter_651538" class="syntaxhighlighter  "><div class="bar"><div class="toolbar"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="plain">Inside testPrepareMyBag()</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="plain">My school bag contains: [Books, Notebooks, Pens]</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>3</code></td><td class="content"><code class="plain">Inside testAddPencils()</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>4</code></td><td class="content"><code class="plain">Now my school bag contains: [Books, Notebooks, Pens, Pencils]</code></td></tr></tbody></table></div></div></div><p>and in the JUnit view will be no failures or erros. If we change one of the arrays, so that it contains more than the expected elements:</p><div id="highlighter_607603" class="syntaxhighlighter  "><div class="bar"><div class="toolbar"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="plain">String[] bag2 = { </code><code class="string">"Books"</code><code class="plain">, </code><code class="string">"Notebooks"</code><code class="plain">, </code><code class="string">"Pens"</code><code class="plain">, </code><code class="string">"Pencils"</code><code class="plain">, </code><code class="string">"Rulers"</code><code class="plain">};</code></td></tr></tbody></table></div></div></div><p>and we run again the test class, the JUnit view will contain a failure:</p><div id="attachment_31957" style="width: 556px" class="wp-caption aligncenter"><a href="http://www.javacodegeeks.com/wp-content/uploads/2014/10/water_failure1.png"><img src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/water_failure1.png" alt="Test failure" width="546" height="474" class="size-full wp-image-31957" srcset="//www.javacodegeeks.com/wp-content/uploads/2014/10/water_failure1.png 546w, //www.javacodegeeks.com/wp-content/uploads/2014/10/water_failure1-300x260.png 300w" sizes="(max-width: 546px) 100vw, 546px"></a><p class="wp-caption-text">Figure 6: Test failure</p></div><p>Else, if we change again one of the arrays, so that it contains a different element than the expected:</p><div id="highlighter_617755" class="syntaxhighlighter  "><div class="bar"><div class="toolbar"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="plain">String[] bag1 = { </code><code class="string">"Books"</code><code class="plain">, </code><code class="string">"Notebooks"</code><code class="plain">, </code><code class="string">"Rulers"</code> <code class="plain">};</code></td></tr></tbody></table></div></div></div><p>and we run again the test class, the JUnit view will contain once again a failure:</p><div id="attachment_31958" style="width: 595px" class="wp-caption aligncenter"><a href="http://www.javacodegeeks.com/wp-content/uploads/2014/10/water_failure2.png"><img src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/water_failure2.png" alt="Test failure" width="585" height="499" class="size-full wp-image-31958" srcset="//www.javacodegeeks.com/wp-content/uploads/2014/10/water_failure2.png 585w, //www.javacodegeeks.com/wp-content/uploads/2014/10/water_failure2-300x255.png 300w" sizes="(max-width: 585px) 100vw, 585px"></a><p class="wp-caption-text">Figure 7: Test failure</p></div><h3><a name="ignore"></a>3.4. Using <code>@Ignore</code> annotation</h3><p>Let’s see in the above example how can we use the <code>@Ignore</code> annotation. In the test class <code>FirstDayAtSchoolTest</code> we will add the <code>@Ignore</code> annotation to the <code>testAddPencils()</code> method. In that way, we expect that this testing method will be ignored and won’t be executed.</p><div id="highlighter_840864" class="syntaxhighlighter  "><div class="bar"><div class="toolbar"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>01</code></td><td class="content"><code class="keyword">package</code> <code class="plain">com.javacodegeeks.junit;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>02</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>03</code></td><td class="content"><code class="keyword">import</code> <code class="keyword">static</code> <code class="plain">org.junit.Assert.*;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>04</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>05</code></td><td class="content"><code class="keyword">import</code> <code class="plain">org.junit.Ignore;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>06</code></td><td class="content"><code class="keyword">import</code> <code class="plain">org.junit.Test;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>07</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>08</code></td><td class="content"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">FirstDayAtSchoolTest {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>09</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>10</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">FirstDayAtSchool school = </code><code class="keyword">new</code> <code class="plain">FirstDayAtSchool();</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>11</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">String[] bag1 = { </code><code class="string">"Books"</code><code class="plain">, </code><code class="string">"Notebooks"</code><code class="plain">, </code><code class="string">"Pens"</code> <code class="plain">};</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>12</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">String[] bag2 = { </code><code class="string">"Books"</code><code class="plain">, </code><code class="string">"Notebooks"</code><code class="plain">, </code><code class="string">"Pens"</code><code class="plain">, </code><code class="string">"Pencils"</code> <code class="plain">};</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>13</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>14</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color1">@Test</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>15</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testPrepareMyBag() {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>16</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">System.out.println(</code><code class="string">"Inside testPrepareMyBag()"</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>17</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">assertArrayEquals(bag1, school.prepareMyBag());</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>18</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>19</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>20</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color1">@Ignore</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>21</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color1">@Test</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>22</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testAddPencils() {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>23</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">System.out.println(</code><code class="string">"Inside testAddPencils()"</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>24</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">assertArrayEquals(bag2, school.addPencils());</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>25</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>26</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>27</code></td><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div><p>Indeed, this is what happens according to the output:</p><div id="highlighter_251412" class="syntaxhighlighter  "><div class="bar"><div class="toolbar"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="plain">Inside testPrepareMyBag()</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="plain">My school bag contains: [Books, Notebooks, Pens]</code></td></tr></tbody></table></div></div></div><p>Now, we will remove the <code>@Ignore</code> annotation from the <code>testAddPencils()</code> method and we will annotate the whole class instead.</p><div id="highlighter_252574" class="syntaxhighlighter  "><div class="bar"><div class="toolbar"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>01</code></td><td class="content"><code class="keyword">package</code> <code class="plain">com.javacodegeeks.junit;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>02</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>03</code></td><td class="content"><code class="keyword">import</code> <code class="keyword">static</code> <code class="plain">org.junit.Assert.*;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>04</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>05</code></td><td class="content"><code class="keyword">import</code> <code class="plain">org.junit.Ignore;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>06</code></td><td class="content"><code class="keyword">import</code> <code class="plain">org.junit.Test;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>07</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>08</code></td><td class="content"><code class="color1">@Ignore</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>09</code></td><td class="content"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">FirstDayAtSchoolTest {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>10</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>11</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">FirstDayAtSchool school = </code><code class="keyword">new</code> <code class="plain">FirstDayAtSchool();</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>12</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">String[] bag1 = { </code><code class="string">"Books"</code><code class="plain">, </code><code class="string">"Notebooks"</code><code class="plain">, </code><code class="string">"Pens"</code> <code class="plain">};</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>13</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">String[] bag2 = { </code><code class="string">"Books"</code><code class="plain">, </code><code class="string">"Notebooks"</code><code class="plain">, </code><code class="string">"Pens"</code><code class="plain">, </code><code class="string">"Pencils"</code> <code class="plain">};</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>14</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>15</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color1">@Test</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>16</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testPrepareMyBag() {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>17</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">System.out.println(</code><code class="string">"Inside testPrepareMyBag()"</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>18</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">assertArrayEquals(bag1, school.prepareMyBag());</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>19</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>20</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>21</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>22</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color1">@Test</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>23</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testAddPencils() {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>24</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">System.out.println(</code><code class="string">"Inside testAddPencils()"</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>25</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">assertArrayEquals(bag2, school.addPencils());</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>26</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>27</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>28</code></td><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div><p>The whose test class won’t be executed, so no result will be displayed int the console output and in the junit view:</p><div id="attachment_31959" style="width: 478px" class="wp-caption aligncenter"><a href="http://www.javacodegeeks.com/wp-content/uploads/2014/10/water_ignore.png"><img src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/water_ignore.png" alt="Ignore annotation" width="468" height="226" class="size-full wp-image-31959" srcset="//www.javacodegeeks.com/wp-content/uploads/2014/10/water_ignore.png 468w, //www.javacodegeeks.com/wp-content/uploads/2014/10/water_ignore-300x144.png 300w" sizes="(max-width: 468px) 100vw, 468px"></a><p class="wp-caption-text">Figure 8</p></div><h3><a name="suite_tests"></a>3.5. Creating suite tests</h3><p>In this section, we will see how to create suite tests. A test suite is a collection of some test cases from different classes that can be run all together using <code>@RunWith</code> and <code>@Suite</code> annotations. This is very helpful if you have many test classes and you want to run them all together instead of running each test one at a time.</p><p>When a class is annotated with <code>@RunWith</code>, JUnit will invoke the class in which is annotated so as to run the tests, instead of using the runner built into JUnit.</p><p>Based on the classes of the previous sections, we can create two test classes. The one class will test the public method <code>prepareMyBag()</code> and the other test class will test the method <code>addPencils()</code>. Hence, we will eventually have the classes below:</p><p><span style="text-decoration: underline"><em>PrepareMyBagTest.java</em></span></p><div id="highlighter_972139" class="syntaxhighlighter  "><div class="bar"><div class="toolbar"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>01</code></td><td class="content"><code class="keyword">package</code> <code class="plain">com.javacodegeeks.junit;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>02</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>03</code></td><td class="content"><code class="keyword">import</code> <code class="plain">org.junit.Test;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>04</code></td><td class="content"><code class="keyword">import</code> <code class="keyword">static</code> <code class="plain">org.junit.Assert.*;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>05</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>06</code></td><td class="content"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">PrepareMyBagTest {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>07</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>08</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">FirstDayAtSchool school = </code><code class="keyword">new</code> <code class="plain">FirstDayAtSchool();</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>09</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>10</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">String[] bag = { </code><code class="string">"Books"</code><code class="plain">, </code><code class="string">"Notebooks"</code><code class="plain">, </code><code class="string">"Pens"</code> <code class="plain">};</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>11</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>12</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color1">@Test</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>13</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testPrepareMyBag() {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>14</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>15</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">System.out.println(</code><code class="string">"Inside testPrepareMyBag()"</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>16</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">assertArrayEquals(bag, school.prepareMyBag());</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>17</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>18</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>19</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>20</code></td><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div><p><span style="text-decoration: underline"><em>AddPencilsTest.java</em></span></p><div id="highlighter_413672" class="syntaxhighlighter  "><div class="bar    "><div class="toolbar"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>01</code></td><td class="content"><code class="keyword">package</code> <code class="plain">com.javacodegeeks.junit;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>02</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>03</code></td><td class="content"><code class="keyword">import</code> <code class="plain">org.junit.Test;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>04</code></td><td class="content"><code class="keyword">import</code> <code class="keyword">static</code> <code class="plain">org.junit.Assert.*;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>05</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>06</code></td><td class="content"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">AddPencilsTest {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>07</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>08</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">FirstDayAtSchool school = </code><code class="keyword">new</code> <code class="plain">FirstDayAtSchool();</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>09</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>10</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">String[] bag = { </code><code class="string">"Books"</code><code class="plain">, </code><code class="string">"Notebooks"</code><code class="plain">, </code><code class="string">"Pens"</code><code class="plain">, </code><code class="string">"Pencils"</code> <code class="plain">};</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>11</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>12</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color1">@Test</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>13</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testAddPencils() {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>14</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>15</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">System.out.println(</code><code class="string">"Inside testAddPencils()"</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>16</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">assertArrayEquals(bag, school.addPencils());</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>17</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>18</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>19</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>20</code></td><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div><p>Now we will create a test suite so as to run the above classes together. Right-click the <em>test</em> source folder and create a new java class named <code>SuiteTest.java</code> with the following code:</p><p><span style="text-decoration: underline"><em>SuiteTest.java</em></span></p><div id="highlighter_401567" class="syntaxhighlighter  "><div class="bar"><div class="toolbar"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>01</code></td><td class="content"><code class="keyword">package</code> <code class="plain">com.javacodegeeks.junit;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>02</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>03</code></td><td class="content"><code class="keyword">import</code> <code class="plain">org.junit.runner.RunWith;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>04</code></td><td class="content"><code class="keyword">import</code> <code class="plain">org.junit.runners.Suite;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>05</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>06</code></td><td class="content"><code class="color1">@RunWith</code><code class="plain">(Suite.</code><code class="keyword">class</code><code class="plain">)</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>07</code></td><td class="content"><code class="color1">@Suite</code><code class="plain">.SuiteClasses({ PrepareMyBagTest.</code><code class="keyword">class</code><code class="plain">, AddPencilsTest.</code><code class="keyword">class</code> <code class="plain">})</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>08</code></td><td class="content"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">SuitTest {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>09</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>10</code></td><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div><p>With the <code>@Suite.SuiteClasses</code> annotation you can define which test classes will be included in the execution.</p><p>So, if you right-click the test suite and select <em>Run As -&gt; JUnit Test</em>, the execution of both test classes will take place with the order that has been defined in the <code>@Suite.SuiteClasses</code> annotation.</p><h3><a name="parameterized"></a>3.6. Creating parameterized tests</h3><p>In this section we will see how to create parameterized tests. For this purpose, we will use the class mentioned in section 2.1 which provides a public method for adding integers. So, this will be the class to be tested.</p><p>But when a test class can be considered as a parameterized test class? Of course, when it fullfills all the following requirements:</p><ul><li>The class is annotated with <code>@RunWith(Parameterized.class)</code>.<br> As explained in the previous section, <code>@RunWith</code> annotation enables JUnit to invoke the class in which is annotated to run the tests, instead of using the runner built into JUnit. <code>Parameterized</code> is a runner inside JUnit that will run the same test case with different set of inputs.</li><li>The class has a single constructor that stores the test data.</li><li>The class has a static method that generates and returns test data and is annotated with the <code>@Parameters</code> annotation.</li><li>The class has a test, which obviously means that it needs a method annotated with the <code>@Test</code> annotation.</li></ul><p>Now, we will create a new test class named <code>CalculateTest.java</code>, which will follow the guidelines mentioned above. The source code of this class follows.</p><p><span style="text-decoration: underline"><em>CalculateTest.java</em></span></p><div id="highlighter_607024" class="syntaxhighlighter  "><div class="bar     "><div class="toolbar"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>01</code></td><td class="content"><code class="keyword">package</code> <code class="plain">com.javacodegeeks.junit;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>02</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>03</code></td><td class="content"><code class="keyword">import</code> <code class="keyword">static</code> <code class="plain">org.junit.Assert.assertEquals;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>04</code></td><td class="content"><code class="keyword">import</code> <code class="plain">java.util.Arrays;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>05</code></td><td class="content"><code class="keyword">import</code> <code class="plain">java.util.Collection;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>06</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>07</code></td><td class="content"><code class="keyword">import</code> <code class="plain">org.junit.Test;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>08</code></td><td class="content"><code class="keyword">import</code> <code class="plain">org.junit.runner.RunWith;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>09</code></td><td class="content"><code class="keyword">import</code> <code class="plain">org.junit.runners.Parameterized;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>10</code></td><td class="content"><code class="keyword">import</code> <code class="plain">org.junit.runners.Parameterized.Parameters;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>11</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>12</code></td><td class="content"><code class="color1">@RunWith</code><code class="plain">(Parameterized.</code><code class="keyword">class</code><code class="plain">)</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>13</code></td><td class="content"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">CalculateTest {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>14</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>15</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">private</code> <code class="keyword">int</code> <code class="plain">expected;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>16</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">private</code> <code class="keyword">int</code> <code class="plain">first;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>17</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">private</code> <code class="keyword">int</code> <code class="plain">second;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>18</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>19</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="plain">CalculateTest(</code><code class="keyword">int</code> <code class="plain">expectedResult, </code><code class="keyword">int</code> <code class="plain">firstNumber, </code><code class="keyword">int</code> <code class="plain">secondNumber) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>20</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">this</code><code class="plain">.expected = expectedResult;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>21</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">this</code><code class="plain">.first = firstNumber;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>22</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">this</code><code class="plain">.second = secondNumber;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>23</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>24</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>25</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color1">@Parameters</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>26</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">static</code> <code class="plain">Collection addedNumbers() {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>27</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">return</code> <code class="plain">Arrays.asList(</code><code class="keyword">new</code> <code class="plain">Integer[][] { { </code><code class="value">3</code><code class="plain">, </code><code class="value">1</code><code class="plain">, </code><code class="value">2</code> <code class="plain">}, { </code><code class="value">5</code><code class="plain">, </code><code class="value">2</code><code class="plain">, </code><code class="value">3</code> <code class="plain">},</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>28</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">{ </code><code class="value">7</code><code class="plain">, </code><code class="value">3</code><code class="plain">, </code><code class="value">4</code> <code class="plain">}, { </code><code class="value">9</code><code class="plain">, </code><code class="value">4</code><code class="plain">, </code><code class="value">5</code> <code class="plain">}, });</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>29</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>30</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>31</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color1">@Test</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>32</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">sum() {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>33</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">Calculate add = </code><code class="keyword">new</code> <code class="plain">Calculate();</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>34</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">System.out.println(</code><code class="string">"Addition with parameters : "</code> <code class="plain">+ first + </code><code class="string">" and "</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>35</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">+ second);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>36</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">assertEquals(expected, add.sum(first, second));</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>37</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>38</code></td><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div><p>As we can observe in the class above, it fullfills all the above requirements. The method <code>addedNumbers</code> annotated with <code>@Parameters</code> returns a Collection of Arrays. Each array includes the inputs/output numbers of each test execution. The number of elements in each array must be the same with the number of parameters in the constructor. So, in this specific case, each array includes three elements, two elements that represent the numbers to be added and one element for the result.</p><p>If we run the <code>CalculateTest</code> test case, the console output will be the following:</p><div id="highlighter_748553" class="syntaxhighlighter  "><div class="bar"><div class="toolbar"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="plain">Addition with parameters : 1 and 2</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="plain">Adding values: 1 + 2</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>3</code></td><td class="content"><code class="plain">Addition with parameters : 2 and 3</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>4</code></td><td class="content"><code class="plain">Adding values: 2 + 3</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>5</code></td><td class="content"><code class="plain">Addition with parameters : 3 and 4</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>6</code></td><td class="content"><code class="plain">Adding values: 3 + 4</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>7</code></td><td class="content"><code class="plain">Addition with parameters : 4 and 5</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>8</code></td><td class="content"><code class="plain">Adding values: 4 + 5</code></td></tr></tbody></table></div></div></div><p>As we see in the output, the test case is executed four times, which is the number of inputs in the method annotated with <code>@Parameters</code> annotation.</p><h3><a name="rules"></a>3.7. Rules</h3><p>In this section we present a new feature of JUnit called <em>Rules</em> which allows very flexible addition or redefinition of the behavior of each test method in a test class. For this purpose, <code>@Rule</code> annotation should be used so as to mark public fields of a test class. Those fields should be of type <a href="http://junit.org/apidocs/org/junit/rules/MethodRule.html"><code>MethodRule</code></a>, which is an alteration in how a test method is run and reported. Multiple <a href="http://junit.org/apidocs/org/junit/rules/MethodRule.html"><code>MethodRules</code></a> can be applied to a test method. <a href="http://junit.org/apidocs/org/junit/rules/MethodRule.html"><code>MethodRule</code></a> interface has a lot of implementations, such as <a href="http://junit.org/apidocs/org/junit/rules/ErrorCollector.html"><code>ErrorCollector</code></a> which allows execution of a test to continue after the first problem is found, <a href="http://junit.org/apidocs/org/junit/rules/ExpectedException.html"><code>ExpectedException</code></a> which allows in-test specification of expected exception types and messages, <a href="http://junit.org/apidocs/org/junit/rules/TestName.html"><code>TestName</code></a> which makes the current test name available inside test methods, and many others. Except for those already defined rules, developers can create their own custom rules and use them in their test cases as they wish.</p><p>Below we present the way we can use one of the existing rules named <a href="http://junit.org/apidocs/org/junit/rules/TestName.html"><code>TestName</code></a> in our own tests. <a href="http://junit.org/apidocs/org/junit/rules/TestName.html"><code>TestName</code></a> is invoked when a test is about to start.</p><p><span style="text-decoration: underline"><em>NameRuleTest.java</em></span></p><div id="highlighter_772169" class="syntaxhighlighter  "><div class="bar    "><div class="toolbar"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>01</code></td><td class="content"><code class="keyword">package</code> <code class="plain">com.javacodegeeks.junit;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>02</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>03</code></td><td class="content"><code class="keyword">import</code> <code class="keyword">static</code> <code class="plain">org.junit.Assert.*;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>04</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>05</code></td><td class="content"><code class="keyword">import</code> <code class="plain">org.junit.*;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>06</code></td><td class="content"><code class="keyword">import</code> <code class="plain">org.junit.rules.TestName;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>07</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>08</code></td><td class="content"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">NameRuleTest {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>09</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color1">@Rule</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>10</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="plain">TestName name = </code><code class="keyword">new</code> <code class="plain">TestName();</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>11</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>12</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color1">@Test</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>13</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testA() {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>14</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">System.out.println(name.getMethodName());</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>15</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">assertEquals(</code><code class="string">"testA"</code><code class="plain">, name.getMethodName());</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>16</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>17</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>18</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>19</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="color1">@Test</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>20</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">testB() {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>21</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">System.out.println(name.getMethodName());</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>22</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">assertEquals(</code><code class="string">"testB"</code><code class="plain">, name.getMethodName());</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>23</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>24</code></td><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div><p>We can see that the <code>@Rule</code> annotation marks the public field <code>name</code> which is of type <code>MethodRule</code> and specifically, <code>TestName</code> type. Then, we can use in our tests this <code>name</code> field and find for example the name of the test method, in this specific case.</p><h3><a name="categories"></a>3.8. Categories</h3><p>Another new feature of JUnit is called <em>Categories</em> and allows you to group certain kinds of tests together and even include or exclude groups (categories). For example, you can separate slow tests from fast tests. To assign a test case or a method to one of those categories the <code>@Category</code> annotation is provided. Below there is an example of how we can use this nice feature of JUnit, based on the release notes of <a href="https://github.com/junit-team/junit/blob/master/doc/ReleaseNotes4.8.md">JUnit 4.8.</a></p><div id="highlighter_39401" class="syntaxhighlighter  "><div class="bar"><div class="toolbar"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="keyword">public</code> <code class="keyword">interface</code> <code class="plain">FastTests { </code><code class="comments">/* category marker */</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div><div id="highlighter_875769" class="syntaxhighlighter  "><div class="bar"><div class="toolbar"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="keyword">public</code> <code class="keyword">interface</code> <code class="plain">SlowTests { </code><code class="comments">/* category marker */</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div><p>Firstly, we define two categories, FastTests and SlowTests. A category can be either a class or an interface.</p><div id="highlighter_189080" class="syntaxhighlighter  "><div class="bar"><div class="toolbar"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>01</code></td><td class="content"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">A {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>02</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="color1">@Test</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>03</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">a() {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>04</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">fail();</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>05</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>06</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>07</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="color1">@Category</code><code class="plain">(SlowTests.</code><code class="keyword">class</code><code class="plain">)</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>08</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="color1">@Test</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>09</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">b() {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>10</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>11</code></td><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div><p>In the above code, we mark the test method <code>b()</code> of class <code>A</code> with <code>@Category</code> annotation so as to indicate that this specific method belongs to category <code>SlowTests</code>. So, we are able to mark not only whole classes but also some of their test methods individually.</p><div id="highlighter_331521" class="syntaxhighlighter  "><div class="bar"><div class="toolbar"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="color1">@Category</code><code class="plain">({ SlowTests.</code><code class="keyword">class</code><code class="plain">, FastTests.</code><code class="keyword">class</code> <code class="plain">})</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">B {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>3</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="color1">@Test</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>4</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">void</code> <code class="plain">c() {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>5</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>6</code></td><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div><p>In the above sample of code, we can see that the whole class <code>B</code> is annotated with <code>@Category</code> annotation .  Annotating a test class with <code>@Category</code> annotation automatically includes all its test methods in this category. We can also see that a test class or a test method can belong to more than one categories.</p><div id="highlighter_865485" class="syntaxhighlighter  "><div class="bar"><div class="toolbar"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="color1">@RunWith</code><code class="plain">(Categories.</code><code class="keyword">class</code><code class="plain">)</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="color1">@IncludeCategory</code><code class="plain">(SlowTests.</code><code class="keyword">class</code><code class="plain">)</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>3</code></td><td class="content"><code class="color1">@SuiteClasses</code><code class="plain">({ A.</code><code class="keyword">class</code><code class="plain">, B.</code><code class="keyword">class</code> <code class="plain">})</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>4</code></td><td class="content"><code class="comments">// Note that Categories is a kind of Suite</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>5</code></td><td class="content"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">SlowTestSuite {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>6</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="comments">// Will run A.b and B.c, but not A.a</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>7</code></td><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div><p>In this sample of code, we notice that there is a suite test named <code>SlowTestSuite</code>. Basically, categories are a kind of suite. In this suite, we observe a new annotation called <code>@IncludeCategory</code>, indicating which categories will be included in the execution. In this specific case, methods belonging to SlowTests category will be executed. Hence, only the test method <code>b()</code> of class <code>A</code> will be executed as well as the test method <code>c()</code> of class <code>B</code>, which both belong to SlowTests category.</p><div id="highlighter_559833" class="syntaxhighlighter  "><div class="bar"><div class="toolbar"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="color1">@RunWith</code><code class="plain">(Categories.</code><code class="keyword">class</code><code class="plain">)</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>2</code></td><td class="content"><code class="color1">@IncludeCategory</code><code class="plain">(SlowTests.</code><code class="keyword">class</code><code class="plain">)</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>3</code></td><td class="content"><code class="color1">@ExcludeCategory</code><code class="plain">(FastTests.</code><code class="keyword">class</code><code class="plain">)</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>4</code></td><td class="content"><code class="color1">@SuiteClasses</code><code class="plain">({ A.</code><code class="keyword">class</code><code class="plain">, B.</code><code class="keyword">class</code> <code class="plain">})</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>5</code></td><td class="content"><code class="comments">// Note that Categories is a kind of Suite</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>6</code></td><td class="content"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">SlowTestSuite {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>7</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;</code><code class="comments">// Will run A.b, but not A.a or B.c</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>8</code></td><td class="content"><code class="plain">} </code></td></tr></tbody></table></div></div></div><p>Finally, we change a little bit the test suite and we add one more new annotation called <code>@ExcludeCategory</code>, indicating which categories will be excluded from the execution. In this specific case, only the test method <code>b()</code> of class <code>A</code> will be executed, as this is the only test method that belongs explicitly to SlowTests category.</p><p>We notice that in both cases, the test method <code>a()</code> of class <code>A</code> won’t be executed as it doesn’t belong to any category.</p><h2><a name="command_line"></a>4. Run JUnit tests from command line</h2><p>You can run your JUnit test outside Eclipse, by using the <code>org.junit.runner.JUnitCore</code> class. This class provides the <code>runClasses()</code> method which allows you to execute one or several test classes. The return type of <code>runClasses()</code> method is an object of the type <code>org.junit.runner.Result</code>. This object can be used to collect information about the tests. Also, in case there is a failed test, you can use the object <code>org.junit.runner.notification.Failure</code> which holds description of the failed tests.</p><p>The procedure below shows how to run your test outside Eclipse.</p><p>Create a new Java class named <code>JunitRunner.java</code> with the following code:</p><p><span style="text-decoration: underline"><em>JunitRunner.java</em></span></p><div id="highlighter_618178" class="syntaxhighlighter  "><div class="bar   "><div class="toolbar"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>01</code></td><td class="content"><code class="keyword">package</code> <code class="plain">com.javacodegeeks.junit;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>02</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>03</code></td><td class="content"><code class="keyword">import</code> <code class="plain">org.junit.runner.JUnitCore;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>04</code></td><td class="content"><code class="keyword">import</code> <code class="plain">org.junit.runner.Result;</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>05</code></td><td class="content"><code class="keyword">import</code> <code class="plain">org.junit.runner.notification.Failure;</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>06</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>07</code></td><td class="content"><code class="keyword">public</code> <code class="keyword">class</code> <code class="plain">JunitRunner {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>08</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>09</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">public</code> <code class="keyword">static</code> <code class="keyword">void</code> <code class="plain">main(String[] args) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>10</code></td><td class="content">&nbsp;</td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>11</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">Result result = JUnitCore.runClasses(AssertionsTest.</code><code class="keyword">class</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>12</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">for</code> <code class="plain">(Failure fail : result.getFailures()) {</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>13</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">System.out.println(fail.toString());</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>14</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>15</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="keyword">if</code> <code class="plain">(result.wasSuccessful()) {</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>16</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">System.out.println(</code><code class="string">"All tests finished successfully..."</code><code class="plain">);</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>17</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt2"><table><tbody><tr><td class="number"><code>18</code></td><td class="content"><code class="spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="plain">}</code></td></tr></tbody></table></div><div class="line alt1"><table><tbody><tr><td class="number"><code>19</code></td><td class="content"><code class="plain">}</code></td></tr></tbody></table></div></div></div><p>As an example, we choose to run the <code>AssertionsTest</code> test class.</p><ul><li>Open command prompt and move down directories so as to find the directory where the two classes are located.</li><li>Compile the Test class and the Runner class.</li><div id="highlighter_520916" class="syntaxhighlighter  "><div class="bar"><div class="toolbar"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="plain">C:\Users\konstantina\eclipse_luna_workspace\JUnitGuide\</code><code class="functions">test</code><code class="plain">\com\javacodegeeks\junit&gt;javac -classpath </code><code class="string">"C:\Users\konstantina\Downloads\junit-4.11.jar"</code><code class="plain">;</code><code class="string">"C:\Users\konstantina\Downloads\hamcrest-core-1.3.jar"</code><code class="plain">; AssertionsTest.java JunitRunner.java</code></td></tr></tbody></table></div></div></div><p><em>As we did in Eclipse, we should also include <a href="https://github.com/junit-team/junit/wiki/Download-and-Install#plain-old-jar">library jars</a> of JUnit to our classpath.</em></p><li>Now run the <code>JunitRunner</code>.</li><div id="highlighter_451971" class="syntaxhighlighter  "><div class="bar"><div class="toolbar"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="plain">C:\Users\konstantina\eclipse_luna_workspace\JUnitGuide\</code><code class="functions">test</code><code class="plain">\com\javacodegeeks\junit&gt;java -classpath </code><code class="string">"C:\Users\konstantina\Downloads\junit-4.11.jar"</code><code class="plain">;</code><code class="string">"C:\Users\konstantina\Downloads\hamcrest-core-1.3.jar"</code><code class="plain">; JunitRunner</code></td></tr></tbody></table></div></div></div></ul><p>Here is the output:</p><div id="highlighter_771701" class="syntaxhighlighter  "><div class="bar"><div class="toolbar"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#viewSource" title="view source" class="item viewSource" style="width: 16px; height: 16px;">view source</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#printSource" title="print" class="item printSource" style="width: 16px; height: 16px;">print</a><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#about" title="?" class="item about" style="width: 16px; height: 16px;">?</a></div></div><div class="lines"><div class="line alt1"><table><tbody><tr><td class="number"><code>1</code></td><td class="content"><code class="plain">All tests finished successfully... </code></td></tr></tbody></table></div></div></div><h2><a name="conclusions"></a>5. Conclusions</h2><p>This was a detailed guide about <a href="http://junit.org/">JUnit</a> testing framework, the most popular testing framework in Java.</p><p>If you enjoyed this, then <a href="http://javacodegeeks.us4.list-manage.com/subscribe?u=09cef08fc376e6da2dace7d09&amp;id=cc9180703b">subscribe to our newsletter</a> to enjoy weekly updates and complimentary whitepapers! Also, check out <a href="http://academy.javacodegeeks.com/">JCG Academy</a> for more advanced training!</p><div class="download"><strong>Download</strong><br>You can download the full source code of this guide here : <a href="http://www.javacodegeeks.com/wp-content/uploads/2014/11/JUnitGuide.zip">JUnitGuide.zip</a></div></div> <span style="display:none"><a href="https://www.javacodegeeks.com/tag/junit/" rel="tag">JUnit</a> <a href="https://www.javacodegeeks.com/tag/testing/" rel="tag">Testing</a> <a href="https://www.javacodegeeks.com/tag/ultimate/" rel="tag">Ultimate</a></span>				<span style="display:none" class="updated">2014-11-10</span><div style="display:none" class="vcard author" itemprop="author" itemscope="" itemtype="http://schema.org/Person"><strong class="fn" itemprop="name"><a href="https://www.javacodegeeks.com/author/konstantina-dimtsa/" title="Posts by Konstantina Dimtsa" rel="author">Konstantina Dimtsa</a></strong></div></div> </article><p class="post-tag">Tagged with: <a href="https://www.javacodegeeks.com/tag/junit/" rel="tag">JUnit</a> <a href="https://www.javacodegeeks.com/tag/testing/" rel="tag">Testing</a> <a href="https://www.javacodegeeks.com/tag/ultimate/" rel="tag">Ultimate</a></p> <script type="text/javascript">(function(){if(!window.mc4wp){window.mc4wp={listeners:[],forms:{on:function(event,callback){window.mc4wp.listeners.push({event:event,callback:callback});}}}}})();</script><form id="mc4wp-form-2" class="mc4wp-form mc4wp-form-29380 mc4wp-form-theme mc4wp-form-theme-red mc4wp-ajax" method="post" data-id="29380" data-name="Under The Post"><div class="mc4wp-form-fields"><div class="nlbox1"><h1>Do you want to know how to develop your skillset to become a <span style="color: #CAB43D; text-shadow: 1px 1px #835D5D;">Java Rockstar?</span></h1><div style="background: url(&#39;/wp-content/uploads/2015/01/books_promo.png&#39;) no-repeat; float:left; padding: 75px 145px 310px 170px; margin-top: -10px; margin-left: -35px;"></div><table style="margin-top: 20px; padding-left: 20px;"><tbody><tr><td style="vertical-align:top;"><h2>Subscribe to our newsletter to start Rocking <span style="text-decoration: underline;">right now!</span></h2><h3>To get you started we give you our best selling eBooks for <span style="color:#e01404; text-shadow: 1px 1px #C99924; font-size: 20px; line-height: 25px;">FREE!</span></h3><p>&nbsp;</p><h3><strong>1.</strong> JPA Mini Book</h3><h3><strong>2.</strong> JVM Troubleshooting Guide</h3><h3><strong>3.</strong> JUnit Tutorial for Unit Testing</h3><h3><strong>4.</strong> Java Annotations Tutorial<!--3--></h3><h3><strong>5.</strong> Java Interview Questions</h3><h3><strong>6.</strong> Spring Interview Questions</h3><h3><strong>7.</strong> Android UI Design</h3><p>&nbsp;</p><h3>and many more ....</h3><p>&nbsp;</p><p></p><p> <label for="mc4wp_email"><span style="font-weight: bold; font-size: 13pt;">Email address: </span></label> <input type="email" id="mc4wp_email" name="EMAIL" required="" placeholder="Your email address"></p><p>&nbsp;</p> <input type="submit" value="Sign up"></td></tr></tbody></table></div><div style="display: none;"><input type="text" name="_mc4wp_honeypot" value="" tabindex="-1" autocomplete="off"></div><input type="hidden" name="_mc4wp_timestamp" value="1496544225"><input type="hidden" name="_mc4wp_form_id" value="29380"><input type="hidden" name="_mc4wp_form_element_id" value="mc4wp-form-2"></div><div class="mc4wp-response"></div></form><div class="e3lan-post"><div id="div-gpt-ad-1415445260332-5" style="width:300px; height:250px;"> <script type="text/javascript">googletag.cmd.push(function(){googletag.display('div-gpt-ad-1415445260332-5');});</script> <div id="google_ads_iframe_/70432299/JCG_Under-post_0__container__" style="border: 0pt none;"><iframe id="google_ads_iframe_/70432299/JCG_Under-post_0" title="3rd party ad content" name="google_ads_iframe_/70432299/JCG_Under-post_0" width="300" height="250" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" style="border: 0px; vertical-align: bottom;" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/saved_resource(2).html"></iframe></div></div></div><div id="comments"><h3 id="comments-title"> 26 comments</h3><ol class="commentlist"><li id="comment-37797"><div class="comment even thread-even depth-1 comment-wrap"><div class="comment-avatar"><img alt="" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/ee1d4e62a8495e112a27cfb5aa9fe55e" srcset="https://secure.gravatar.com/avatar/ee1d4e62a8495e112a27cfb5aa9fe55e?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn">Bill</cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html/#comment-37797">	November 13th, 2014 at 2:30 pm</a></div></div><div class="clear"></div><div class="comment-content"><p>Very nice , mmm hmmm</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html?replytocom=37797#respond" onclick="return addComment.moveForm( &quot;comment-37797&quot;, &quot;37797&quot;, &quot;respond&quot;, &quot;31893&quot; )" aria-label="Reply to Bill">Reply</a></div></div></li><li id="comment-38279"><div class="comment odd alt thread-odd thread-alt depth-1 comment-wrap"><div class="comment-avatar"><img alt="" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/1dfb5b8222fbc8c9e1968abaed129d97" srcset="https://secure.gravatar.com/avatar/1dfb5b8222fbc8c9e1968abaed129d97?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn">Mouse</cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html/#comment-38279">	November 17th, 2014 at 7:14 pm</a></div></div><div class="clear"></div><div class="comment-content"><p>So how do I download this PDF if I’m already subscribed? Duh…</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html?replytocom=38279#respond" onclick="return addComment.moveForm( &quot;comment-38279&quot;, &quot;38279&quot;, &quot;respond&quot;, &quot;31893&quot; )" aria-label="Reply to Mouse">Reply</a></div></div><ul class="children"><li id="comment-38361"><div class="comment byuser comment-author-theodora-fragkouli even depth-2 comment-wrap"><div class="comment-avatar"><img src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/profile_photo-80(1).jpg" class="func-um_user gravatar avatar avatar-45 um-avatar um-avatar-uploaded" width="45" height="45" alt="Theodora Fragkouli"></div><div class="author-comment"> <cite class="fn"><a href="https://www.javacodegeeks.com/user/theodora-fragkouli/">Theodora Fragkouli</a></cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html/#comment-38361">	November 18th, 2014 at 10:01 am</a></div></div><div class="clear"></div><div class="comment-content"><p>Hello Mouse,</p><p>If you have not received an email yet, shoot us a message at support[at]javacodegeeks.com and we will help you.</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html?replytocom=38361#respond" onclick="return addComment.moveForm( &quot;comment-38361&quot;, &quot;38361&quot;, &quot;respond&quot;, &quot;31893&quot; )" aria-label="Reply to Theodora Fragkouli">Reply</a></div></div></li></ul></li><li id="comment-38320"><div class="comment odd alt thread-even depth-1 comment-wrap"><div class="comment-avatar"><img alt="" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/a43785d20981fe3cb033059e7d37caf9" srcset="https://secure.gravatar.com/avatar/a43785d20981fe3cb033059e7d37caf9?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn">Barry</cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html/#comment-38320">	November 18th, 2014 at 12:13 am</a></div></div><div class="clear"></div><div class="comment-content"><p>Same here…How do you download the PDF if you are already subscribed???  Do I have to unsubscribe the re-subscribe…I suppose that is one way to do it???  Nuts!</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html?replytocom=38320#respond" onclick="return addComment.moveForm( &quot;comment-38320&quot;, &quot;38320&quot;, &quot;respond&quot;, &quot;31893&quot; )" aria-label="Reply to Barry">Reply</a></div></div><ul class="children"><li id="comment-38362"><div class="comment byuser comment-author-theodora-fragkouli even depth-2 comment-wrap"><div class="comment-avatar"><img src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/profile_photo-80(1).jpg" class="func-um_user gravatar avatar avatar-45 um-avatar um-avatar-uploaded" width="45" height="45" alt="Theodora Fragkouli"></div><div class="author-comment"> <cite class="fn"><a href="https://www.javacodegeeks.com/user/theodora-fragkouli/">Theodora Fragkouli</a></cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html/#comment-38362">	November 18th, 2014 at 10:02 am</a></div></div><div class="clear"></div><div class="comment-content"><p>Hi Barry,<br> You may also shoot us a message at support[at]javacodegeeks.com and we will help you.</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html?replytocom=38362#respond" onclick="return addComment.moveForm( &quot;comment-38362&quot;, &quot;38362&quot;, &quot;respond&quot;, &quot;31893&quot; )" aria-label="Reply to Theodora Fragkouli">Reply</a></div></div><ul class="children"><li id="comment-38609"><div class="comment odd alt depth-3 comment-wrap"><div class="comment-avatar"><img alt="" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/a43785d20981fe3cb033059e7d37caf9" srcset="https://secure.gravatar.com/avatar/a43785d20981fe3cb033059e7d37caf9?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn">Barry</cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html/#comment-38609">	November 20th, 2014 at 11:37 am</a></div></div><div class="clear"></div><div class="comment-content"><p>Thanks – Got it!</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html?replytocom=38609#respond" onclick="return addComment.moveForm( &quot;comment-38609&quot;, &quot;38609&quot;, &quot;respond&quot;, &quot;31893&quot; )" aria-label="Reply to Barry">Reply</a></div></div></li></ul></li></ul></li><li id="comment-38343"><div class="comment even thread-odd thread-alt depth-1 comment-wrap"><div class="comment-avatar"><img alt="" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/f69bff29d961d41ae3bc55dad18d1c0c" srcset="https://secure.gravatar.com/avatar/f69bff29d961d41ae3bc55dad18d1c0c?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn">indika</cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html/#comment-38343">	November 18th, 2014 at 4:36 am</a></div></div><div class="clear"></div><div class="comment-content"><p>So how do I download this PDF if I’m already subscribed? Duh…</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html?replytocom=38343#respond" onclick="return addComment.moveForm( &quot;comment-38343&quot;, &quot;38343&quot;, &quot;respond&quot;, &quot;31893&quot; )" aria-label="Reply to indika">Reply</a></div></div><ul class="children"><li id="comment-38363"><div class="comment byuser comment-author-theodora-fragkouli odd alt depth-2 comment-wrap"><div class="comment-avatar"><img src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/profile_photo-80(1).jpg" class="func-um_user gravatar avatar avatar-45 um-avatar um-avatar-uploaded" width="45" height="45" alt="Theodora Fragkouli"></div><div class="author-comment"> <cite class="fn"><a href="https://www.javacodegeeks.com/user/theodora-fragkouli/">Theodora Fragkouli</a></cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html/#comment-38363">	November 18th, 2014 at 10:03 am</a></div></div><div class="clear"></div><div class="comment-content"><p>Hello Indika,</p><p>If you have not received an email yet, you should also send us a message at support[at]javacodegeeks.com and we will help you.</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html?replytocom=38363#respond" onclick="return addComment.moveForm( &quot;comment-38363&quot;, &quot;38363&quot;, &quot;respond&quot;, &quot;31893&quot; )" aria-label="Reply to Theodora Fragkouli">Reply</a></div></div></li></ul></li><li id="comment-38358"><div class="comment even thread-even depth-1 comment-wrap"><div class="comment-avatar"><img alt="" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/e2fe4a727a4d71b47255f78e556a52c0" srcset="https://secure.gravatar.com/avatar/e2fe4a727a4d71b47255f78e556a52c0?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn">Cpt</cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html/#comment-38358">	November 18th, 2014 at 9:02 am</a></div></div><div class="clear"></div><div class="comment-content"><p>I’d like to get the PDF as well…. why only supply it to people who haven’t subscribed yet?</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html?replytocom=38358#respond" onclick="return addComment.moveForm( &quot;comment-38358&quot;, &quot;38358&quot;, &quot;respond&quot;, &quot;31893&quot; )" aria-label="Reply to Cpt">Reply</a></div></div></li><li id="comment-38479"><div class="comment odd alt thread-odd thread-alt depth-1 comment-wrap"><div class="comment-avatar"><img alt="" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/a47d225d4cdaa219592adfd9da89cf26" srcset="https://secure.gravatar.com/avatar/a47d225d4cdaa219592adfd9da89cf26?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn">BobSon</cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html/#comment-38479">	November 19th, 2014 at 12:00 pm</a></div></div><div class="clear"></div><div class="comment-content"><p>Hello guys,</p><p>I’ve subscribed with two email addresses, I get the confirmation email for both of them, but my question is, how can i download this book ? i did not see any button whare i can download the pdf version and at the top of the page it says that only subscribe, but no download pdf button.</p><p>Tnx.</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html?replytocom=38479#respond" onclick="return addComment.moveForm( &quot;comment-38479&quot;, &quot;38479&quot;, &quot;respond&quot;, &quot;31893&quot; )" aria-label="Reply to BobSon">Reply</a></div></div><ul class="children"><li id="comment-38608"><div class="comment byuser comment-author-theodora-fragkouli even depth-2 comment-wrap"><div class="comment-avatar"><img src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/profile_photo-80(1).jpg" class="func-um_user gravatar avatar avatar-45 um-avatar um-avatar-uploaded" width="45" height="45" alt="Theodora Fragkouli"></div><div class="author-comment"> <cite class="fn"><a href="https://www.javacodegeeks.com/user/theodora-fragkouli/">Theodora Fragkouli</a></cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html/#comment-38608">	November 20th, 2014 at 11:28 am</a></div></div><div class="clear"></div><div class="comment-content"><p>Hello BobSon,<br> You’d better shoot us a message at support[at]javacodegeeks.com and we will help you.</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html?replytocom=38608#respond" onclick="return addComment.moveForm( &quot;comment-38608&quot;, &quot;38608&quot;, &quot;respond&quot;, &quot;31893&quot; )" aria-label="Reply to Theodora Fragkouli">Reply</a></div></div></li></ul></li><li id="comment-43008"><div class="comment odd alt thread-even depth-1 comment-wrap"><div class="comment-avatar"><img alt="" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/01aec359518ea26e4da02b93d8cca1a6" srcset="https://secure.gravatar.com/avatar/01aec359518ea26e4da02b93d8cca1a6?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn">Peter Schuler</cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html/#comment-43008">	December 27th, 2014 at 11:35 am</a></div></div><div class="clear"></div><div class="comment-content"><p>Nice! Thanks you for pointing me to some new features of this fundamental framework :).</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html?replytocom=43008#respond" onclick="return addComment.moveForm( &quot;comment-43008&quot;, &quot;43008&quot;, &quot;respond&quot;, &quot;31893&quot; )" aria-label="Reply to Peter Schuler">Reply</a></div></div></li><li id="comment-43741"><div class="comment even thread-odd thread-alt depth-1 comment-wrap"><div class="comment-avatar"><img alt="" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/2b2b8d32d71181628ebe6174e2ebce22" srcset="https://secure.gravatar.com/avatar/2b2b8d32d71181628ebe6174e2ebce22?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn"><a href="https://github.com/hlfernandez" rel="external nofollow" class="url">hlfernandez</a></cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html/#comment-43741">	January 2nd, 2015 at 8:49 pm</a></div></div><div class="clear"></div><div class="comment-content"><p>Nice tutorial :-)</p><p>Please, could you correct source code of example 2.3? On line 30 (assertTrue(var1  var2);) the comparison operator is missing.</p><p>Thank you very much for this great site.</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html?replytocom=43741#respond" onclick="return addComment.moveForm( &quot;comment-43741&quot;, &quot;43741&quot;, &quot;respond&quot;, &quot;31893&quot; )" aria-label="Reply to hlfernandez">Reply</a></div></div></li><li id="comment-49391"><div class="comment odd alt thread-even depth-1 comment-wrap"><div class="comment-avatar"><img alt="" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/ca605e70affc074e5d31b0a61108719c" srcset="https://secure.gravatar.com/avatar/ca605e70affc074e5d31b0a61108719c?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn">Mustafa</cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html/#comment-49391">	February 16th, 2015 at 11:15 am</a></div></div><div class="clear"></div><div class="comment-content"><p>Hello,</p><p>I don’t understand CalculateTest.java class</p><p>int sum = calculation.sum(2, 5);</p><p>this part is directly written in classbody not in method, how can it possible?</p><p>thanks.</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html?replytocom=49391#respond" onclick="return addComment.moveForm( &quot;comment-49391&quot;, &quot;49391&quot;, &quot;respond&quot;, &quot;31893&quot; )" aria-label="Reply to Mustafa">Reply</a></div></div></li><li id="comment-52248"><div class="comment even thread-odd thread-alt depth-1 comment-wrap"><div class="comment-avatar"><img alt="" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/4d18780f9ba6df5d7e76ef05d0ad6872" srcset="https://secure.gravatar.com/avatar/4d18780f9ba6df5d7e76ef05d0ad6872?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn">suraj</cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html/#comment-52248">	March 11th, 2015 at 11:33 am</a></div></div><div class="clear"></div><div class="comment-content"><p>Hi, How to download  Annotation pdf i already subscribe .. please..</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html?replytocom=52248#respond" onclick="return addComment.moveForm( &quot;comment-52248&quot;, &quot;52248&quot;, &quot;respond&quot;, &quot;31893&quot; )" aria-label="Reply to suraj">Reply</a></div></div></li><li id="comment-58584"><div class="comment odd alt thread-even depth-1 comment-wrap"><div class="comment-avatar"><img alt="" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/7863507dd98a03994cceb8c7346297bd" srcset="https://secure.gravatar.com/avatar/7863507dd98a03994cceb8c7346297bd?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn">Cheema</cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html/#comment-58584">	May 13th, 2015 at 4:58 pm</a></div></div><div class="clear"></div><div class="comment-content"><p>Is JUNIT specific to JAVA platforms or do you have plugins for other languages as well?</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html?replytocom=58584#respond" onclick="return addComment.moveForm( &quot;comment-58584&quot;, &quot;58584&quot;, &quot;respond&quot;, &quot;31893&quot; )" aria-label="Reply to Cheema">Reply</a></div></div><ul class="children"><li id="comment-59842"><div class="comment even depth-2 comment-wrap"><div class="comment-avatar"><img alt="" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/550c37ef4a82c70305369e8a31c52b64" srcset="https://secure.gravatar.com/avatar/550c37ef4a82c70305369e8a31c52b64?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn"><a href="http://gettocode.com/" rel="external nofollow" class="url">andrei cheremskoy</a></cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html/#comment-59842">	May 31st, 2015 at 8:47 pm</a></div></div><div class="clear"></div><div class="comment-content"><p>JUnit framework is intented for Java.<br> If you want to find similar frameworks for other programming languages check this link<br> <a href="http://en.wikipedia.org/wiki/List_of_unit_testing_frameworks" rel="nofollow">http://en.wikipedia.org/wiki/List_of_unit_testing_frameworks</a></p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html?replytocom=59842#respond" onclick="return addComment.moveForm( &quot;comment-59842&quot;, &quot;59842&quot;, &quot;respond&quot;, &quot;31893&quot; )" aria-label="Reply to andrei cheremskoy">Reply</a></div></div></li></ul></li><li id="comment-60548"><div class="comment odd alt thread-odd thread-alt depth-1 comment-wrap"><div class="comment-avatar"><img alt="" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/a5c4d705292b3dda456493494bf24504" srcset="https://secure.gravatar.com/avatar/a5c4d705292b3dda456493494bf24504?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn">moshie</cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html/#comment-60548">	June 8th, 2015 at 7:44 pm</a></div></div><div class="clear"></div><div class="comment-content"><p>Hello Guys,</p><p>Thanks for clearly explaining this topic. Excellent work!</p><p>I’ve subscribed. I got the confirmation email – but how do I download the PDF?</p><p>Thanks,</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html?replytocom=60548#respond" onclick="return addComment.moveForm( &quot;comment-60548&quot;, &quot;60548&quot;, &quot;respond&quot;, &quot;31893&quot; )" aria-label="Reply to moshie">Reply</a></div></div></li><li id="comment-63944"><div class="comment even thread-even depth-1 comment-wrap"><div class="comment-avatar"><img alt="" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/bdc9ec847ba554c2dd1f470bd2f98eff" srcset="https://secure.gravatar.com/avatar/bdc9ec847ba554c2dd1f470bd2f98eff?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn">whoopnholler</cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html/#comment-63944">	July 29th, 2015 at 8:55 pm</a></div></div><div class="clear"></div><div class="comment-content"><p>The very first example, CalculateTest.java in section 2.1 has an issue.  Let’s say the following assert fails because sum == -3 and testSum == 7.</p><p>assertEquals(sum, testSum);</p><p>The resulting message will indicate that -3 was expected but was 7, which is backwards.  Note that the method signature that is in the text following the code sample shows that the expected value is first and the actual value is second.</p><p>assertEquals ([String message], object expected, object actual)</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html?replytocom=63944#respond" onclick="return addComment.moveForm( &quot;comment-63944&quot;, &quot;63944&quot;, &quot;respond&quot;, &quot;31893&quot; )" aria-label="Reply to whoopnholler">Reply</a></div></div></li><li id="comment-69165"><div class="comment odd alt thread-odd thread-alt depth-1 comment-wrap"><div class="comment-avatar"><img alt="" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/7da9b53ab1d822090942ff30b19fc769" srcset="https://secure.gravatar.com/avatar/7da9b53ab1d822090942ff30b19fc769?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn">Janaki</cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html/#comment-69165">	September 25th, 2015 at 12:07 am</a></div></div><div class="clear"></div><div class="comment-content"><p>Really helpful. Thx for the material</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html?replytocom=69165#respond" onclick="return addComment.moveForm( &quot;comment-69165&quot;, &quot;69165&quot;, &quot;respond&quot;, &quot;31893&quot; )" aria-label="Reply to Janaki">Reply</a></div></div></li><li id="comment-78118"><div class="comment even thread-even depth-1 comment-wrap"><div class="comment-avatar"><img alt="" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/9680f129b6890930cd6062bc192286b6" srcset="https://secure.gravatar.com/avatar/9680f129b6890930cd6062bc192286b6?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn"><a href="http://yahoo/" rel="external nofollow" class="url">Surya</a></cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html/#comment-78118">	January 14th, 2016 at 12:40 pm</a></div></div><div class="clear"></div><div class="comment-content"><p>Hi All,</p><p>Can anybody let me know how to write a JUNIT test case containing nested if conditions.</p><p>In my case, only the first if condition can be checked, as I can compare it with expected value using assertEquals. But for the remaining nested if conditions is based on the output of the command, issued.</p><p>I am quoting an example just for understanding(forget about syntax).</p><p>Ex:</p><p>if ( program == “JAVA”)<br> {<br> logic to get the count of java files<br> if( count == 50)<br> {<br> logic to copy the java files in separate directory<br> if (coping successful)<br> {<br> display “”successful”<br> }<br> }<br> }</p><p>Can anybody help me in writing the JUNIT test case covering all these scenarios.</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html?replytocom=78118#respond" onclick="return addComment.moveForm( &quot;comment-78118&quot;, &quot;78118&quot;, &quot;respond&quot;, &quot;31893&quot; )" aria-label="Reply to Surya">Reply</a></div></div></li><li id="comment-78983"><div class="comment odd alt thread-odd thread-alt depth-1 comment-wrap"><div class="comment-avatar"><img alt="" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/c28e757e6a6d53855881329f0f40af52" srcset="https://secure.gravatar.com/avatar/c28e757e6a6d53855881329f0f40af52?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn">Altaf Raja</cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html/#comment-78983">	February 2nd, 2016 at 2:15 pm</a></div></div><div class="clear"></div><div class="comment-content"><p>hi I am Altaf please kindly Suggest me how i write the Test Case of Controller layer<br> if i wrote the test case that will expected the Service &amp; Dao Layer method als</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html?replytocom=78983#respond" onclick="return addComment.moveForm( &quot;comment-78983&quot;, &quot;78983&quot;, &quot;respond&quot;, &quot;31893&quot; )" aria-label="Reply to Altaf Raja">Reply</a></div></div></li><li id="comment-82934"><div class="comment even thread-even depth-1 comment-wrap"><div class="comment-avatar"><img alt="" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/189e6d3486edcdba75a5e7813dc7b188" srcset="https://secure.gravatar.com/avatar/189e6d3486edcdba75a5e7813dc7b188?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn">Salihu</cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html/#comment-82934">	April 9th, 2016 at 7:54 pm</a></div></div><div class="clear"></div><div class="comment-content"><p>Thanks. This is very simple and straight forward. The examples are just wonderful</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html?replytocom=82934#respond" onclick="return addComment.moveForm( &quot;comment-82934&quot;, &quot;82934&quot;, &quot;respond&quot;, &quot;31893&quot; )" aria-label="Reply to Salihu">Reply</a></div></div></li><li id="comment-83546"><div class="comment odd alt thread-odd thread-alt depth-1 comment-wrap"><div class="comment-avatar"><img alt="" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/29d5c7cbfd917654f26e619f7ee5da52" srcset="https://secure.gravatar.com/avatar/29d5c7cbfd917654f26e619f7ee5da52?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn">enes algul</cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html/#comment-83546">	April 23rd, 2016 at 9:27 pm</a></div></div><div class="clear"></div><div class="comment-content"><p>perfect explanation</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html?replytocom=83546#respond" onclick="return addComment.moveForm( &quot;comment-83546&quot;, &quot;83546&quot;, &quot;respond&quot;, &quot;31893&quot; )" aria-label="Reply to enes algul">Reply</a></div></div></li><li id="comment-85955"><div class="comment even thread-even depth-1 comment-wrap"><div class="comment-avatar"><img alt="" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/e7fe3cbdc35fcbb3319ff842ed39c301" srcset="https://secure.gravatar.com/avatar/e7fe3cbdc35fcbb3319ff842ed39c301?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn">Manmohan</cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html/#comment-85955">	June 23rd, 2016 at 10:14 pm</a></div></div><div class="clear"></div><div class="comment-content"><p>Nice tutorial. Thanks a lot!!</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html?replytocom=85955#respond" onclick="return addComment.moveForm( &quot;comment-85955&quot;, &quot;85955&quot;, &quot;respond&quot;, &quot;31893&quot; )" aria-label="Reply to Manmohan">Reply</a></div></div></li><li id="comment-90996"><div class="comment odd alt thread-odd thread-alt depth-1 comment-wrap"><div class="comment-avatar"><img alt="" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/685c1865a686ff28615194beb6ac1574" srcset="https://secure.gravatar.com/avatar/685c1865a686ff28615194beb6ac1574?s=90&amp;d=mm&amp;r=g 2x" class="avatar avatar-45 photo" height="45" width="45"></div><div class="author-comment"> <cite class="fn">Vignesh M</cite><div class="comment-meta commentmetadata"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html/#comment-90996">	December 29th, 2016 at 9:07 am</a></div></div><div class="clear"></div><div class="comment-content"><p>isn’t it ?<br> assertTrue(var1 == var2);</p></div><div class="reply"><a rel="nofollow" class="comment-reply-link" href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html?replytocom=90996#respond" onclick="return addComment.moveForm( &quot;comment-90996&quot;, &quot;90996&quot;, &quot;respond&quot;, &quot;31893&quot; )" aria-label="Reply to Vignesh M">Reply</a></div></div></li></ol><div id="respond" class="comment-respond"><h3 id="reply-title" class="comment-reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#respond" style="display:none;">Cancel reply</a></small></h3><form action="https://www.javacodegeeks.com/wp-comments-post.php" method="post" id="commentform" class="comment-form"><p class="comment-notes">Your email address will not be published. Required fields are marked <span class="required">*</span></p><p class="comment-form-comment"><label for="comment">Comment</label><textarea id="comment" name="comment" cols="45" rows="8" maxlength="65525" aria-required="true" required="required"></textarea></p><p class="comment-form-author"><label for="author">Name</label> <span class="required">*</span><input id="author" name="author" type="text" value="" size="30" aria-required="true" required="true"></p><p class="comment-form-email"><label for="email">Email</label> <span class="required">*</span><input id="email" name="email" type="text" value="" size="30" aria-required="true" required="true"></p><p class="comment-form-url"><label for="url">Website</label><input id="url" name="url" type="text" value="" size="30"></p> <input type="hidden" name="_mc4wp_subscribe_wp-comment-form" value="0"><p class="mc4wp-checkbox mc4wp-checkbox-wp-comment-form"><label><input type="checkbox" name="_mc4wp_subscribe_wp-comment-form" value="1" checked="checked"><span>Sign me up for the newsletter!</span></label></p><div class="comment-sub-ops" data-auto="position"><label for="comment-mail-sub-type" class="cso-sub-type"> <span class="cso-icon"><svg style="width:1em; height:1em; vertical-align:middle;" viewBox="0 0 16 16" version="1.1" xmlns="http://www.w3.org/2000/svg"> <g fill="currentColor" fill-rule="evenodd"> <path d="M14.1,5.63571636 C14.9517714,6.33967604 15.450459,7.19287046 15.450459,8.11238878 C15.450459,9.00675525 14.9786798,9.83837654 14.1691007,10.5309611 L15.9373937,14.0087185 L12.3204301,12.0078104 C11.9296094,13.5858368 9.54844584,14.7997638 6.66936474,14.7997638 C5.53232152,14.7997638 4.47293941,14.6104254 3.58314938,14.2840966 L3.58314938,14.2840966 L0.600000024,15.934378 L1.91489821,13.3483263 C1.31289726,12.8333222 0.962083376,12.2149306 0.962083376,11.549882 C0.962083376,11.165606 1.07921023,10.7969075 1.29424428,10.4547307 L1.29424428,10.4547307 C0.538036753,9.77771086 0.100000001,8.97417858 0.100000001,8.11238878 C0.100000001,7.04123575 0.776722924,6.06008476 1.89999998,5.30000019 L1.89999998,7.0658888 C1.89999998,7.30870143 2.09163284,7.50553995 2.34867325,7.50553995 L13.6513267,7.50553995 C13.8991221,7.50553995 14.1,7.31362877 14.1,7.0658888 L14.1,5.63571636 L14.1,5.63571636 Z M1.91455086,10.9345943 C1.80464172,11.1556337 1.74596704,11.3882813 1.74596704,11.6284523 C1.74596704,12.1628789 2.03649339,12.660053 2.53556999,13.0749705 L1.89355472,14.5590821 L3.60073421,13.7061116 L3.60073421,13.7061116 C4.4110062,14.0513606 5.42865146,14.2569046 6.53374306,14.2569046 C8.94591699,14.2569046 10.9414496,13.2775827 11.2731076,12.0036603 C10.2241563,12.3100096 9.03514487,12.482874 7.77522952,12.482874 C5.42553187,12.482874 3.3224447,11.8816356 1.91455086,10.9345943 L1.91455086,10.9345943 Z M3.03674893,0 C2.79553911,0 2.5999999,0.198275445 2.5999999,0.450938832 L2.5999999,6.42178844 C2.5999999,6.67083508 2.80610042,6.87272727 3.03674893,6.87272727 L12.9632509,6.87272727 C13.2044607,6.87272727 13.3999999,6.67445183 13.3999999,6.42178844 L13.3999999,0.450938832 C13.3999999,0.201892192 13.1938994,0 12.9632509,0 L3.03674893,0 Z M7.99999989,4.5999999 L12.5,0.600000013 L11.5625,0.600000013 L7.99999989,2.78181813 L4.43749976,0.600000013 L3.5,0.599999905 L7.99999989,4.5999999 Z"></path> </g> </svg></span> Receive Email Notifications? </label><select id="comment-mail-sub-type" name="comment_mail_sub_type" class="cso-sub-type form-control" title="Receive Notifications?"><option value="" selected="selected">no, do not subscribe</option><option value="comment">yes, replies to my comment</option><option value="comments">yes, all comments/replies</option> </select> <select id="comment-mail-sub-deliver" name="comment_mail_sub_deliver" class="cso-sub-deliver form-control" title="Notify Me" disabled="disabled"><option value="asap" selected="selected">instantly</option><option value="hourly">hourly digest</option><option value="daily">daily digest</option><option value="weekly">weekly digest</option> </select><div class="cso-links"> <span class="cso-link-new">Or, you can <a href="https://www.javacodegeeks.com/?comment_mail%5Bmanage%5D%5Bsub_new%5D=0&amp;comment_mail%5Bmanage%5D%5Bsub_form%5D%5Bpost_id%5D=31893" rel="nofollow">subscribe without commenting</a>.</span></div></div><style type="text/css">.comment-sub-ops{margin:1em
0 1em 0}.comment-sub-ops
label{display:block}.comment-sub-ops
select{box-sizing:border-box;display:inline-block}.comment-sub-ops select.cso-sub-type{width:70%;float:left}.comment-sub-ops select.cso-sub-deliver{width:28%;float:right}.comment-sub-ops select.cso-sub-deliver[disabled]{opacity:0.3}.comment-sub-ops .cso-links{font-size:80%;line-height:1.5em;margin:0
0 0 .5em;clear:both}.comment-sub-ops .cso-links .cso-link-summary{display:block;line-height:1em}.comment-sub-ops .cso-sub-list{margin:1em
0 0 0}.comment-sub-ops .cso-sub-list
label{cursor:pointer}</style><p class="form-submit"><input name="submit" type="submit" id="submit" class="submit" value="Post Comment"> <input type="hidden" name="comment_post_ID" value="31893" id="comment_post_ID"> <input type="hidden" name="comment_parent" id="comment_parent" value="0"></p><p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="14a8d8508c"></p><p style="display: none;"></p><input type="hidden" id="ak_js" name="ak_js" value="1496544271862"></form></div></div></div></div> <aside class="sidebar" style="top: 0px;"><div id="text-html-widget-2" class="text-html-box"><div id="div-gpt-ad-1415445260332-3" style="width:300px; height:250px;"> <div id="google_ads_iframe_/70432299/JCG_Side_0__container__" style="border: 0pt none;"><iframe id="google_ads_iframe_/70432299/JCG_Side_0" title="3rd party ad content" name="google_ads_iframe_/70432299/JCG_Side_0" width="300" height="250" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" style="border: 0px; vertical-align: bottom;" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/saved_resource(3).html"></iframe></div><script type="text/javascript">googletag.cmd.push(function(){googletag.display('div-gpt-ad-1415445260332-3');});</script> </div></div><div id="text-html-widget-3" class="text-html-box"><div id="div-gpt-ad-1415445260332-4" style="width:300px; height:250px;"> <script type="text/javascript">googletag.cmd.push(function(){googletag.display('div-gpt-ad-1415445260332-4');});</script><div id="google_ads_iframe_/70432299/JCG_Side_1_0__container__" style="border: 0pt none;"><iframe id="google_ads_iframe_/70432299/JCG_Side_1_0" title="3rd party ad content" name="google_ads_iframe_/70432299/JCG_Side_1_0" width="300" height="250" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" style="border: 0px; vertical-align: bottom;" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/saved_resource(4).html"></iframe></div> </div></div><div id="mc4wp_form_widget-3" class="widget widget_mc4wp_form_widget"><div class="widget-top"><h4>Newsletter</h4><div class="stripe-line"></div></div><div class="widget-container"><script type="text/javascript">(function(){if(!window.mc4wp){window.mc4wp={listeners:[],forms:{on:function(event,callback){window.mc4wp.listeners.push({event:event,callback:callback});}}}}})();</script><form id="mc4wp-form-3" class="mc4wp-form mc4wp-form-28645 mc4wp-form-theme mc4wp-form-theme-red mc4wp-ajax" method="post" data-id="28645" data-name="Sidebar"><div class="mc4wp-form-fields"><div style="padding: 15px 15px 15px; background: url(&#39;/wp-content/uploads/2014/11/newsletter-bg.jpg&#39;) no-repeat; background-color: rgb(252, 252, 252);"><span style="text-shadow: 1px 1px #D0D0D0; font-weight: bold; font-size: 14pt; display: inline;">179,260</span> insiders are already enjoying weekly updates and complimentary whitepapers!<p> <span style="text-shadow: 1px 1px #D0D0D0; font-weight: bold; font-size: 14pt; display: inline;">Join them now</span> to gain <span style="text-decoration: underline;  font-size: 14pt;">exclusive access</span> to the latest news in the Java world, as well as insights about Android, Scala, Groovy and other related technologies.</p><p> <label for="mc4wp_email"><span style="font-weight: bold; font-size: 13pt;">Email address: </span></label> <input type="email" id="mc4wp_email" name="EMAIL" required="" placeholder="Your email address"></p> <input type="submit" value="Sign up"></div><div style="display: none;"><input type="text" name="_mc4wp_honeypot" value="" tabindex="-1" autocomplete="off"></div><input type="hidden" name="_mc4wp_timestamp" value="1496544225"><input type="hidden" name="_mc4wp_form_id" value="28645"><input type="hidden" name="_mc4wp_form_element_id" value="mc4wp-form-3"></div><div class="mc4wp-response"></div></form></div></div><div id="wpjb-recent-jobs-2" class="widget widget_wpjb-recent-jobs"><div class="widget-top"><h4>Recent Jobs</h4><div class="stripe-line"></div></div><div class="widget-container"><div class="wpjb wpjb-widget"><div class="wpjb-grid wpjb-grid-compact wpjb-grid-closed-top"><div class="wpjb-grid-row"><div class="wpjb-col-100"> <span class="wpjb-widget-grid-link"><a href="https://www.javacodegeeks.com/job/software-developer-in-bracknell-uk/">Software Developer in Bracknell (UK)</a></span><br> <span class="wpjb-sub">Bracknell, United Kingdom <span class="wpjb-glyphs wpjb-icon-location"></span></span></div></div><div class="wpjb-grid-row"><div class="wpjb-col-100"> <span class="wpjb-widget-grid-link"><a href="https://www.javacodegeeks.com/job/software-engineer-service-provider/">Software Engineer – Service Provider</a></span><br> <span class="wpjb-sub">Bracknell, United Kingdom <span class="wpjb-glyphs wpjb-icon-location"></span></span></div></div><div class=""><div class="wpjb-col-100"> <span class="wpjb-widget-grid-link wpjb-widget-recent-jobs-all"> <a class="wpjb-link-view-all" href="https://www.javacodegeeks.com/jobs/">View All</a> <span class="wpjb-glyphs wpjb-icon-right-open"></span> </span></div></div></div></div></div></div><div id="text-html-widget-5" class="widget text-html"><div class="widget-top"><h4>Join Us</h4><div class="stripe-line"></div></div><div class="widget-container"><div><div style="width:150px; height:150px; float:left; margin-top:-10px; margin-left:-10px;"> <img title="Join Us" alt="Join Us" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/w4g-badge-150x150.png" width="150" height="150"></div> With <label style="border:1px solid #D8D8D8;background:#F0F0F0;border-radius:3px;-moz-border-radius:3px;text-shadow: 1px 1px #D0D0D0;text-align:center;font-weight:bold;padding-left:3px;padding-right:3px">1,240,600</label> monthly unique visitors and over <label style="border:1px solid #D8D8D8;background:#F0F0F0;border-radius:3px;-moz-border-radius:3px;text-shadow: 1px 1px #D0D0D0;text-align:center;font-weight:bold;padding-left:3px;padding-right:3px">500</label> authors we are placed among the top Java related sites around. Constantly being on the lookout for partners; we encourage you to join us. So If you have a blog with unique and interesting content then you should check out our <strong><a href="http://www.javacodegeeks.com/join-us/jcg">JCG</a></strong> partners program. You can also be a <strong><a href="http://www.javacodegeeks.com/join-us/w4g">guest writer</a></strong> for Java Code Geeks and hone your writing skills!</div><div class="clear"></div></div></div><div id="text-html-widget-4" class="text-html-box"><div id="div-gpt-ad-1415445260332-6" style="width:300px; height:600px;"> <script type="text/javascript">googletag.cmd.push(function(){googletag.display('div-gpt-ad-1415445260332-6');});</script><div id="google_ads_iframe_/70432299/JCG_Side_2_0__container__" style="border: 0pt none;"><iframe id="google_ads_iframe_/70432299/JCG_Side_2_0" title="3rd party ad content" name="google_ads_iframe_/70432299/JCG_Side_2_0" width="300" height="600" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" style="border: 0px; vertical-align: bottom;" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/saved_resource(5).html"></iframe></div> </div></div> </aside><div class="clear"></div><div class="clear"></div></div></div><footer id="theme-footer" class="fade-in animated4"><div id="footer-widget-area" class="wide-right-3c container"><div id="footer-first" class="footer-widgets-box"><div id="linkcat-4" class="footer-widget widget_links"><div class="footer-widget-top"><h4>Knowledge Base</h4></div><div class="footer-widget-container"><ul class="xoxo blogroll"><li><a href="http://www.javacodegeeks.com/courses/" target="_blank">Courses</a></li><li><a href="http://examples.javacodegeeks.com/" target="_blank">Examples</a></li><li><a href="http://www.javacodegeeks.com/p/resources.html" target="_blank">Resources</a></li><li><a href="http://www.javacodegeeks.com/tutorials/" target="_blank">Tutorials</a></li><li><a href="http://www.javacodegeeks.com/whitepaper/" target="_blank">Whitepapers</a></li></ul></div></div><div id="linkcat-3" class="footer-widget widget_links"><div class="footer-widget-top"><h4>Partners</h4></div><div class="footer-widget-container"><ul class="xoxo blogroll"><li><a href="http://www.mkyong.com/" target="_blank">Mkyong</a></li></ul></div></div><div id="linkcat-5" class="footer-widget widget_links"><div class="footer-widget-top"><h4>The Code Geeks Network</h4></div><div class="footer-widget-container"><ul class="xoxo blogroll"><li><a href="http://www.dotnetcodegeeks.com/" target="_blank">.NET Code Geeks</a></li><li><a href="http://www.javacodegeeks.com/" target="_blank">Java Code Geeks</a></li><li><a href="http://www.systemcodegeeks.com/" target="_blank">System Code Geeks</a></li><li><a href="http://www.webcodegeeks.com/" target="_blank">Web Code Geeks</a></li></ul></div></div></div><div id="footer-second" class="footer-widgets-box"><div id="linkcat-652" class="footer-widget widget_links"><div class="footer-widget-top"><h4>Hall Of Fame</h4></div><div class="footer-widget-container"><ul class="xoxo blogroll"><li><a href="http://www.javacodegeeks.com/2010/10/android-full-application-tutorial.html" target="_blank">“Android Full Application Tutorial” series</a></li><li><a href="http://www.javacodegeeks.com/2013/01/15-online-learning-websites-that-you-should-check-out.html" target="_blank">11 Online Learning websites that you should check out</a></li><li><a href="http://www.javacodegeeks.com/2013/04/advantages-and-disadvantages-of-cloud-computing-cloud-computing-pros-and-cons.html" target="_blank">Advantages and Disadvantages of Cloud Computing – Cloud computing pros and cons</a></li><li><a href="http://www.javacodegeeks.com/2011/02/android-google-maps-tutorial.html" target="_blank">Android Google Maps Tutorial</a></li><li><a href="http://www.javacodegeeks.com/2011/01/android-json-parsing-gson-tutorial.html" target="_blank">Android JSON Parsing with Gson Tutorial</a></li><li><a href="http://www.javacodegeeks.com/2010/09/android-location-based-services.html" target="_blank">Android Location Based Services Application – GPS location</a></li><li><a href="http://www.javacodegeeks.com/2011/01/android-quick-preferences-tutorial.html" target="_blank">Android Quick Preferences Tutorial</a></li><li><a href="http://www.javacodegeeks.com/2013/03/difference-between-comparator-and-comparable-in-java.html" target="_blank">Difference between Comparator and Comparable in Java</a></li><li><a href="http://www.javacodegeeks.com/2010/05/gwt-2-spring-3-jpa-2-hibernate-35-2.html" target="_blank">GWT 2 Spring 3 JPA 2 Hibernate 3.5 Tutorial</a></li><li><a href="http://www.javacodegeeks.com/2010/08/java-best-practices-vector-arraylist.html" target="_blank">Java Best Practices – Vector vs ArrayList vs HashSet</a></li></ul></div></div></div><div id="footer-third" class="footer-widgets-box"><div id="text-html-widget-7" class="footer-widget text-html"><div class="footer-widget-top"><h4>About Java Code Geeks</h4></div><div class="footer-widget-container"><div>JCGs (Java Code Geeks) is an independent online community focused on creating the ultimate Java to Java developers resource center; targeted at the technical architect, technical team lead (senior developer), project manager and junior developers alike. JCGs serve the Java, SOA, Agile and Telecom communities with daily news written by domain experts, articles, tutorials, reviews, announcements, code snippets and open source projects.</div><div class="clear"></div></div></div><div id="text-html-widget-8" class="footer-widget text-html"><div class="footer-widget-top"><h4>Disclaimer</h4></div><div class="footer-widget-container"><div>All trademarks and registered trademarks appearing on Java Code Geeks are the property of their respective owners. Java is a trademark or registered trademark of Oracle Corporation in the United States and other countries. Examples Java Code Geeks is not connected to Oracle Corporation and is not sponsored by Oracle Corporation.</div><div class="clear"></div></div></div></div></div><div class="clear"></div> </footer><div class="clear"></div><div class="footer-bottom fade-in animated4"><div class="container"><div class="social-icons icon_flat"> <a class="ttip" href="http://feeds.feedburner.com/JavaCodeGeeks" target="_blank" original-title="Rss"><i class="tieicon-rss"></i></a><a class="ttip" href="https://plus.google.com/+JavaCodeGeeks/" target="_blank" original-title="Google+"><i class="tieicon-gplus"></i></a><a class="ttip" href="https://www.facebook.com/javacodegeeks" target="_blank" original-title="Facebook"><i class="tieicon-facebook"></i></a><a class="ttip" href="https://twitter.com/javacodegeeks" target="_blank" original-title="Twitter"><i class="tieicon-twitter"></i></a><a class="ttip" href="https://www.linkedin.com/groups/Java-Code-Geeks-3810709" target="_blank" original-title="LinkedIn"><i class="tieicon-linkedin"></i></a><a class="ttip" href="https://github.com/javacodegeeks/" target="_blank" original-title="Github"><i class="tieicon-github"></i></a></div><div class="alignleft"> Java Code Geeks and all content copyright © 2010-2017,  <a href="http://www.exelixismedia.com/">Exelixis Media P.C.</a> | <a href="http://www.javacodegeeks.com/about/terms-of-use/">Terms of Use</a> | <a href="http://www.javacodegeeks.com/about/privacy-policy/">Privacy Policy</a> | <a href="https://www.javacodegeeks.com/cdn-cgi/l/email-protection#3a494f4a4a55484e7a505b4c5b59555e5f5d5f5f514914595557">Contact</a></div></div></div></div><div id="topcontrol" class="tieicon-up-open" title="Scroll To Top" style="bottom: 15px;"></div><div id="fb-root"></div><div id="um_upload_single" style="display:none"></div><div id="um_view_photo" style="display:none"><a href="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#" data-action="um_remove_modal" class="um-modal-close"><i class="um-faicon-times"></i></a><div class="um-modal-body photo"><div class="um-modal-photo"></div></div></div> <script>(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)})(window,document,'script','//www.google-analytics.com/analytics.js','ga');ga('create','UA-12271632-2','auto');ga('send','pageview');</script>  <script type="text/javascript">window.cookieconsent_options={"message":"We use cookies to ensure that we give you the best experience on our website. If you continue to use this site, you agree to our use of cookies","dismiss":"Got it!","learnMore":"More info","link":"about/privacy-policy/","theme":"light-floating"};</script> <script type="text/javascript" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/cookieconsent.min.js"></script>  <script>var snp_f=[];var snp_hostname=new RegExp(location.host);var snp_http=new RegExp("^(http|https)://","i");var snp_cookie_prefix='';var snp_separate_cookies=false;var snp_ajax_url='https://www.javacodegeeks.com/wp-admin/admin-ajax.php';var snp_ignore_cookies=false;var snp_enable_analytics_events=true;var snp_enable_mobile=true;var snp_use_in_all=false;var snp_excluded_urls=[];snp_excluded_urls.push('');</script> <div class="snp-root"> <input type="hidden" id="snp_popup" value=""> <input type="hidden" id="snp_popup_id" value=""> <input type="hidden" id="snp_popup_theme" value=""> <input type="hidden" id="snp_exithref" value=""> <input type="hidden" id="snp_exittarget" value=""><div id="snppopup-welcome" class="snp-pop-59902 snppopup"><input type="hidden" class="snp_open" value="load"><input type="hidden" class="snp_show_on_exit" value="2"><input type="hidden" class="snp_exit_js_alert_text" value=""><input type="hidden" class="snp_open_after" value="5"><input type="hidden" class="snp_open_scroll" value="10"><input type="hidden" class="snp_optin_redirect_url" value=""><input type="hidden" class="snp_show_cb_button" value="yes"><input type="hidden" class="snp_popup_id" value="59902"><input type="hidden" class="snp_popup_theme" value="builder"><input type="hidden" class="snp_overlay" value="default"><input type="hidden" class="snp_cookie_conversion" value="30"><input type="hidden" class="snp_cookie_close" value="5"><div class="snp-builder"><div class="snp-bld-step-cont snp-bld-step-cont-1 snp-bld-center"><div id="snp-bld-step-1" data-width="800" data-height="500" class="snp-bld-step snp-bld-step-1  animated bounceInDown " data-animation="bounceInDown"><form action="https://www.javacodegeeks.com/2014/11/junit-tutorial-unit-testing.html#" method="post" class="snp-subscribeform snp_subscribeform"><div class="bld-el-cont bld-el-text bld-step-1-el-0 "><div class="bld-el  "><p style="text-align: center;"><strong><span style="font-size: 26px;">Want to take your Java skills to the next level?</span></strong></p></div></div><div class="bld-el-cont bld-el-text bld-step-1-el-1 "><div class="bld-el  "><p style="text-align: center;"><span style="font-size: 18px;">Grab our programming books for <strong>FREE</strong>!</span></p></div></div><div class="bld-el-cont bld-el-text bld-step-1-el-2 "><div class="bld-el  "><p>Here are some of the eBooks you will get:</p></div></div><div class="bld-el-cont bld-el-pointlist bld-step-1-el-3  animated fadeIn" data-animation="fadeIn"><ul class="bld-el  "><li>Spring Interview QnA</li></ul></div><div class="bld-el-cont bld-el-pointlist bld-step-1-el-4  animated fadeIn" data-animation="fadeIn"><ul class="bld-el  "><li>Multithreading &amp; Concurrency QnA</li></ul></div><div class="bld-el-cont bld-el-pointlist bld-step-1-el-5  animated fadeIn" data-animation="fadeIn"><ul class="bld-el  "><li>JPA Minibook</li></ul></div><div class="bld-el-cont bld-el-pointlist bld-step-1-el-6  animated fadeIn" data-animation="fadeIn"><ul class="bld-el  "><li>JVM Troubleshooting Guide</li></ul></div><div class="bld-el-cont bld-el-pointlist bld-step-1-el-7  animated fadeIn" data-animation="fadeIn"><ul class="bld-el  "><li>Advanced Java</li></ul></div><div class="bld-el-cont bld-el-pointlist bld-step-1-el-8  animated fadeIn" data-animation="fadeIn"><ul class="bld-el  "><li>Java Interview QnA</li></ul></div><div class="bld-el-cont bld-el-pointlist bld-step-1-el-9  animated fadeIn" data-animation="fadeIn"><ul class="bld-el  "><li>Java Design Patterns</li></ul></div><div class="bld-el-cont bld-el-input bld-step-1-el-10  animated bounceIn bld-icon" data-animation="bounceIn"><span class="bld-input-icon"><i class="fa fa-envelope"></i></span><div class="bld-table-cont"><input placeholder="Your email address" required="" name="email" value="" class="bld-el  "></div></div><div class="bld-el-cont bld-el-button bld-step-1-el-11  animated bounceIn" data-animation="bounceIn"><button class="bld-el   snp-submit snp-cursor-pointer" data-loading="&lt;i class=&quot;fa fa-spinner fa-spin&quot;&gt;&lt;/i&gt;" type="submit">Get the Books <i style="margin-left: 15px;" class="fa fa-arrow-right"></i></button></div><div class="bld-el-cont bld-el-button bld-step-1-el-12  animated bounceIn" data-animation="bounceIn"><button class="bld-el   snp-close-link snp-cursor-pointer" data-loading="&lt;i class=&quot;fa fa-spinner fa-spin&quot;&gt;&lt;/i&gt;" type="button">No Thanks!</button></div><div class="bld-el-cont bld-el-img bld-step-1-el-13  animated bounceInLeft" data-animation="bounceInLeft"><img class="bld-el  " src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/Spring-Interview-Questions_book_lp.png"></div><div class="bld-el-cont bld-el-img bld-step-1-el-14  animated bounceInLeft" data-animation="bounceInLeft"><img class="bld-el  " src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/Multithreading-and-Concurrency-Questions_book_lp.png"></div><div class="bld-el-cont bld-el-img bld-step-1-el-15  animated bounceInLeft" data-animation="bounceInLeft"><img class="bld-el  " src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/jpa-tutorial_book_lp.png"></div><div class="bld-el-cont bld-el-img bld-step-1-el-16  animated bounceInLeft" data-animation="bounceInLeft"><img class="bld-el  " src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/JVM_Troubleshooting_Guide_book_lp.png"></div><div class="bld-el-cont bld-el-img bld-step-1-el-17  animated bounceInLeft" data-animation="bounceInLeft"><img class="bld-el  " src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/Advanced_Java_book_lp.png"></div><div class="bld-el-cont bld-el-img bld-step-1-el-18  animated bounceInLeft" data-animation="bounceInLeft"><img class="bld-el  " src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/Java-Interview-Questions_book_lp.png"></div><div class="bld-el-cont bld-el-img bld-step-1-el-19  animated bounceInLeft" data-animation="bounceInLeft"><img class="bld-el  " src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/java_design_patterns_book_lp.png"></div><div class="bld-el-cont bld-el-button bld-step-1-el-20  animated fadeIn" data-animation="fadeIn"><button class="bld-el   snp-close-link snp-cursor-pointer" data-loading="&lt;i class=&quot;fa fa-spinner fa-spin&quot;&gt;&lt;/i&gt;" type="button">Close Popup</button></div></form></div></div></div><div class="snp-overlay" id="snp-pop-59902-overlay"></div><script>var snp_bld_open59902=function(){_snp_bld_open(59902);}
var snp_bld_close59902=function(){_snp_bld_close(59902);}</script> <style>.snp-pop-59902 .snp-bld-step-cont-1{}.snp-pop-59902 .snp-bld-step-1{width:800px;height:500px;background-position:center center;background-repeat:repeat}.snp-pop-59902 .bld-step-1-el-0{border:1px
solid transparent;width:413px;height:70px;top:9px;left:380px;z-index:100}.snp-pop-59902 .bld-step-1-el-0 .bld-el,.snp-pop-59902 .bld-step-1-el-0 .bld-el p,.snp-pop-59902 .bld-step-1-el-0 .bld-el:focus,.snp-pop-59902 .bld-step-1-el-0 .bld-el:active,.snp-pop-59902 .bld-step-1-el-0 .bld-el:hover{outline:0;font-family:Open Sans;border-width:0px;background-position:center center;background-repeat:repeat}.snp-pop-59902 .bld-step-1-el-1{border:1px
solid transparent;width:255px;height:50px;top:93px;left:455px;z-index:100}.snp-pop-59902 .bld-step-1-el-1 .bld-el,.snp-pop-59902 .bld-step-1-el-1 .bld-el p,.snp-pop-59902 .bld-step-1-el-1 .bld-el:focus,.snp-pop-59902 .bld-step-1-el-1 .bld-el:active,.snp-pop-59902 .bld-step-1-el-1 .bld-el:hover{outline:0;font-family:Open Sans;border-width:0px;background-position:center center;background-repeat:repeat}.snp-pop-59902 .bld-step-1-el-2{border:1px
solid transparent;width:336px;height:29px;top:155px;left:427px;z-index:100}.snp-pop-59902 .bld-step-1-el-2 .bld-el,.snp-pop-59902 .bld-step-1-el-2 .bld-el p,.snp-pop-59902 .bld-step-1-el-2 .bld-el:focus,.snp-pop-59902 .bld-step-1-el-2 .bld-el:active,.snp-pop-59902 .bld-step-1-el-2 .bld-el:hover{outline:0;font-family:Open Sans;border-width:0px;background-position:center center;background-repeat:repeat}.snp-pop-59902 .bld-step-1-el-3{border:1px
solid transparent;width:320px;height:19px;top:184px;left:428px;z-index:100;-webkit-animation-delay:2000ms;animation-delay:2000ms}.snp-pop-59902 .bld-step-1-el-3 .bld-el,.snp-pop-59902 .bld-step-1-el-3 .bld-el p,.snp-pop-59902 .bld-step-1-el-3 .bld-el:focus,.snp-pop-59902 .bld-step-1-el-3 .bld-el:active,.snp-pop-59902 .bld-step-1-el-3 .bld-el:hover{outline:0;font-family:Open Sans;font-size:14px;border-width:0px;background-position:center center;background-repeat:repeat}.snp-pop-59902 .bld-step-1-el-3 ul.bld-el
li{line-height:normal;padding-left:15px;background-image:url("/wp-content/plugins/arscode-ninja-popups/img/dot.png")}.snp-pop-59902 .bld-step-1-el-4{border:1px
solid transparent;width:320px;height:19px;top:203px;left:428px;z-index:100;-webkit-animation-delay:3000ms;animation-delay:3000ms}.snp-pop-59902 .bld-step-1-el-4 .bld-el,.snp-pop-59902 .bld-step-1-el-4 .bld-el p,.snp-pop-59902 .bld-step-1-el-4 .bld-el:focus,.snp-pop-59902 .bld-step-1-el-4 .bld-el:active,.snp-pop-59902 .bld-step-1-el-4 .bld-el:hover{outline:0;font-family:Open Sans;font-size:14px;border-width:0px;background-position:center center;background-repeat:repeat}.snp-pop-59902 .bld-step-1-el-4 ul.bld-el
li{line-height:normal;padding-left:15px;background-image:url("/wp-content/plugins/arscode-ninja-popups/img/dot.png")}.snp-pop-59902 .bld-step-1-el-5{border:1px
solid transparent;width:320px;height:19px;top:222px;left:428px;z-index:100;-webkit-animation-delay:4000ms;animation-delay:4000ms}.snp-pop-59902 .bld-step-1-el-5 .bld-el,.snp-pop-59902 .bld-step-1-el-5 .bld-el p,.snp-pop-59902 .bld-step-1-el-5 .bld-el:focus,.snp-pop-59902 .bld-step-1-el-5 .bld-el:active,.snp-pop-59902 .bld-step-1-el-5 .bld-el:hover{outline:0;font-family:Open Sans;font-size:14px;border-width:0px;background-position:center center;background-repeat:repeat}.snp-pop-59902 .bld-step-1-el-5 ul.bld-el
li{line-height:normal;padding-left:15px;background-image:url("/wp-content/plugins/arscode-ninja-popups/img/dot.png")}.snp-pop-59902 .bld-step-1-el-6{border:1px
solid transparent;width:320px;height:19px;top:241px;left:428px;z-index:100;-webkit-animation-delay:5000ms;animation-delay:5000ms}.snp-pop-59902 .bld-step-1-el-6 .bld-el,.snp-pop-59902 .bld-step-1-el-6 .bld-el p,.snp-pop-59902 .bld-step-1-el-6 .bld-el:focus,.snp-pop-59902 .bld-step-1-el-6 .bld-el:active,.snp-pop-59902 .bld-step-1-el-6 .bld-el:hover{outline:0;font-family:Open Sans;font-size:14px;border-width:0px;background-position:center center;background-repeat:repeat}.snp-pop-59902 .bld-step-1-el-6 ul.bld-el
li{line-height:normal;padding-left:15px;background-image:url("/wp-content/plugins/arscode-ninja-popups/img/dot.png")}.snp-pop-59902 .bld-step-1-el-7{border:1px
solid transparent;width:320px;height:19px;top:260px;left:428px;z-index:100;-webkit-animation-delay:6000ms;animation-delay:6000ms}.snp-pop-59902 .bld-step-1-el-7 .bld-el,.snp-pop-59902 .bld-step-1-el-7 .bld-el p,.snp-pop-59902 .bld-step-1-el-7 .bld-el:focus,.snp-pop-59902 .bld-step-1-el-7 .bld-el:active,.snp-pop-59902 .bld-step-1-el-7 .bld-el:hover{outline:0;font-family:Open Sans;font-size:14px;border-width:0px;background-position:center center;background-repeat:repeat}.snp-pop-59902 .bld-step-1-el-7 ul.bld-el
li{line-height:normal;padding-left:15px;background-image:url("/wp-content/plugins/arscode-ninja-popups/img/dot.png")}.snp-pop-59902 .bld-step-1-el-8{border:1px
solid transparent;width:200px;height:19px;top:279px;left:428px;z-index:100;-webkit-animation-delay:7000ms;animation-delay:7000ms}.snp-pop-59902 .bld-step-1-el-8 .bld-el,.snp-pop-59902 .bld-step-1-el-8 .bld-el p,.snp-pop-59902 .bld-step-1-el-8 .bld-el:focus,.snp-pop-59902 .bld-step-1-el-8 .bld-el:active,.snp-pop-59902 .bld-step-1-el-8 .bld-el:hover{outline:0;font-family:Open Sans;font-size:14px;border-width:0px;background-position:center center;background-repeat:repeat}.snp-pop-59902 .bld-step-1-el-8 ul.bld-el
li{line-height:normal;padding-left:15px;background-image:url("/wp-content/plugins/arscode-ninja-popups/img/dot.png")}.snp-pop-59902 .bld-step-1-el-9{border:1px
solid transparent;width:320px;height:19px;top:298px;left:428px;z-index:100;-webkit-animation-delay:8000ms;animation-delay:8000ms}.snp-pop-59902 .bld-step-1-el-9 .bld-el,.snp-pop-59902 .bld-step-1-el-9 .bld-el p,.snp-pop-59902 .bld-step-1-el-9 .bld-el:focus,.snp-pop-59902 .bld-step-1-el-9 .bld-el:active,.snp-pop-59902 .bld-step-1-el-9 .bld-el:hover{outline:0;font-family:Open Sans;font-size:14px;border-width:0px;background-position:center center;background-repeat:repeat}.snp-pop-59902 .bld-step-1-el-9 ul.bld-el
li{line-height:normal;padding-left:15px;background-image:url("/wp-content/plugins/arscode-ninja-popups/img/dot.png")}.snp-pop-59902 .bld-step-1-el-10{border:1px
solid transparent;width:415px;height:50px;top:339px;left:380px;z-index:100;-webkit-animation-delay:9000ms;animation-delay:9000ms}.snp-pop-59902 .bld-step-1-el-10 .bld-el,.snp-pop-59902 .bld-step-1-el-10 .bld-el p,.snp-pop-59902 .bld-step-1-el-10 .bld-el:focus,.snp-pop-59902 .bld-step-1-el-10 .bld-el:active,.snp-pop-59902 .bld-step-1-el-10 .bld-el:hover{outline:0;height:48px;font-family:Open Sans;font-size:14px;border-style:solid;border-width:1px;border-color:#197fd2;border-radius:5px;padding:5px;background-position:center center;background-repeat:repeat}.snp-pop-59902 .bld-step-1-el-10 .bld-el::-webkit-input-placeholder{color: }.snp-pop-59902 .bld-step-1-el-10 .bld-el::-moz-placeholder{color: }.snp-pop-59902 .bld-step-1-el-10.bld-icon .bld-input-icon{border-right-width:0 !important;width:px;font-size:20px;border-style:solid;border-width:1px;border-color:#197fd2;border-radius:5px;background-color:#197fd2}.snp-pop-59902 .bld-step-1-el-11{border:1px
solid transparent;width:200px;height:60px;top:400px;left:384px;z-index:100;-webkit-animation-delay:9000ms;animation-delay:9000ms}.snp-pop-59902 .bld-step-1-el-11 .bld-el,.snp-pop-59902 .bld-step-1-el-11 .bld-el p,.snp-pop-59902 .bld-step-1-el-11 .bld-el:focus,.snp-pop-59902 .bld-step-1-el-11 .bld-el:active,.snp-pop-59902 .bld-step-1-el-11 .bld-el:hover{outline:0;color:#fff;font-family:Open Sans;font-size:20px;font-weight:bold;border-style:none;border-width:0px;border-radius:5px;background-color:#197FD2 !important;background-position:center center;background-repeat:repeat;padding-left:10px}.snp-pop-59902 .bld-step-1-el-12{border:1px
solid transparent;width:200px;height:60px;top:400px;left:591px;z-index:100;-webkit-animation-delay:9000ms;animation-delay:9000ms}.snp-pop-59902 .bld-step-1-el-12 .bld-el,.snp-pop-59902 .bld-step-1-el-12 .bld-el p,.snp-pop-59902 .bld-step-1-el-12 .bld-el:focus,.snp-pop-59902 .bld-step-1-el-12 .bld-el:active,.snp-pop-59902 .bld-step-1-el-12 .bld-el:hover{outline:0;color:#fff;font-family:Open Sans;font-size:20px;font-weight:bold;border-style:none;border-width:0px;border-radius:5px;background-color:#5b5b5b !important;background-position:center center;background-repeat:repeat;padding-left:10px}.snp-pop-59902 .bld-step-1-el-13{border:1px
solid transparent;width:265px;height:397px;top:3px;left:-56px;z-index:100;-webkit-animation-delay:2000ms;animation-delay:2000ms}.snp-pop-59902 .bld-step-1-el-13 .bld-el,.snp-pop-59902 .bld-step-1-el-13 .bld-el p,.snp-pop-59902 .bld-step-1-el-13 .bld-el:focus,.snp-pop-59902 .bld-step-1-el-13 .bld-el:active,.snp-pop-59902 .bld-step-1-el-13 .bld-el:hover{outline:0}.snp-pop-59902 .bld-step-1-el-14{border:1px
solid transparent;width:265px;height:397px;top:21px;left:-30px;z-index:100;-webkit-animation-delay:3000ms;animation-delay:3000ms}.snp-pop-59902 .bld-step-1-el-14 .bld-el,.snp-pop-59902 .bld-step-1-el-14 .bld-el p,.snp-pop-59902 .bld-step-1-el-14 .bld-el:focus,.snp-pop-59902 .bld-step-1-el-14 .bld-el:active,.snp-pop-59902 .bld-step-1-el-14 .bld-el:hover{outline:0}.snp-pop-59902 .bld-step-1-el-15{border:1px
solid transparent;width:265px;height:397px;top:42px;left:0px;z-index:100;-webkit-animation-delay:4000ms;animation-delay:4000ms}.snp-pop-59902 .bld-step-1-el-15 .bld-el,.snp-pop-59902 .bld-step-1-el-15 .bld-el p,.snp-pop-59902 .bld-step-1-el-15 .bld-el:focus,.snp-pop-59902 .bld-step-1-el-15 .bld-el:active,.snp-pop-59902 .bld-step-1-el-15 .bld-el:hover{outline:0}.snp-pop-59902 .bld-step-1-el-16{border:1px
solid transparent;width:265px;height:397px;top:62px;left:28px;z-index:100;-webkit-animation-delay:5000ms;animation-delay:5000ms}.snp-pop-59902 .bld-step-1-el-16 .bld-el,.snp-pop-59902 .bld-step-1-el-16 .bld-el p,.snp-pop-59902 .bld-step-1-el-16 .bld-el:focus,.snp-pop-59902 .bld-step-1-el-16 .bld-el:active,.snp-pop-59902 .bld-step-1-el-16 .bld-el:hover{outline:0}.snp-pop-59902 .bld-step-1-el-17{border:1px
solid transparent;width:265px;height:397px;top:81px;left:58px;z-index:100;-webkit-animation-delay:6000ms;animation-delay:6000ms}.snp-pop-59902 .bld-step-1-el-17 .bld-el,.snp-pop-59902 .bld-step-1-el-17 .bld-el p,.snp-pop-59902 .bld-step-1-el-17 .bld-el:focus,.snp-pop-59902 .bld-step-1-el-17 .bld-el:active,.snp-pop-59902 .bld-step-1-el-17 .bld-el:hover{outline:0}.snp-pop-59902 .bld-step-1-el-18{border:1px
solid transparent;width:265px;height:397px;top:100px;left:88px;z-index:100;-webkit-animation-delay:7000ms;animation-delay:7000ms}.snp-pop-59902 .bld-step-1-el-18 .bld-el,.snp-pop-59902 .bld-step-1-el-18 .bld-el p,.snp-pop-59902 .bld-step-1-el-18 .bld-el:focus,.snp-pop-59902 .bld-step-1-el-18 .bld-el:active,.snp-pop-59902 .bld-step-1-el-18 .bld-el:hover{outline:0}.snp-pop-59902 .bld-step-1-el-19{border:1px
solid transparent;width:265px;height:397px;top:121px;left:118px;z-index:100;-webkit-animation-delay:8000ms;animation-delay:8000ms}.snp-pop-59902 .bld-step-1-el-19 .bld-el,.snp-pop-59902 .bld-step-1-el-19 .bld-el p,.snp-pop-59902 .bld-step-1-el-19 .bld-el:focus,.snp-pop-59902 .bld-step-1-el-19 .bld-el:active,.snp-pop-59902 .bld-step-1-el-19 .bld-el:hover{outline:0}.snp-pop-59902 .bld-step-1-el-20{border:1px
solid transparent;width:127px;height:26px;top:466px;left:520px;z-index:100;-webkit-animation-delay:750ms;animation-delay:750ms}.snp-pop-59902 .bld-step-1-el-20 .bld-el,.snp-pop-59902 .bld-step-1-el-20 .bld-el p,.snp-pop-59902 .bld-step-1-el-20 .bld-el:focus,.snp-pop-59902 .bld-step-1-el-20 .bld-el:active,.snp-pop-59902 .bld-step-1-el-20 .bld-el:hover{outline:0;color:#d33;font-family:Open Sans;font-size:14px;font-weight:bold;border-style:none;border-width:0px;background-color:#fafafa !important;background-position:center center;background-repeat:repeat}#snp-pop-59902-overlay{opacity:1;background-color:#fafafa}</style><script>snp_f['snppopup-welcome-open']=snp_bld_open59902;snp_f['snppopup-welcome-close']=snp_bld_close59902;</script></div></div> <script type="text/javascript">/*<![CDATA[*/(function(){function addEventListener(element,event,handler){if(element.addEventListener){element.addEventListener(event,handler,false);}else if(element.attachEvent){element.attachEvent('on'+event,handler);}}function maybePrefixUrlField(){if(this.value.trim()!==''&&this.value.indexOf('http')!==0){this.value="http://"+this.value;}}
var urlFields=document.querySelectorAll('.mc4wp-form input[type="url"]');if(urlFields&&urlFields.length>0){for(var j=0;j<urlFields.length;j++){addEventListener(urlFields[j],'blur',maybePrefixUrlField);}}
var testInput=document.createElement('input');testInput.setAttribute('type','date');if(testInput.type!=='date'){var dateFields=document.querySelectorAll('.mc4wp-form input[type="date"]');for(var i=0;i<dateFields.length;i++){if(!dateFields[i].placeholder){dateFields[i].placeholder='YYYY-MM-DD';}
if(!dateFields[i].pattern){dateFields[i].pattern='[0-9]{4}-(0[1-9]|1[012])-(0[1-9]|1[0-9]|2[0-9]|3[01])';}}}})();/*]]>*/</script> <link rel="stylesheet" id="font-Open+Sans-css" href="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/css(1)" type="text/css" media="all"> <script type="text/javascript">var qpprFrontData={"linkData":{"https:\/\/www.javacodegeeks.com\/2016\/12\/future-java-might-look-like.html":[0,0,""]},"siteURL":"https:\/\/www.javacodegeeks.com","siteURLq":"https:\/\/www.javacodegeeks.com"};</script> <script type="text/javascript">var tie={"go_to":"Go to...","ajaxurl":"https:\/\/www.javacodegeeks.com\/wp-admin\/admin-ajax.php","your_rating":"Your Rating:","is_singular":"1","reading_indicator":""};</script> <script type="text/javascript" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/imagesloaded.min.js"></script> <script type="text/javascript" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/masonry.min.js"></script> <script type="text/javascript" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/jquery.masonry.min.js"></script> <script type="text/javascript">var um_scripts={"ajaxurl":"https:\/\/www.javacodegeeks.com\/wp-admin\/admin-ajax.php","fileupload":"https:\/\/www.javacodegeeks.com\/wp-content\/plugins\/ultimate-member\/core\/lib\/upload\/um-file-upload.php","imageupload":"https:\/\/www.javacodegeeks.com\/wp-content\/plugins\/ultimate-member\/core\/lib\/upload\/um-image-upload.php"};</script> <script type="text/javascript" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/um.min.js"></script> <script type="text/javascript">var mc4wp_forms_config=[];</script> <script type="text/javascript">var mc4wp_ajax_vars={"loading_character":"\u2022","ajax_url":"https:\/\/www.javacodegeeks.com\/wp-admin\/admin-ajax.php?action=mc4wp-form","error_text":"Oops. Something went wrong. Please try again later."};</script> <!--[if lte IE 9]> <script type='text/javascript' src='//www.javacodegeeks.com/wp-content/plugins/mailchimp-for-wp/assets/js/third-party/placeholders.min.js'></script> <![endif]--> <script type="text/javascript">jQuery('#request').val('');</script> <script type="text/javascript">(function($)
{'use strict';$(document).ready(function()
{var $subOps=$('.comment-sub-ops'),$subType,$subDeliver;if($subOps.data('auto')==='position')$subOps.prevUntil('form').each(function()
{var $this=$(this);if($this.find(':input[type="submit"]').length)
{$subOps.remove(),$this.before($subOps);return false;}});$subOps=$('.comment-sub-ops'),$subType=$subOps.find('select.cso-sub-type'),$subDeliver=$subOps.find('select.cso-sub-deliver');$subType.on('change',function()
{if($(this).val()==='')
$subDeliver.attr('disabled','disabled');else $subDeliver.removeAttr('disabled');}).trigger('change');});})(jQuery);</script><script type="text/javascript">(function($)
{'use strict';$(document).ready(function()
{var $subOps=$('.comment-sub-ops'),$subType,$subDeliver;if($subOps.data('auto')==='position')$subOps.prevUntil('form').each(function()
{var $this=$(this);if($this.find(':input[type="submit"]').length)
{$subOps.remove(),$this.before($subOps);return false;}});$subOps=$('.comment-sub-ops'),$subType=$subOps.find('select.cso-sub-type'),$subDeliver=$subOps.find('select.cso-sub-deliver');$subType.on('change',function()
{if($(this).val()==='')
$subDeliver.attr('disabled','disabled');else $subDeliver.removeAttr('disabled');}).trigger('change');});})(jQuery);</script> <script type="text/javascript" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/shCore.js"></script> <script type="text/javascript" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/shBrushBash.js"></script> <script type="text/javascript" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/shBrushJava.js"></script> <script type="text/javascript" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/shBrushScala.js"></script> <script type="text/javascript" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/shBrushGroovy.js"></script> <script type="text/javascript" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/shBrushSql.js"></script> <script type="text/javascript" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/shBrushXml.js"></script> <script type="text/javascript" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/shBrushJScript.js"></script> <script type="text/javascript" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/shAll.js"></script> <link rel="stylesheet" href="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/shCore.css" type="text/css" media="all"><link rel="stylesheet" href="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/shThemeDefault.css" type="text/css" media="all"> <script type="text/javascript" src="./JUnit Tutorial for Unit Testing – The ULTIMATE Guide (PDF Download)_files/3f1ae.single.include-footer.3c5ccd.js"></script> </body></html>