<!DOCTYPE html>
<!-- saved from url=(0063)https://www.javacodegeeks.com/2015/11/mockito-verification.html -->
<html lang="en-US" prefix="og: http://ogp.me/ns#"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><link rel="stylesheet" type="text/css" href="./M3-Mockito Verification _ Java Code Geeks - 2017_files/3f1ae.default.include.822e59.css" media="all"><link rel="profile" href="https://gmpg.org/xfn/11"><link rel="pingback" href="https://www.javacodegeeks.com/xmlrpc.php">  <script async="" src="./M3-Mockito Verification _ Java Code Geeks - 2017_files/analytics.js"></script><script src="https://securepubads.g.doubleclick.net/gampad/ads?gdfp_req=1&amp;correlator=1888124363290538&amp;output=json_html&amp;callback=googletag.impl.pubads.callbackProxy1&amp;impl=fifs&amp;json_a=1&amp;eid=108809080%2C108809107&amp;sc=1&amp;sfv=1-0-8&amp;iu_parts=70432299%2CJCG_Header%2CJCG_In-post%2CJCG_Side%2CJCG_Side_1%2CJCG_Under-post%2CJCG_Side_2%2CJCG_NotifBar&amp;enc_prev_ius=%2F0%2F1%2C%2F0%2F2%2C%2F0%2F3%2C%2F0%2F4%2C%2F0%2F5%2C%2F0%2F6%2C%2F0%2F7&amp;prev_iu_szs=728x90%2C300x250%2C300x250%2C300x250%2C300x250%2C300x600%2C1220x50&amp;cust_params=PostID%3D44892%26PostCAT%3D7&amp;cookie_enabled=1&amp;abxe=1&amp;lmt=0&amp;dt=1496629374965&amp;frm=20&amp;biw=1440&amp;bih=723&amp;oid=3&amp;adxs=0%2C-9%2C-9%2C-9%2C-9%2C-9%2C-9&amp;adys=0%2C-9%2C-9%2C-9%2C-9%2C-9%2C-9&amp;adks=3917931340%2C2292939308%2C1430340824%2C2006874815%2C2131506249%2C778024483%2C3359392277&amp;gut=v2&amp;ifi=1&amp;u_tz=360&amp;u_his=1&amp;u_h=900&amp;u_w=1440&amp;u_ah=797&amp;u_aw=1440&amp;u_cd=24&amp;u_nplug=5&amp;u_nmime=7&amp;u_sd=1&amp;flash=25.0.0&amp;url=https%3A%2F%2Fwww.javacodegeeks.com%2F2015%2F11%2Fmockito-verification.html&amp;dssz=10&amp;icsg=736&amp;std=0&amp;csl=81&amp;vrg=120&amp;vrp=120&amp;ga_vid=1999712305.1490359553&amp;ga_sid=1496629375&amp;ga_hid=1530612314"></script><script type="text/javascript" async="" src="./M3-Mockito Verification _ Java Code Geeks - 2017_files/recaptcha__en.js"></script><script async="" type="text/javascript" src="./M3-Mockito Verification _ Java Code Geeks - 2017_files/gpt.js"></script><script type="text/javascript">var googletag=googletag||{};googletag.cmd=googletag.cmd||[];(function(){var gads=document.createElement('script');gads.async=true;gads.type='text/javascript';var useSSL='https:'==document.location.protocol;gads.src=(useSSL?'https:':'http:')+'//www.googletagservices.com/tag/js/gpt.js';var node=document.getElementsByTagName('script')[0];node.parentNode.insertBefore(gads,node);})();</script> <script type="text/javascript">googletag.cmd.push(function(){googletag.defineSlot('/70432299/JCG_Header',[728,90],'div-gpt-ad-1415445260332-0').addService(googletag.pubads());googletag.defineSlot('/70432299/JCG_In-post',[300,250],'div-gpt-ad-1415445260332-2').addService(googletag.pubads());googletag.defineSlot('/70432299/JCG_Side',[300,250],'div-gpt-ad-1415445260332-3').addService(googletag.pubads());googletag.defineSlot('/70432299/JCG_Side_1',[300,250],'div-gpt-ad-1415445260332-4').addService(googletag.pubads());googletag.defineSlot('/70432299/JCG_Under-post',[300,250],'div-gpt-ad-1415445260332-5').addService(googletag.pubads());googletag.defineSlot('/70432299/JCG_Side_2',[300,600],'div-gpt-ad-1415445260332-6').addService(googletag.pubads());googletag.defineSlot('/70432299/JCG_NotifBar',[1220,50],'div-gpt-ad-1431445244472-0').addService(googletag.pubads());googletag.pubads().setTargeting("PostID","44892");googletag.pubads().setTargeting("PostCAT","7");googletag.pubads().enableSingleRequest();googletag.enableServices();});</script> <title>Mockito Verification | Java Code Geeks - 2017</title><link rel="canonical" href="https://www.javacodegeeks.com/2015/11/mockito-verification.html"><link rel="publisher" href="https://plus.google.com/+JavaCodeGeeks/"><meta name="twitter:card" content="summary"><meta name="twitter:description" content="This article is part of our Academy Course titled Testing with Mockito. In this course, you will dive into the magic of Mockito. You will learn about Mocks, Spies and Partial Mocks, and their corresponding Stubbing behaviour. You will also see the process of Verification with Test Doubles and Object Matchers. Finally, Test Driven Development ..."><meta name="twitter:title" content="Mockito Verification | Java Code Geeks - 2017"><meta name="twitter:site" content="@javacodegeeks"><meta name="twitter:image" content="https://www.javacodegeeks.com/wp-content/uploads/2012/10/mockito-logo.jpg"><meta name="twitter:creator" content="@javacodegeeks"><link rel="dns-prefetch" href="https://www.google.com/"><link rel="dns-prefetch" href="https://gdc.indeed.com/"><link rel="dns-prefetch" href="https://fonts.googleapis.com/"><link rel="dns-prefetch" href="https://s.w.org/"><link rel="alternate" type="application/rss+xml" title="Java Code Geeks » Feed" href="https://www.javacodegeeks.com/feed/"><link rel="alternate" type="application/rss+xml" title="Java Code Geeks » Comments Feed" href="https://www.javacodegeeks.com/comments/feed/"><link rel="alternate" type="application/rss+xml" title="Java Code Geeks » Mockito Verification Comments Feed" href="https://www.javacodegeeks.com/2015/11/mockito-verification.html/feed/"><link rel="stylesheet" id="um_recaptcha-css" href="./M3-Mockito Verification _ Java Code Geeks - 2017_files/um-recaptcha.css" type="text/css" media="all"><link rel="stylesheet" id="dlm-frontend-css" href="./M3-Mockito Verification _ Java Code Geeks - 2017_files/frontend.css" type="text/css" media="all"><link rel="stylesheet" id="Oswald-css" href="./M3-Mockito Verification _ Java Code Geeks - 2017_files/css" type="text/css" media="all"><link rel="stylesheet" id="um_minified-css" href="./M3-Mockito Verification _ Java Code Geeks - 2017_files/um.min.css" type="text/css" media="all"> <script type="text/javascript" src="./M3-Mockito Verification _ Java Code Geeks - 2017_files/jquery.js"></script><script src="https://securepubads.g.doubleclick.net/gpt/pubads_impl_120.js" async=""></script><link rel="prefetch" href="https://tpc.googlesyndication.com/safeframe/1-0-8/html/container.html"> <script type="text/javascript" src="./M3-Mockito Verification _ Java Code Geeks - 2017_files/api.js"></script> <script type="text/javascript" src="https://gdc.indeed.com/ads/apiresults.js"></script> <link rel="https://api.w.org/" href="https://www.javacodegeeks.com/wp-json/"><link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://www.javacodegeeks.com/xmlrpc.php?rsd"><link rel="wlwmanifest" type="application/wlwmanifest+xml" href="https://www.javacodegeeks.com/wp-includes/wlwmanifest.xml"><meta name="generator" content="WordPress 4.7.5"><link rel="shortlink" href="https://www.javacodegeeks.com/?p=44892"><link rel="alternate" type="application/json+oembed" href="https://www.javacodegeeks.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.javacodegeeks.com%2F2015%2F11%2Fmockito-verification.html"><link rel="alternate" type="text/xml+oembed" href="https://www.javacodegeeks.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.javacodegeeks.com%2F2015%2F11%2Fmockito-verification.html&amp;format=xml"><link rel="shortcut icon" href="https://www.javacodegeeks.com/wp-content/uploads/2012/12/JavaCodeGeeks-favIcon.png" title="Favicon"><meta property="og:title" content="Mockito Verification"><meta property="og:type" content="article"><meta property="og:description" content="This article is part of our Academy Course titled Testing with Mockito.In this course, you will ..."><meta property="og:url" content="https://www.javacodegeeks.com/2015/11/mockito-verification.html"><meta property="og:site_name" content="Java Code Geeks"><meta property="og:image" content="https://www.javacodegeeks.com/wp-content/uploads/2012/10/mockito-logo.jpg"> <!--[if IE]> <script type="text/javascript">jQuery(document).ready(function(){jQuery(".menu-item").has("ul").children("a").attr("aria-haspopup","true");});</script> <![endif]--> <!--[if lt IE 9]> <script src="//www.javacodegeeks.com/wp-content/themes/jarida/js/html5.js"></script> <script src="//www.javacodegeeks.com/wp-content/themes/jarida/js/selectivizr-min.js"></script> <![endif]--> <!--[if IE 8]><link rel="stylesheet" type="text/css" media="all" href="//www.javacodegeeks.com/wp-content/themes/jarida/css/ie8.css" /> <![endif]--><meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"><meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no"><style type="text/css" media="screen">body{background-image:url(https://www.javacodegeeks.com/wp-content/themes/jarida/images/patterns/body-bg1.png);background-position:top center}body.single .entry, body.page
.entry{font-size:15px !important}#main-nav ul li.current-menu-item a,
#main-nav ul li.current-menu-item a:hover,
#main-nav ul li.current-menu-parent a,
#main-nav ul li.current-menu-parent a:hover,
#main-nav ul li.current-page-ancestor a,
#main-nav ul li.current-page-ancestor a:hover,
.pagination span.current,
.ei-slider-thumbs li.ei-slider-element,
.breaking-news span,
.ei-title h2,h2.cat-box-title,
a.more-link,.scroll-nav a,
.flex-direction-nav a,
.tagcloud a:hover,
#tabbed-widget ul.tabs li.active a,
.slider-caption h2, .full-width .content .slider-caption h2,
.review-percentage .review-item span span,.review-final-score,
.woocommerce span.onsale, .woocommerce-page span.onsale ,
.woocommerce .widget_price_filter .ui-slider .ui-slider-handle, .woocommerce-page .widget_price_filter .ui-slider .ui-slider-handle,
.button,a.button,#main-content input[type="submit"],#main-content input[type="submit"]:focus, span.onsale,
.mejs-container .mejs-controls .mejs-time-rail .mejs-time-current,#reading-position-indicator{background-color:#326693 !important}::-webkit-scrollbar-thumb{background-color:#326693 !important}#main-nav,.top-nav{border-bottom-color:#326693}.cat-box , .footer-bottom
.container{border-top-color:#326693}body.single .post .entry a, body.page .post .entry
a{color:#326693}body.single .post .entry a:hover, body.page .post .entry a:hover{color:#478cc4;text-decoration:underline}#main-nav ul
li{text-transform:none}.toc
dl{display:block}.toc
dt{display:block}.toc
dd{display:block;-webkit-margin-start:20px;-moz-margin-start:20px}.toc{line-height:1.4;font-size:90%;border-bottom:1px solid #eee;padding:20px;border:1px
solid #e1e1e1;background:#f1f1f1;border-radius:9px;-moz-border-radius:9px;-webkit-border-radius:9px;width:80%;display:inline-block;margin:20px
0}code{display:inline}.tip{background:url(/wp-content/uploads/sprites.png) -201px -72px no-repeat;padding:10px
20px 25px 80px;margin:2.5em 1em;border-color:#dedede #d8d8d8 #d3d3d3;text-shadow:0 1px 0 #fff;-webkit-box-shadow:0 1px 1px #eaeaea, inset 0 1px 0 #fbfbfb;-moz-box-shadow:0 1px 1px #eaeaea, inset 0 1px 0 #fbfbfb;box-shadow:0 1px 1px #eaeaea, inset 0 1px 0 #fbfbfb;background-color:#FAFAFA;color:#555;border:1px
solid #DEDEDE;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px}.download{background:url(/wp-content/uploads/sprites.png) -266px 0px no-repeat;padding:10px
20px 25px 80px;margin:2.5em 1em;border-color:#dedede #d8d8d8 #d3d3d3;text-shadow:0 1px 0 #fff;-webkit-box-shadow:0 1px 1px #eaeaea, inset 0 1px 0 #fbfbfb;-moz-box-shadow:0 1px 1px #eaeaea, inset 0 1px 0 #fbfbfb;box-shadow:0 1px 1px #eaeaea, inset 0 1px 0 #fbfbfb;background-color:#FAFAFA;color:#555;border:1px
solid #DEDEDE;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px}.nlbox{background:#E2ECFA;margin:15px
0px 15px;padding:10px;-webkit-border-radius:3px;-mozilla-border-radius:3px;-o-border-radius:3px;border-radius:3px;-moz-box-shadow:0px 2px 2px 1px #d7e1eb;-webkit-box-shadow:0px 2px 2px 1px #d7e1eb;box-shadow:0px 2px 2px 1px #d7e1eb;border:solid 1px #D8D8D8;display:inline-block}.nlbox1{background:#E2ECFA;margin:-10px 0 25px;width:auto;max-width:798px;padding:10px;-webkit-border-radius:3px;-mozilla-border-radius:3px;-o-border-radius:3px;border-radius:3px;-moz-box-shadow:0px 2px 2px 1px #d7e1eb;-webkit-box-shadow:0px 2px 2px 1px #d7e1eb;box-shadow:0px 2px 2px 1px #d7e1eb;border:solid 1px #D8D8D8}.button-gw{border-top:1px solid #96d1f8;background:#65a9d7;background:-webkit-gradient(linear, left top, left bottom, from(#3e779d), to(#65a9d7));background:-webkit-linear-gradient(top, #3e779d, #65a9d7);background:-moz-linear-gradient(top, #3e779d, #65a9d7);background:-ms-linear-gradient(top, #3e779d, #65a9d7);background:-o-linear-gradient(top, #3e779d, #65a9d7);padding:20px
40px;-webkit-border-radius:8px;-moz-border-radius:8px;border-radius:8px;-webkit-box-shadow:rgba(0,0,0,1) 0 1px 0;-moz-box-shadow:rgba(0,0,0,1) 0 1px 0;box-shadow:rgba(0,0,0,1) 0 1px 0;text-shadow:rgba(0,0,0,.4) 0 1px 0;color:white;font-size:25px;font-family:Georgia,Serif;text-decoration:none !important;vertical-align:middle}.button-gw:hover{border-top-color:#28597a;background:#28597a;color:#ccc}.button-gw:active{border-top-color:#1b435e;background:#1b435e}.widget_wpjb-recent-jobs .wpjb-grid-compact{margin-left:5%;margin-right:5%}.attribution{border-color:#dedede #d8d8d8 #d3d3d3;text-shadow:0 1px 0 #fff;-webkit-box-shadow:0 1px 1px #eaeaea, inset 0 1px 0 #fbfbfb;-moz-box-shadow:0 1px 1px #eaeaea, inset 0 1px 0 #fbfbfb;box-shadow:0 1px 1px #eaeaea, inset 0 1px 0 #fbfbfb;background:#fff;background:-moz-linear-gradient(top, #fff 0%, #f6f6f6 47%, #ededed 100%);background:-webkit-gradient(linear, left top, left bottom, color-stop(0%,#ffffff), color-stop(47%,#f6f6f6), color-stop(100%,#ededed));background:-webkit-linear-gradient(top, #fff 0%,#f6f6f6 47%,#ededed 100%);background:-o-linear-gradient(top, #fff 0%,#f6f6f6 47%,#ededed 100%);background:-ms-linear-gradient(top, #fff 0%,#f6f6f6 47%,#ededed 100%);background:linear-gradient(top, #fff 0%,#f6f6f6 47%,#ededed 100%);padding:3px
8px;line-height:20px;color:#555;border:1px
solid #DEDEDE;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px;margin-top:20px;display:inline-block}.attribution
.reference{font-weight:bold}.attribution
table{border:none;background-color:inherit}.attribution table
td{vertical-align:top;padding:0px
5px;border-bottom:none;font-size:inherit}a.TPbutton_w_cnd01lb:hover{background-color:#fc0;background:url(/wp-content/uploads/sprites.png) 0 -102px;color:#fff;text-decoration:none;transition:none}a.TPbutton_w_cnd01lb{-webkit-border-radius:7px;-mozilla-border-radius:7px;-o-border-radius:7px;border-radius:7px;text-decoration:none;color:#fff;font-family:'lucida sans','lucida grande',arial,helvetica,sans-serif;letter-spacing:-1px;font-weight:bold;background-color:#f90;background:url(/wp-content/uploads/sprites.png) 0 -73px;padding:4px
10px 4px 10px;font-size:16px;-moz-box-shadow:0px 3px 3px 2px #d7e1eb;-webkit-box-shadow:0px 3px 3px 2px #d7e1eb;box-shadow:0px 3px 3px 2px #d7e1eb;border:solid 2px #fff;width:200px;height:56px;transition:none}.TPbutton_w_cnd01lb_arrow{position:relative;display:inline-block;overflow:hidden;vertical-align:bottom;width:30px;height:20px;background:url(/wp-content/uploads/sprites.png) -146px 0px}#commentform
input{width:inherit}#author-box .post-listing{margin-bottom:0px}#author-box .block-head
h3{text-transform:none}header#theme-header{margin:0
0 0}blockquote{display:inline-block;margin:20px
0 10px 40px;font-size:14px}blockquote:before{font-size:25px;line-height:inherit}.syntaxhighlighter{display:inline-block}@media (max-width: 767px){#div-gpt-ad-1415445260332-0{display:none}}@media (max-width: 479px){#div-gpt-ad-1415445260332-3{margin-left:-10px}#div-gpt-ad-1415445260332-4{margin-left:-10px}#div-gpt-ad-1415445260332-6{margin-left:-10px}}.sidebar{position:relative}@media screen and (min-width: 500px){.cc_container{left:15px !important}}.cc_container{-webkit-animation-name:fadeInLeft !important;animation-name:fadeInLeft !important}div.datepicker{z-index:1000}.wp-listing{width:33%;padding-bottom:50px;float:left;line-height:20px;display:table}.wp-listing
table{padding:11px;text-align:center;border:1px
solid #FFF}.wp-listing table:hover{border-color:#dedede #d8d8d8 #d3d3d3;text-shadow:0 1px 0 #fff;-webkit-box-shadow:0 1px 1px #eaeaea, inset 0 1px 0 #fbfbfb;-moz-box-shadow:0 1px 1px #eaeaea, inset 0 1px 0 #fbfbfb;box-shadow:0 1px 1px #eaeaea, inset 0 1px 0 #fbfbfb;background:#fff;background:-moz-linear-gradient(top, #fff 0%, #f6f6f6 47%, #ededed 100%);background:-webkit-gradient(linear, left top, left bottom, color-stop(0%,#ffffff), color-stop(47%,#f6f6f6), color-stop(100%,#ededed));background:-webkit-linear-gradient(top, #fff 0%,#f6f6f6 47%,#ededed 100%);background:-o-linear-gradient(top, #fff 0%,#f6f6f6 47%,#ededed 100%);background:-ms-linear-gradient(top, #fff 0%,#f6f6f6 47%,#ededed 100%);background:linear-gradient(top, #fff 0%,#f6f6f6 47%,#ededed 100%);color:#555;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px}.download-button{width:80%}.minibook
img{border:none}.minibook
table{border:none;background:none}.minibook table
td{border:none;font-size:14px;color:inherit}.minibook .e3lan-post{display:none}div.um-register .um-form::after{content:"* By registering you agree to receive email notifications about our products/services. You can unsubscribe anytime from your account page.";font-size:12px;font-style:italic;display:block;margin-top:30px}</style> <script type="text/javascript">var ultimatemember_image_upload_url='https://www.javacodegeeks.com/wp-content/plugins/ultimate-member/core/lib/upload/um-image-upload.php';var ultimatemember_file_upload_url='https://www.javacodegeeks.com/wp-content/plugins/ultimate-member/core/lib/upload/um-file-upload.php';var ultimatemember_ajax_url='https://www.javacodegeeks.com/wp-admin/admin-ajax.php';</script> <style type="text/css">.request_name{display:none !important}</style></head><body id="top" class="post-template-default single single-post postid-44892 single-format-standard"><div class="x-white foobar-wrapper shadow fb-top" style="height: 5px; bottom: auto; top: 0px;"><table cellpadding="0" cellspacing="0" class="foobar-container" style="background-color: rgb(64, 30, 64); border-top: none; border-right: none; border-bottom: 3px solid rgb(255, 255, 255); border-left: none; border-image: initial; height: 50px; display: none;"><tbody><tr class="foobar-container-row"><td class="foobar-container-left" style="height: 50px; width: 0px;"><div class="foobar-container-inner" style="max-height: 50px;"></div></td><td class="foobar-close-button-spacer" style="width: 80px;"></td><td class="foobar-container-center" style="height: 50px; width: 0px;"><div class="foobar-container-inner" style="max-height: 50px;"><div class="foobar-message" style="opacity: 100;"></div><div class="x-white foobar-prev-button" style="background-color: rgb(64, 30, 64); height: 50px; margin-top: -25px;"></div><div class="x-white foobar-next-button" style="background-color: rgb(64, 30, 64); height: 50px; margin-top: -25px;"></div></div></td><td class="foobar-container-right" style="height: 50px; width: auto;"><div class="foobar-container-inner" style="max-height: 50px;"><!-- JCG_NotifBar --><div id="div-gpt-ad-1431445244472-0" style="height:50px; width:1220px; margin-left: auto; margin-right: auto;"><script type="text/javascript">googletag.cmd.push(function() { googletag.display('div-gpt-ad-1431445244472-0'); });</script><div id="google_ads_iframe_/70432299/JCG_NotifBar_0__container__" style="border: 0pt none;"><iframe id="google_ads_iframe_/70432299/JCG_NotifBar_0" title="3rd party ad content" name="google_ads_iframe_/70432299/JCG_NotifBar_0" width="1220" height="50" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" style="border: 0px; vertical-align: bottom;" src="./M3-Mockito Verification _ Java Code Geeks - 2017_files/saved_resource.html"></iframe></div></div></div></td><td class="foobar-close-button-container" style="width: 80px;"><span class="foobar-close-button" style="height: 50px;"></span></td></tr></tbody></table><div class="foobar-shadow"></div><div class="foobar-open-button-container hidden" style="height: 41px; bottom: auto; top: 0px; width: 80px; left: auto; right: 0px; display: block;"><span class="foobar-open-button" style="background-color: rgb(64, 30, 64); border-top: none; border-right: 3px solid rgb(255, 255, 255); border-bottom: 3px solid rgb(255, 255, 255); border-left: 3px solid rgb(255, 255, 255); border-image: initial; height: 30px; margin-left: -17px; display: none;"></span></div></div><div class="background-cover"></div><div class="wrapper"><div class="top-nav fade-in animated1 head_menu"><div class="container"><div class="search-block"><form method="get" id="searchform" action="https://www.javacodegeeks.com/"> <button class="search-button" type="submit" value="Search"></button> <input type="text" id="s" name="s" value="Search..." onfocus="if (this.value == &#39;Search...&#39;) {this.value = &#39;&#39;;}" onblur="if (this.value == &#39;&#39;) {this.value = &#39;Search...&#39;;}"></form></div><div class="social-icons icon_flat"> <a class="tooldown" href="http://feeds.feedburner.com/JavaCodeGeeks" target="_blank" original-title="Rss"><i class="tieicon-rss"></i></a><a class="tooldown" href="https://plus.google.com/+JavaCodeGeeks/" target="_blank" original-title="Google+"><i class="tieicon-gplus"></i></a><a class="tooldown" href="https://www.facebook.com/javacodegeeks" target="_blank" original-title="Facebook"><i class="tieicon-facebook"></i></a><a class="tooldown" href="https://twitter.com/javacodegeeks" target="_blank" original-title="Twitter"><i class="tieicon-twitter"></i></a><a class="tooldown" href="https://www.linkedin.com/groups/Java-Code-Geeks-3810709" target="_blank" original-title="LinkedIn"><i class="tieicon-linkedin"></i></a><a class="tooldown" href="https://github.com/javacodegeeks/" target="_blank" original-title="Github"><i class="tieicon-github"></i></a></div><div class="top-menu"><ul id="menu-pages" class="menu"><li id="menu-item-38541" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-has-children menu-item-38541 parent-list"><a href="http://www.javacodegeeks.com/#">Knowledge Base <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-38217" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-38217 parent-list"><a href="https://www.javacodegeeks.com/tutorials/">Tutorials <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-38218" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-38218 parent-list"><a href="https://www.javacodegeeks.com/tutorials/java-tutorials/">Java Tutorials <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-38219" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38219"><a href="https://www.javacodegeeks.com/tutorials/java-tutorials/core-java-tutorials/">Core Java Tutorials</a></li><li id="menu-item-38220" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-38220 parent-list"><a href="https://www.javacodegeeks.com/tutorials/java-tutorials/enterprise-java-tutorials/">Enterprise Java Tutorials <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-38221" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38221"><a href="https://www.javacodegeeks.com/tutorials/java-tutorials/enterprise-java-tutorials/spring-tutorials/">Spring Tutorials</a></li></ul></li><li id="menu-item-38222" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38222"><a href="https://www.javacodegeeks.com/tutorials/java-tutorials/desktop-java-tutorials/">Desktop Java Tutorials</a></li></ul></li><li id="menu-item-38223" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-38223 parent-list"><a href="https://www.javacodegeeks.com/tutorials/android-tutorials/">Android Tutorials <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-38224" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38224"><a href="https://www.javacodegeeks.com/tutorials/android-tutorials/android-core-tutorials/">Android Core Tutorials</a></li><li id="menu-item-38225" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38225"><a href="https://www.javacodegeeks.com/tutorials/android-tutorials/android-game-tutorials/">Android Game Tutorials</a></li></ul></li><li id="menu-item-38226" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38226"><a href="https://www.javacodegeeks.com/tutorials/scala-tutorials/">Scala Tutorials</a></li><li id="menu-item-38227" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38227"><a href="https://www.javacodegeeks.com/tutorials/devops-tutorials/">DevOps Tutorials</a></li><li id="menu-item-38228" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38228"><a href="https://www.javacodegeeks.com/tutorials/nosql-tutorials/">NoSQL Tutorials</a></li><li id="menu-item-38229" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38229"><a href="https://www.javacodegeeks.com/tutorials/groovy-grails-tutorials/">Groovy/Grails Tutorials</a></li></ul></li><li id="menu-item-38273" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-38273"><a href="http://examples.javacodegeeks.com/">Examples</a></li><li id="menu-item-45446" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-45446"><a href="https://www.javacodegeeks.com/courses/">Courses</a></li><li id="menu-item-65167" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-65167"><a href="http://www.javacodegeeks.com/minibook/">Minibooks</a></li></ul></li><li id="menu-item-38243" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-38243 parent-list"><a href="https://www.javacodegeeks.com/resources/">Resources <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-38244" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38244"><a href="https://www.javacodegeeks.com/resources/software/">Software</a></li><li id="menu-item-38245" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38245"><a href="https://www.javacodegeeks.com/resources/our-projects/">Our Projects</a></li></ul></li><li id="menu-item-54369" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-54369"><a href="https://deals.javacodegeeks.com/">Deals</a></li><li id="menu-item-38240" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-38240 parent-list"><a href="https://www.javacodegeeks.com/job-board/">Job Board <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-61394" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-61394 parent-list"><a href="https://www.javacodegeeks.com/jobs/">Jobs <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-61395" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-61395"><a href="https://www.javacodegeeks.com/jobs/advanced-search/">Advanced Search</a></li><li id="menu-item-61396" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-61396"><a href="https://www.javacodegeeks.com/jobs/post-a-job/">Post a Job</a></li></ul></li><li id="menu-item-61392" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-61392 parent-list"><a href="https://www.javacodegeeks.com/resumes/">Resumes <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-61393" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-61393"><a href="https://www.javacodegeeks.com/resumes/advanced-search/">Advanced Search</a></li></ul></li><li id="menu-item-61390" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-61390 parent-list"><a href="https://www.javacodegeeks.com/employer-panel/">Employer Panel <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-61391" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-61391"><a href="https://www.javacodegeeks.com/employer-panel/employer-registration/">Employer Registration</a></li></ul></li><li id="menu-item-61388" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-61388 parent-list"><a href="https://www.javacodegeeks.com/candidate-panel/">Candidate Panel <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-61389" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-61389"><a href="https://www.javacodegeeks.com/candidate-panel/candidate-registration/">Candidate Registration</a></li></ul></li></ul></li><li id="menu-item-38230" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-38230 parent-list"><a href="https://www.javacodegeeks.com/join-us/">Join Us <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-38231" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38231"><a href="https://www.javacodegeeks.com/join-us/jcg/">JCG</a></li><li id="menu-item-38232" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-38232 parent-list"><a href="https://www.javacodegeeks.com/join-us/w4g/">W4G <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-38233" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38233"><a href="https://www.javacodegeeks.com/join-us/w4g/submission-guidelines/">Submission Guidelines</a></li><li id="menu-item-38234" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38234"><a href="https://www.javacodegeeks.com/join-us/w4g/terms-conditions/">Terms &amp; Conditions</a></li></ul></li></ul></li><li id="menu-item-38235" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-38235 parent-list"><a href="https://www.javacodegeeks.com/about/">About <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-38236" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38236"><a href="https://www.javacodegeeks.com/about/about-jcgs/">About JCGs</a></li><li id="menu-item-38237" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38237"><a href="https://www.javacodegeeks.com/about/advertising/">Advertising</a></li><li id="menu-item-38238" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38238"><a href="https://www.javacodegeeks.com/about/terms-of-use/">Terms of Use</a></li><li id="menu-item-38239" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-38239"><a href="https://www.javacodegeeks.com/about/privacy-policy/">Privacy Policy</a></li></ul></li><li id="menu-item-65125" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-65125"><a href="https://www.javacodegeeks.com/login/">Login</a></li><li id="menu-item-65124" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-65124"><a href="https://www.javacodegeeks.com/register/">Register</a></li></ul><select id="top-menu-mob"><option value="#">Go to...</option><option value="http://www.javacodegeeks.com/#">&nbsp;Knowledge Base </option><option value="https://www.javacodegeeks.com/tutorials/">&nbsp; &nbsp; –&nbsp;Tutorials </option><option value="https://www.javacodegeeks.com/tutorials/java-tutorials/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;Java Tutorials </option><option value="https://www.javacodegeeks.com/tutorials/java-tutorials/core-java-tutorials/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;Core Java Tutorials</option><option value="https://www.javacodegeeks.com/tutorials/java-tutorials/enterprise-java-tutorials/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;Enterprise Java Tutorials </option><option value="https://www.javacodegeeks.com/tutorials/java-tutorials/enterprise-java-tutorials/spring-tutorials/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;Spring Tutorials</option><option value="https://www.javacodegeeks.com/tutorials/java-tutorials/desktop-java-tutorials/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;Desktop Java Tutorials</option><option value="https://www.javacodegeeks.com/tutorials/android-tutorials/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;Android Tutorials </option><option value="https://www.javacodegeeks.com/tutorials/android-tutorials/android-core-tutorials/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;Android Core Tutorials</option><option value="https://www.javacodegeeks.com/tutorials/android-tutorials/android-game-tutorials/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;Android Game Tutorials</option><option value="https://www.javacodegeeks.com/tutorials/scala-tutorials/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;Scala Tutorials</option><option value="https://www.javacodegeeks.com/tutorials/devops-tutorials/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;DevOps Tutorials</option><option value="https://www.javacodegeeks.com/tutorials/nosql-tutorials/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;NoSQL Tutorials</option><option value="https://www.javacodegeeks.com/tutorials/groovy-grails-tutorials/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;Groovy/Grails Tutorials</option><option value="http://examples.javacodegeeks.com/">&nbsp; &nbsp; –&nbsp;Examples</option><option value="https://www.javacodegeeks.com/courses/">&nbsp; &nbsp; –&nbsp;Courses</option><option value="http://www.javacodegeeks.com/minibook/">&nbsp; &nbsp; –&nbsp;Minibooks</option><option value="https://www.javacodegeeks.com/resources/">&nbsp;Resources </option><option value="https://www.javacodegeeks.com/resources/software/">&nbsp; &nbsp; –&nbsp;Software</option><option value="https://www.javacodegeeks.com/resources/our-projects/">&nbsp; &nbsp; –&nbsp;Our Projects</option><option value="https://deals.javacodegeeks.com/">&nbsp;Deals</option><option value="https://www.javacodegeeks.com/job-board/">&nbsp;Job Board </option><option value="https://www.javacodegeeks.com/jobs/">&nbsp; &nbsp; –&nbsp;Jobs </option><option value="https://www.javacodegeeks.com/jobs/advanced-search/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;Advanced Search</option><option value="https://www.javacodegeeks.com/jobs/post-a-job/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;Post a Job</option><option value="https://www.javacodegeeks.com/resumes/">&nbsp; &nbsp; –&nbsp;Resumes </option><option value="https://www.javacodegeeks.com/resumes/advanced-search/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;Advanced Search</option><option value="https://www.javacodegeeks.com/employer-panel/">&nbsp; &nbsp; –&nbsp;Employer Panel </option><option value="https://www.javacodegeeks.com/employer-panel/employer-registration/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;Employer Registration</option><option value="https://www.javacodegeeks.com/candidate-panel/">&nbsp; &nbsp; –&nbsp;Candidate Panel </option><option value="https://www.javacodegeeks.com/candidate-panel/candidate-registration/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;Candidate Registration</option><option value="https://www.javacodegeeks.com/join-us/">&nbsp;Join Us </option><option value="https://www.javacodegeeks.com/join-us/jcg/">&nbsp; &nbsp; –&nbsp;JCG</option><option value="https://www.javacodegeeks.com/join-us/w4g/">&nbsp; &nbsp; –&nbsp;W4G </option><option value="https://www.javacodegeeks.com/join-us/w4g/submission-guidelines/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;Submission Guidelines</option><option value="https://www.javacodegeeks.com/join-us/w4g/terms-conditions/">&nbsp; &nbsp; –&nbsp; &nbsp; –&nbsp;Terms &amp; Conditions</option><option value="https://www.javacodegeeks.com/about/">&nbsp;About </option><option value="https://www.javacodegeeks.com/about/about-jcgs/">&nbsp; &nbsp; –&nbsp;About JCGs</option><option value="https://www.javacodegeeks.com/about/advertising/">&nbsp; &nbsp; –&nbsp;Advertising</option><option value="https://www.javacodegeeks.com/about/terms-of-use/">&nbsp; &nbsp; –&nbsp;Terms of Use</option><option value="https://www.javacodegeeks.com/about/privacy-policy/">&nbsp; &nbsp; –&nbsp;Privacy Policy</option><option value="https://www.javacodegeeks.com/login/">&nbsp;Login</option><option value="https://www.javacodegeeks.com/register/">&nbsp;Register</option></select></div></div></div><div class="container"> <header id="theme-header"><div class="header-content fade-in animated1"><div class="logo"><h2>								<a title="Java Code Geeks" href="https://www.javacodegeeks.com/"> <img src="./M3-Mockito Verification _ Java Code Geeks - 2017_files/JavaCodeGeeks-logo.png" alt="Java Code Geeks"><strong>Java Code Geeks Java Developers Resource Center</strong> </a></h2></div><div class="e3lan-top"><div id="div-gpt-ad-1415445260332-0" style="width:728px;height:90px;float:right;margin-top:8px;"> <script type="text/javascript">googletag.cmd.push(function(){googletag.display('div-gpt-ad-1415445260332-0');});</script><div id="google_ads_iframe_/70432299/JCG_Header_0__container__" style="border: 0pt none;"><iframe id="google_ads_iframe_/70432299/JCG_Header_0" title="3rd party ad content" name="google_ads_iframe_/70432299/JCG_Header_0" width="728" height="90" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" style="border: 0px; vertical-align: bottom;" src="./M3-Mockito Verification _ Java Code Geeks - 2017_files/saved_resource(1).html"></iframe></div> </div></div><div class="clear"></div></div> <nav id="main-nav" class="fade-in animated2"><div class="container"><div class="main-menu"><ul id="menu-categories" class="menu"><li id="menu-item-38251" class="menu-item  menu-item-type-taxonomy  menu-item-object-category  menu-item-has-children parent-list"><a href="https://www.javacodegeeks.com/category/android/">Android <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-38252" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/android/android-core/">Android Core</a></li><li id="menu-item-38253" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/android/android-games/">Android Games</a></li></ul></li><li id="menu-item-38257" class="menu-item  menu-item-type-taxonomy  menu-item-object-category  current-post-ancestor  menu-item-has-children parent-list"><a href="https://www.javacodegeeks.com/category/java/">Java <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-38258" class="menu-item  menu-item-type-taxonomy  menu-item-object-category  current-post-ancestor  current-menu-parent  current-post-parent"><a href="https://www.javacodegeeks.com/category/java/core-java/">Core Java</a></li><li id="menu-item-38259" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/java/desktop-java/">Desktop Java</a></li><li id="menu-item-38260" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/java/enterprise-java/">Enterprise Java</a></li></ul></li><li id="menu-item-38261" class="menu-item  menu-item-type-taxonomy  menu-item-object-category  menu-item-has-children parent-list"><a href="https://www.javacodegeeks.com/category/jvm-languages/">JVM Languages <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-38262" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/jvm-languages/ceylon/">Ceylon</a></li><li id="menu-item-38263" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/jvm-languages/clojure/">Clojure</a></li><li id="menu-item-38264" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/jvm-languages/groovy/">Groovy</a></li><li id="menu-item-38265" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/jvm-languages/jruby/">JRuby</a></li><li id="menu-item-38266" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/jvm-languages/kotlin/">Kotlin</a></li><li id="menu-item-38267" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/jvm-languages/scala/">Scala</a></li></ul></li><li id="menu-item-38271" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/software-development/">Software Development</a></li><li id="menu-item-38250" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/agile/">Agile</a></li><li id="menu-item-38254" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/career/">Career</a></li><li id="menu-item-38255" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/communications/">Communications</a></li><li id="menu-item-38256" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/devops/">DevOps</a></li><li id="menu-item-38268" class="menu-item  menu-item-type-taxonomy  menu-item-object-category  menu-item-has-children parent-list"><a href="https://www.javacodegeeks.com/category/meta-jcg/">Meta JCG <span class="sub-indicator"></span></a><ul class="sub-menu"><li id="menu-item-38269" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/meta-jcg/best-of-the-week/">Best Of The Week</a></li><li id="menu-item-38270" class="menu-item  menu-item-type-taxonomy  menu-item-object-category"><a href="https://www.javacodegeeks.com/category/misc/">Misc</a></li></ul></li></ul><select id="main-menu-mob"><option value="#">Go to...</option><option value="https://www.javacodegeeks.com/category/android/">&nbsp;Android </option><option value="https://www.javacodegeeks.com/category/android/android-core/">&nbsp; &nbsp; –&nbsp;Android Core</option><option value="https://www.javacodegeeks.com/category/android/android-games/">&nbsp; &nbsp; –&nbsp;Android Games</option><option value="https://www.javacodegeeks.com/category/java/">&nbsp;Java </option><option value="https://www.javacodegeeks.com/category/java/core-java/">&nbsp; &nbsp; –&nbsp;Core Java</option><option value="https://www.javacodegeeks.com/category/java/desktop-java/">&nbsp; &nbsp; –&nbsp;Desktop Java</option><option value="https://www.javacodegeeks.com/category/java/enterprise-java/">&nbsp; &nbsp; –&nbsp;Enterprise Java</option><option value="https://www.javacodegeeks.com/category/jvm-languages/">&nbsp;JVM Languages </option><option value="https://www.javacodegeeks.com/category/jvm-languages/ceylon/">&nbsp; &nbsp; –&nbsp;Ceylon</option><option value="https://www.javacodegeeks.com/category/jvm-languages/clojure/">&nbsp; &nbsp; –&nbsp;Clojure</option><option value="https://www.javacodegeeks.com/category/jvm-languages/groovy/">&nbsp; &nbsp; –&nbsp;Groovy</option><option value="https://www.javacodegeeks.com/category/jvm-languages/jruby/">&nbsp; &nbsp; –&nbsp;JRuby</option><option value="https://www.javacodegeeks.com/category/jvm-languages/kotlin/">&nbsp; &nbsp; –&nbsp;Kotlin</option><option value="https://www.javacodegeeks.com/category/jvm-languages/scala/">&nbsp; &nbsp; –&nbsp;Scala</option><option value="https://www.javacodegeeks.com/category/software-development/">&nbsp;Software Development</option><option value="https://www.javacodegeeks.com/category/agile/">&nbsp;Agile</option><option value="https://www.javacodegeeks.com/category/career/">&nbsp;Career</option><option value="https://www.javacodegeeks.com/category/communications/">&nbsp;Communications</option><option value="https://www.javacodegeeks.com/category/devops/">&nbsp;DevOps</option><option value="https://www.javacodegeeks.com/category/meta-jcg/">&nbsp;Meta JCG </option><option value="https://www.javacodegeeks.com/category/meta-jcg/best-of-the-week/">&nbsp; &nbsp; –&nbsp;Best Of The Week</option><option value="https://www.javacodegeeks.com/category/misc/">&nbsp; &nbsp; –&nbsp;Misc</option></select></div></div> </nav> </header><div id="main-content" class="container fade-in animated3 sidebar-narrow-left"><div class="content-wrap-wide"><div class="content"><div xmlns:v="http://rdf.data-vocabulary.org/#" id="crumbs"><span typeof="v:Breadcrumb"><a rel="v:url" property="v:title" class="crumbs-home" href="https://www.javacodegeeks.com/"><i class="tieicon-home"></i>Home</a></span> » <span typeof="v:Breadcrumb"><a rel="v:url" property="v:title" href="https://www.javacodegeeks.com/category/java/">Java</a></span> » <span typeof="v:Breadcrumb"><a rel="v:url" property="v:title" href="https://www.javacodegeeks.com/category/java/core-java/">Core Java</a></span> » <span class="current">Mockito Verification</span></div> <section id="author-box"><div class="block-head"><h3>About Hugh Hamill</h3></div><div class="post-listing"><div class="author-avatar"> <img src="./M3-Mockito Verification _ Java Code Geeks - 2017_files/profile_photo-80.jpg" class="func-um_user gravatar avatar avatar-60 um-avatar um-avatar-uploaded" width="60" height="60" alt="Hugh Hamill"></div><div class="author-description"> Hugh is a Senior Software Engineer and Certified Scrum Master based in Galway, Ireland. He achieved his B.Sc. in Applied Computing from Waterford Institute of Technology in 2002 and has been working in industry since then.  He has worked for a several large blue chip software companies listed on both the NASDAQ and NYSE.</div><div class="author-social"> <a class="ttip" href="http://www.doubleh.ie/" original-title="Hugh Hamill &#39;s site"><img src="./M3-Mockito Verification _ Java Code Geeks - 2017_files/author_site.png" width="18" height="18" alt=""></a></div><div class="clear"></div></div> </section> <article id="the-post" class="post-listing post-44892 post type-post status-publish format-standard has-post-thumbnail hentry category-core-java tag-mockito tag-testing"><div class="post-inner"><h1 class="name post-title entry-title" itemprop="itemReviewed" itemscope="" itemtype="http://schema.org/Thing"><span itemprop="name">Mockito Verification</span></h1><p class="post-meta"> <span class="post-meta-author">Posted by:  <a href="https://www.javacodegeeks.com/author/hugh-hamill/" title="">Hugh Hamill </a></span> <span class="post-cats">in  <a href="https://www.javacodegeeks.com/category/java/core-java/" rel="category tag">Core Java</a></span> <span class="tie-date">November 15th, 2015</span></p><div class="clear"></div><div class="entry"><div class="e3lan-post"><div id="div-gpt-ad-1415445260332-2" style="width:300px; height:250px;float:left; margin-right:20px;"> <script type="text/javascript">googletag.cmd.push(function(){googletag.display('div-gpt-ad-1415445260332-2');});</script><div id="google_ads_iframe_/70432299/JCG_In-post_0__container__" style="border: 0pt none;"><iframe id="google_ads_iframe_/70432299/JCG_In-post_0" title="3rd party ad content" name="google_ads_iframe_/70432299/JCG_In-post_0" width="300" height="250" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" style="border: 0px; vertical-align: bottom;" src="./M3-Mockito Verification _ Java Code Geeks - 2017_files/saved_resource(2).html"></iframe></div> </div></div><p><em>This article is part of our Academy Course titled <a href="http://www.javacodegeeks.com/2015/09/testing-with-mockito/">Testing with Mockito</a>.</em></p><p><em>In this course, you will dive into the magic of Mockito. You will learn about Mocks, Spies and Partial Mocks, and their corresponding Stubbing behaviour. You will also see the process of Verification with Test Doubles and Object Matchers. Finally, Test Driven Development (TDD) with Mockito is discussed in order to see how this library fits in the concept of TDD. Check it out <a href="http://www.javacodegeeks.com/2015/09/testing-with-mockito/">here</a>!</em></p> <script type="text/javascript">(function(){if(!window.mc4wp){window.mc4wp={listeners:[],forms:{on:function(event,callback){window.mc4wp.listeners.push({event:event,callback:callback});}}}}})();</script><form id="mc4wp-form-1" class="mc4wp-form mc4wp-form-38947 mc4wp-form-theme mc4wp-form-theme-red mc4wp-ajax" method="post" data-id="38947" data-name="In Post"><div class="mc4wp-form-fields"><div class="nlbox" style="font-family: Tahoma,Arial,Verdana,sans-serif; font-size: 13px;"><h1 style="font-family: inherit; font-size: 2em; margin: 0;">Do you want to know how to develop your skillset to become a <span style="color: #CAB43D; text-shadow: 1px 1px #835D5D;">Java Rockstar?</span></h1><div style="background: url(&#39;/wp-content/uploads/2015/01/books_promo.png&#39;) no-repeat; float:left; padding: 75px 130px 310px 170px; margin-top: -10px; margin-left: -35px;"></div><table style="margin-top: 20px; border: none; background-color: inherit; width: inherit; font-family: inherit; padding-left: 20px;"><tbody><tr><td style="vertical-align:top; border: none; padding: 0; font-size: inherit;"><h2 style="font-family: inherit; font-size: 1.5em; margin: 0;">Subscribe to our newsletter to start Rocking <span style="text-decoration: underline;">right now!</span></h2><h5 style="font-family: inherit; font-size: 1.17em; margin-top: 3px;">To get you started we give you our best selling eBooks for <span style="color:#e01404; text-shadow: 1px 1px #C99924; font-size: 20px; line-height: 25px;">FREE!</span></h5><p></p><h3 style="font-family: inherit; font-size: 1.17em; margin: 0;"><strong>1.</strong> JPA Mini Book</h3><h3 style="font-family: inherit; font-size: 1.17em; margin: 0;"><strong>2.</strong> JVM Troubleshooting Guide</h3><h3 style="font-family: inherit; font-size: 1.17em; margin: 0;"><strong>3.</strong> JUnit Tutorial for Unit Testing</h3><h3 style="font-family: inherit; font-size: 1.17em; margin: 0;"><strong>4.</strong> Java Annotations Tutorial<!--3--></h3><h3 style="font-family: inherit; font-size: 1.17em; margin: 0;"><strong>5.</strong> Java Interview Questions</h3><h3 style="font-family: inherit; font-size: 1.17em; margin: 0;"><strong>6.</strong> Spring Interview Questions</h3><h3 style="font-family: inherit; font-size: 1.17em; margin: 0;"><strong>7.</strong> Android UI Design</h3><p></p><h3 style="font-family: inherit; font-size: 1.17em; margin: 0;">and many more ....</h3><p>&nbsp;</p><p> <label for="mc4wp_email"><span style="font-weight: bold; font-size: 13pt;">Email address: </span></label> <input type="email" id="mc4wp_email" name="EMAIL" required="" placeholder="Your email address"></p> <input type="submit" value="Sign up"></td></tr></tbody></table></div><div style="display: none;"><input type="text" name="_mc4wp_honeypot" value="" tabindex="-1" autocomplete="off"></div><input type="hidden" name="_mc4wp_timestamp" value="1496626447"><input type="hidden" name="_mc4wp_form_id" value="38947"><input type="hidden" name="_mc4wp_form_element_id" value="mc4wp-form-1"></div><div class="mc4wp-response"></div></form><div class="toc"><h4>Table Of Contents</h4><dl><dt><a href="https://www.javacodegeeks.com/2015/11/mockito-verification.html#verification">1. What is Verification?</a></dt><dt><a href="https://www.javacodegeeks.com/2015/11/mockito-verification.html#verify">2. Using verify()</a></dt><dd><dl><dt><a href="https://www.javacodegeeks.com/2015/11/mockito-verification.html#built_in">2.1. Using the built in Verification Modes</a></dt><dt><a href="https://www.javacodegeeks.com/2015/11/mockito-verification.html#verification_mode">2.2. Creating a custom Verification Mode</a></dt><dt><a href="https://www.javacodegeeks.com/2015/11/mockito-verification.html#parameters">2.3. Verification with Parameters</a></dt><dt><a href="https://www.javacodegeeks.com/2015/11/mockito-verification.html#timeout">2.4. Verification with Timeout</a></dt></dl></dd><dt><a href="https://www.javacodegeeks.com/2015/11/mockito-verification.html#no_interactions">3. Verifying No Interactions and No More Interactions</a></dt><dt><a href="https://www.javacodegeeks.com/2015/11/mockito-verification.html#in_order">4. Verification in Order</a></dt><dt><a href="https://www.javacodegeeks.com/2015/11/mockito-verification.html#captors">5. Argument Captors</a></dt><dt><a href="https://www.javacodegeeks.com/2015/11/mockito-verification.html#conclusion">6. Conclusion</a></dt><dt><a href="https://www.javacodegeeks.com/2015/11/mockito-verification.html#code">7. Download the Source Code</a></dt></dl></div><h2><a name="verification"></a>1. What is Verification?</h2><p>Verification is the process of confirming the behaviour of a Mock. It is useful in determining that the class we are testing has interacted in an expected way with any of its dependencies. Sometimes we aren’t interested in the values which are returned from a Mock, but are instead interested in how the class under test interacted with it, what values were sent in or how often it was called. The process of confirming this behaviour is verification and there are a number of tools which Mockito provides to allow us to do it.</p><h2><a name="verify"></a>2. Using verify()</h2><p>The main tool for performing verification in the Mockito toolbox is the <code>org.mockito.Mockito.verify()</code> method. The verify method takes the Mock object as a parameter and returns an instance of the same Class as the Mock, allowing you to call the methods of the Class, which Mockito interprets as a request to verify that there was some interaction with that method.</p><p>Let’s look again at our printer interface from the previous tutorial.</p><pre class="brush:java;wrap-lines:false">public interface Printer {
	
	void printTestPage();

}
</pre><p>We can create a simple unit test to demonstrate verify using a Mock Printer</p><pre class="brush:java;wrap-lines:false">import static org.mockito.Mockito.verify;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mock;
import org.mockito.runners.MockitoJUnitRunner;

@RunWith(MockitoJUnitRunner.class)
public class PrinterTest {

	@Mock
	private Printer printer;

	@Test
	public void simple_interaction_verification() {
		// Given
		
		// When
		printer.printTestPage();
		
		// Then
		verify(printer).printTestPage();		
	}
}
</pre><p>We can see that our unit test firstly calls <code>printer.printTestPage()</code>. This is simulating a possible interaction within a class under test, but to keep things simple we are doing it out in the unit test class. The next call is the call to <code>verify(printer).printTestPage()</code>. This instructs Mockito to check if there has been a single call to the <code>printTestPage()</code> method of the Mock Printer.</p><p>Note carefully the syntax of the call, the parameter of <code>verify()</code> is the Mock object, not the method call. If we had put <code>verify(printer.printTestPage())</code> we would have generated a compile error. Contrast this to the given/when syntax in stubbing which takes the form <code>when(mockObject.someMethod()).thenReturn(...)</code>.</p><p>If we hadn’t called <code>printTestPage()</code> above this call to verify Mockito would have generated a verification error informing us that there was no invocation of <code>printTestPage()</code>, which would look like this:</p><pre class="brush:shell;wrap-lines:false">Wanted but not invoked:
printer.printTestPage();
-&gt; at com.javacodegeeks.hughwphamill.mockito.stubbing.PrinterTest.simple_interaction_verification(PrinterTest.java:24)
Actually, there were zero interactions with this mock.
</pre><p>Additionally if we had made a second call to <code>printTestPage()</code> Mockito would have generated a verification error informing us that there were too many invocations of <code>printTestPage()</code>. This error would look like this:</p><pre class="brush:shell;wrap-lines:false">org.mockito.exceptions.verification.TooManyActualInvocations: 
printer.printTestPage();
Wanted 1 time:
-&gt; at com.javacodegeeks.hughwphamill.mockito.stubbing.PrinterTest.simple_interaction_verification(PrinterTest.java:25)
But was 2 times. Undesired invocation:
-&gt; at com.javacodegeeks.hughwphamill.mockito.stubbing.PrinterTest.simple_interaction_verification(PrinterTest.java:22)
</pre><p>Usefully the error informs us which line of code contained the superfluous invocation – in this case line 22 of <code>PrinterTest.java</code>.</p><p>But what if we want multiple interactions with our Mock?  Does Mockito support this?  Unsurprisingly the answer is Yes!</p><p>The <code>verify()</code> method takes a second parameter of type <code>org.mockito.verification.VerificationMode</code> which can be used to provide additional details about the desired interactions with the mock.</p><h3><a name="built_in"></a>2.1. Using the built in Verification Modes</h3><p>As usual Mockito provides a number of convenient static methods in org.mockito.Mockito for creating VerificationModes, such as:</p><p><code>times(int)</code><br> This will verify that the method was called the input number of times.</p><pre class="brush:java;wrap-lines:false">@Test
public void simple_interaction_verification_times_1() {
	// Given
		
	// When
	printer.printTestPage();
		
	// Then
	verify(printer, times(1)).printTestPage();		
}
</pre><p>Note that <code>verify(mock)</code> is an alias of <code>verify(mock, times(1))</code>.</p><p>Of course we can verify multiple interactions using <code>times()</code></p><pre class="brush:java;wrap-lines:false">@Test
public void simple_interaction_verification_times_3() {
	// Given
		
	// When
	printer.printTestPage();
	printer.printTestPage();
	printer.printTestPage();
		
	// Then
	verify(printer, times(3)).printTestPage();		
}
</pre><p>This <code>VerificationMode</code> will generate useful errors when the actual number of invocations doesn’t match the expected number.</p><p>Not enough invocations:</p><pre class="brush:shell;wrap-lines:false">org.mockito.exceptions.verification.TooLittleActualInvocations: 
printer.printTestPage();
Wanted 3 times:
-&gt; at com.javacodegeeks.hughwphamill.mockito.stubbing.PrinterTest.simple_interaction_verification_times_3(PrinterTest.java:49)
But was 2 times:
-&gt; at com.javacodegeeks.hughwphamill.mockito.stubbing.PrinterTest.simple_interaction_verification_times_3(PrinterTest.java:45)
</pre><p>Too many invocations:</p><pre class="brush:shell;wrap-lines:false">org.mockito.exceptions.verification.TooManyActualInvocations: 
printer.printTestPage();
Wanted 3 times:
-&gt; at com.javacodegeeks.hughwphamill.mockito.stubbing.PrinterTest.simple_interaction_verification_times_3(PrinterTest.java:50)
But was 4 times. Undesired invocation:
-&gt; at com.javacodegeeks.hughwphamill.mockito.stubbing.PrinterTest.simple_interaction_verification_times_3(PrinterTest.java:47)
</pre><p><code>atLeastOnce()</code>, <code>atLeast(int)</code><br> This will verify that the method was called at least the given number of times.</p><pre class="brush:java;wrap-lines:false">@Test
public void simple_interaction_verification_atleastonce() {
	// Given
		
	// When
	printer.printTestPage();
	printer.printTestPage();
		
	// Then
	verify(printer, atLeastOnce()).printTestPage();		
}
</pre><pre class="brush:java;wrap-lines:false">@Test
public void simple_interaction_verification_atleast_2() {
	// Given
		
	// When
	printer.printTestPage();
	printer.printTestPage();
	printer.printTestPage();
		
	// Then
	verify(printer, atLeast(2)).printTestPage();		
}
</pre><p>As usual we get comprehensive error reporting:</p><pre class="brush:shell;wrap-lines:false">org.mockito.exceptions.verification.TooLittleActualInvocations: 
printer.printTestPage();
Wanted *at least* 2 times:
-&gt; at com.javacodegeeks.hughwphamill.mockito.stubbing.PrinterTest.simple_interaction_verification_atleast_2(PrinterTest.java:76)
But was 1 time:
-&gt; at com.javacodegeeks.hughwphamill.mockito.stubbing.PrinterTest.simple_interaction_verification_atleast_2(PrinterTest.java:71)
</pre><p><code>atMost(int)</code><br> This will verify that the method was called at most the given number of times.</p><pre class="brush:java;wrap-lines:false">@Test
public void simple_interaction_verification_atmost_3() {
	// Given
		
	// When
	printer.printTestPage();
	printer.printTestPage();
		
	// Then
	verify(printer, atMost(3)).printTestPage();		
}
</pre><p>And the error condition:</p><pre class="brush:shell;wrap-lines:false">org.mockito.exceptions.base.MockitoAssertionError: 
Wanted at most 3 times but was 4
	at com.javacodegeeks.hughwphamill.mockito.stubbing.PrinterTest.simple_interaction_verification_atmost_3(PrinterTest.java:91)
</pre><p><code>never()</code><br> This will verify that the method was not called.</p><pre class="brush:java;wrap-lines:false">@Test
public void simple_interaction_verification_never() {
	// Given
		
	// When
		
	// Then
	verify(printer, never()).printTestPage();		
}
</pre><p>And the error condition:</p><pre class="brush:shell;wrap-lines:false">org.mockito.exceptions.verification.NeverWantedButInvoked: 
printer.printTestPage();
Never wanted here:
-&gt; at com.javacodegeeks.hughwphamill.mockito.stubbing.PrinterTest.simple_interaction_verification_never(PrinterTest.java:102)
But invoked here:
-&gt; at com.javacodegeeks.hughwphamill.mockito.stubbing.PrinterTest.simple_interaction_verification_never(PrinterTest.java:98)
</pre><p><code>only()</code><br> This will verify that the method being verified was the only method of the mock called.</p><pre class="brush:java;wrap-lines:false">@Test
public void simple_interaction_verification_only() {
	// Given
		
	// When
	printer.printTestPage();
		
	// Then
	verify(printer, only()).printTestPage();		
}
</pre><p>We can produce an error by adding the following method to our printer interface:</p><pre class="brush:java;wrap-lines:false">void turnOff();
</pre><p>And calling it in our test</p><pre class="brush:java;wrap-lines:false">@Test
public void simple_interaction_verification_only_fails() {
	// Given
		
	// When
	printer.printTestPage();
	printer.turnOff();
		
	// Then
	verify(printer, only()).printTestPage();		
}
</pre><p>to give the following error:</p><pre class="brush:shell;wrap-lines:false">org.mockito.exceptions.verification.NoInteractionsWanted: 
No interactions wanted here:
-&gt; at com.javacodegeeks.hughwphamill.mockito.stubbing.PrinterTest.simple_interaction_verification_only_fails(PrinterTest.java:124)
But found this interaction:
-&gt; at com.javacodegeeks.hughwphamill.mockito.stubbing.PrinterTest.simple_interaction_verification_only_fails(PrinterTest.java:120)
***
For your reference, here is the list of all invocations ([?] - means unverified).
1. [?]-&gt; at com.javacodegeeks.hughwphamill.mockito.stubbing.PrinterTest.simple_interaction_verification_only_fails(PrinterTest.java:120)
2. [?]-&gt; at com.javacodegeeks.hughwphamill.mockito.stubbing.PrinterTest.simple_interaction_verification_only_fails(PrinterTest.java:121)
</pre><h3><a name="verification_mode"></a>2.2. Creating a custom Verification Mode</h3><p>You can create your own custom verification mode by implementing the <code>org.mockito.verification.VerificationMode</code> interface. Note that this is using some classes that don’t form part of the public API of Mockito. There are plans to promote them to public API as of the time of writing, but this feature should be used with caution in case the implementation changes before that happens.</p><p><code>VerificationMode</code> exposes a single <code>void verify(VerificationData data)</code> method which is used to verify that the mock invocations we are interested in happend correctly.</p><p>You can use a couple of internal Mockito classes to help you in your <code>VerificationMode</code>:</p><ul><li><code>InvocationsFinder</code> will return a list of all invocations with the mock of interest.</li><li><code>InvocationMarker</code> can be used to mark the mock invocation as verified.</li><li><code>Reporter</code> exposes a number of shortcut methods for throwing various <code>VerificationFailure</code> errors.</li><li><code>InvocationMatcher</code> is used in conjunction with <code>InvocationsMarker</code> to find the desired Invocations if they happened.</li></ul><p>We are going to create a <code>VerificationMode</code> called <code>First</code> which will verify that a given method was the first invocation on the Mock. We will create a class which implements <code>VerificationMode</code> and in the verify method we will find all matching invocations and verify two things:</p><p>1.	The invocation we wanted actually happened, if it did not we will use Reporter to throw a “wanted but not invoked” error.<br> 2.	The invocation we wanted was the first invocation on the Mock, if it was not we will throw a new exception with an appropriate message detailing the expected invocation and the actual one.</p><p>Lastly we will expose the creating of <code>First</code> through a static factory method to be consistent with the Mockito syntax.</p><p>The class <code>First</code> looks like this:</p><pre class="brush:java;wrap-lines:false">package com.javacodegeeks.hughwphamill.mockito.verification;

import java.util.Arrays;
import java.util.List;

import org.mockito.exceptions.Reporter;
import org.mockito.exceptions.verification.VerificationInOrderFailure;
import org.mockito.internal.debugging.LocationImpl;
import org.mockito.internal.invocation.InvocationMarker;
import org.mockito.internal.invocation.InvocationMatcher;
import org.mockito.internal.invocation.InvocationsFinder;
import org.mockito.internal.verification.api.VerificationData;
import org.mockito.invocation.Invocation;
import org.mockito.verification.VerificationMode;

public class First implements VerificationMode {
	
	private final InvocationsFinder finder = new InvocationsFinder();
	private final InvocationMarker marker = new InvocationMarker();
	private final Reporter reporter = new Reporter();
	
	public static VerificationMode first() {
		return new First();
	}

	@Override
	public void verify(VerificationData data) {
		List&lt;Invocation&gt; invocations = data.getAllInvocations();
		InvocationMatcher matcher = data.getWanted();
		
		List&lt;Invocation&gt; chunk = finder.findInvocations(invocations, matcher);
		
		if (invocations.size() == 0 || chunk.size() == 0) {
			reporter.wantedButNotInvoked(matcher);
		} else if (!sameInvocation(invocations.get(0), chunk.get(0))) {			
			reportNotFirst(chunk.get(0), invocations.get(0));
		}
		
		marker.markVerified(chunk.get(0), matcher);	
	}

	private boolean sameInvocation(Invocation left, Invocation right) {
		if (left == right) {
			return true;			
		}	
		return left.getMock().equals(right.getMock()) &amp;&amp; left.getMethod().equals(right.getMethod()) &amp;&amp; Arrays.equals(left.getArguments(), right.getArguments());
	}
	
	private void reportNotFirst(Invocation wanted, Invocation unwanted) {
		StringBuilder message = new StringBuilder();
		message.append("\\nWanted first:\\n").append(wanted).append("\\n").append(new LocationImpl());
		message.append("\\nInstead got:\\n").append(unwanted).append("\\n").append(unwanted.getLocation()).append("\\n");
		throw new VerificationInOrderFailure(message.toString());
		
	}
}
</pre><p>We can use it in a test case like this:</p><pre class="brush:java;wrap-lines:false">@Test
public void simple_interaction_verification_first() {
	// Given
		
	// When
	printer.printTestPage();
	printer.turnOff();		
				
	// Then
	verify(printer, first()).printTestPage();		
}
</pre><p>Or to catch some unexpected behaviour:</p><pre class="brush:java;wrap-lines:false">@Test
public void simple_interaction_verification_first_fails() {
	// Given
		
	// When
	printer.turnOff();
	printer.printTestPage();				
				
	// Then
	verify(printer, first()).printTestPage();		
}
</pre><p>Which generates the following error:</p><pre class="brush:shell;wrap-lines:false">org.mockito.exceptions.verification.VerificationInOrderFailure: 
Wanted first:
printer.printTestPage();
-&gt; at com.javacodegeeks.hughwphamill.mockito.verification.PrinterTest.simple_interaction_verification_first_fails(PrinterTest.java:152)
Instead got:
printer.turnOff();
-&gt; at com.javacodegeeks.hughwphamill.mockito.verification.PrinterTest.simple_interaction_verification_first_fails(PrinterTest.java:148)
</pre><h3><a name="parameters"></a>2.3. Verification with Parameters</h3><p>We are going to examine verification of methods which take parameters so let’s update our <code>Printer</code> interface to add a new method. This method will simulate printing a String of text and will contain the following parameters:</p><ul><li>String text – The text to be printed.</li><li>Integer copies – The number of copies to be made.</li><li>Boolean collate – True to collate copies.</li></ul><pre class="brush:java;wrap-lines:false">public interface Printer {
	
	void printTestPage();
	
	void turnOff();
	
	void print(String text, Integer copies, Boolean collate);

}
</pre><p>Verification with Parameters lets us verify that not only was there an interaction with a <code>Mock</code>, but what parameters were passed to the Mock. To perform verification with parameters you simply pass the parameters of interest into the Mocked method on the verify call on the Mock.</p><pre class="brush:java;wrap-lines:false">@Test
public void verificatin_with_actual_parameters() {
	// Given
	String text = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, "
			+ "sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.";
	Integer copies = 3;
	Boolean collate = true;
		
	// When
	printer.print(text, copies, collate);
				
	// Then
	verify(printer).print(text, copies, collate);		
}
</pre><p>Note carefully again the syntax of <code>verify()</code> we are calling <code>print()</code> on the object returned from the verify method, not directly on the Mock. You can see that simply passing in the values to <code>print()</code> is enough to perform verification using parameters.</p><p>The following test will fail:</p><pre class="brush:java;wrap-lines:false">@Test
public void verificatin_with_actual_parameters_fails() {
	// Given
	String text = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, "
			+ "sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.";
	String text2 = "Ut enim ad minim veniam, quis nostrud exercitation ullamco " 
			+ "laboris nisi ut aliquip ex ea commodo consequat.";
	Integer copies = 3;
	Boolean collate = true;
		
	// When
	printer.print(text2, copies, collate);
				
	// Then
	verify(printer).print(text, copies, collate);		
}
</pre><p>with the following output:</p><pre class="brush:shell;wrap-lines:false">Argument(s) are different! Wanted:
printer.print(
    "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",
    3,
    true
);
-&gt; at com.javacodegeeks.hughwphamill.mockito.verification.PrinterTest.verificatin_with_actual_parameters_fails(PrinterTest.java:185)
Actual invocation has different arguments:
printer.print(
    "Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
    3,
    true
);
</pre><p>You can see that Mockito usefully gives you the expected arguments and the actual arguments in the error trace, making it very easy to debug your failing test.</p><p>As with simple verification we can use a VerificationMode to do more specific verification when using Parameters. The crucial difference is that the VerificationMode we specify applies only to invocations with the stated parameters. So if we use a verification mode of <code>never()</code>, for instance, we are stating that the method is never called with the stated parameters, not that it is never called at all.</p><p>The following test passes because even though the <code>print()</code> method is invoked, it is never invoked with the specified parameters.</p><pre class="brush:java;wrap-lines:false">@Test
public void verification_with_actual_parameters_and_verification_mode() {
	// Given
	String text = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, "
			+ "sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.";
	String text2 = "Ut enim ad minim veniam, quis nostrud exercitation ullamco " 
			+ "laboris nisi ut aliquip ex ea commodo consequat.";
	Integer copies = 3;
	Boolean collate = true;
		
	// When
	printer.print(text, copies, collate);
				
	// Then
	verify(printer, never()).print(text2, copies, collate);		
}
</pre><p>When we have multiple calls to our <code>Mock</code> we can verify each one individually using multiple calls to <code>verify</code></p><pre class="brush:java;wrap-lines:false">@Test
public void multiple_verification_with_actual_parameters() {
	// Given
	String text = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, "
			+ "sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.";
	String text2 = "Ut enim ad minim veniam, quis nostrud exercitation ullamco " 
			+ "laboris nisi ut aliquip ex ea commodo consequat.";
	Integer copies = 3;
	Boolean collate = true;
		
	// When
	printer.print(text, copies, collate);
	printer.print(text2, copies, collate);
				
	// Then
	verify(printer).print(text, copies, collate);
	verify(printer).print(text2, copies, collate);		
}
</pre><p>A lot of the time we aren’t interested or don’t know what the actual parameters of the interaction will be, in these instances, just as in the Stubbing phase we can use Argument Matchers to verify interactions.</p><p>Look at the following test</p><pre class="brush:java;wrap-lines:false">@Test
public void verification_with_matchers() {
	// Given
	String text = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, "
			+ "sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.";
	String text2 = "Ut enim ad minim veniam, quis nostrud exercitation ullamco " 
			+ "laboris nisi ut aliquip ex ea commodo consequat.";
	Integer copies3 = 3;
	Integer copies4 = 4;
	Boolean doCollate = true;
	Boolean doNotCollate = false;
		
	// When
	printer.print(text, copies3, doCollate);
	printer.print(text2, copies4, doNotCollate);
				
	// Then
	verify(printer, times(2)).print(anyString(), anyInt(), anyBoolean());		
}
</pre><p>Note that we call <code>printer.print()</code> twice, with completely different parameters each time. We verify both interactions with the Mock on the last line using Argument Matchers. Remember that <code>verify(printer).print()</code> implicitly means we want to verify one and only one interaction with the <code>print()</code> method on the Mock, so we must include the <code>times(2)</code> VerificationMode to ensure we are verifying both interactions with the Mock.</p><p>The Argument Matchers used with Verification are the same Argument Matchers used during the Stubbing phase. Please revisit the <a href="http://www.javacodegeeks.com/2015/09/mocks-spies-and-partial-mocks/">Stubbing tutorial</a> for a longer list of available Matchers.</p><p>As with the Stubbing phase we cannot mix and match Argument Matchers with real values, but what if we didn’t care about the text that was passed into the Printer for printing, we were only interested in verifying that there should be 5 collated copies?</p><p>In this case, as with Stubbing, we can use the <code>eq()</code> Matcher to verify the real values we are interested, while using <code>anyString()</code> for the text.</p><pre class="brush:java;wrap-lines:false">@Test
public void verification_with_mixed_matchers() {
	// Given
	String text = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, "
			+ "sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.";
	String text2 = "Ut enim ad minim veniam, quis nostrud exercitation ullamco " 
			+ "laboris nisi ut aliquip ex ea commodo consequat.";
	Integer copies = 5;
	Boolean collate = true;
		
	// When
	printer.print(text, copies, collate);
	printer.print(text2, copies, collate);
				
	// Then
	verify(printer, times(2)).print(anyString(), eq(copies), eq(collate));		
}
</pre><p>This passes, while the following test will fail</p><pre class="brush:java;wrap-lines:false">@Test
public void verification_with_mixed_matchers_fails() {
	// Given
	String text = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, "
			+ "sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.";
	Integer copies5 = 5;
	Integer copies10 = 10;
	Boolean collate = true;
		
	// When
	printer.print(text, copies10, collate);
				
	// Then
	verify(printer).print(anyString(), eq(copies5), eq(collate));		
}
</pre><h3><a name="timeout"></a>2.4. Verification with Timeout</h3><p>Sometimes, when testing multithreaded applications, we want to ensure that certain mock interactions happen within a given timeout period. Mockito provides a <code>timeout()</code> method to help us achieve this.</p><p>Please note that while this feature is available, the Mockito documentation cautions against using it:</p><p>“It feels this feature should be used rarely – figure out a better way of testing your multi-threaded system.”</p><p>So with the health warning out of the way let’s look at a couple of examples.</p><p>Let’s say we have some thread that’s going to execute a <code>printTestPage()</code> and we want to verify that this happens within 100 milliseconds. We can use <code>timeout(100)</code> to achieve this. It can be passed as the second parameter to <code>verify()</code> and it returns a VerificationWithTimout which is an extension of VerificationMode.</p><p>The following test demonstrates it’s usage:</p><pre class="brush:java;wrap-lines:false">@Test
public void verification_with_timeout() {
	// Given
		
	// When
	Executors.newFixedThreadPool(1).execute(() -&gt; printer.printTestPage());
				
	// Then
	verify(printer, timeout(100)).printTestPage();
}
</pre><p>Here we create a new <code>ExecutorService</code> using <code>Executor</code>s which can execute Runnables. We take advantage of Java 8 Lambda expressions to build a new <code>Runnable</code> on the fly which will execute a call to <code>printTestPage()</code>. We then call <code>verify()</code> passing in a timeout of 100ms.</p><p>We can look at a failing test now. This time we will use a method reference to generate the Runnable, this is because the body of our Runnable is a bit more complex – it introduces a sleep for 200ms.</p><pre class="brush:java;wrap-lines:false">@Test
public void verification_with_timeout_fails() throws InterruptedException {
	// Given
		
	// When
	Executors.newFixedThreadPool(1).execute(this::printTestWithSleep);
			
	// Then
	verify(printer, timeout(100)).printTestPage();
}
	
private void printTestWithSleep() {
	try {
		Thread.sleep(200L);
		printer.printTestPage();
	} catch (InterruptedException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
}
</pre><p>The test fails with a simple ‘wanted but not invoked’ message.</p><p>It is also possible to add VerificationModes to <code>timeout()</code> using methods exposed by the returned <code>VerificationWithTimeout</code>.</p><pre class="brush:java;wrap-lines:false">@Test
public void verification_with_timeout_with_verification_mode() {
	// Given
	int poolsize = 5;
	
	// When
	ExecutorService service = Executors.newFixedThreadPool(poolsize);
	service.execute(this::printTestWithSleep);
	service.execute(this::printTestWithSleep);
	service.execute(this::printTestWithSleep);
				
	// Then
	verify(printer, timeout(500).times(3)).printTestPage();
}
</pre><p>Here we use the test with sleep to execute <code>printTestPage()</code> 3 times, we use an <code>ExecutorService</code> that can run 5 parallel threads so the sleeps happen at the same time, allowing all 3 invocations to occur within the 500ms limit.</p><p>We can make the test fail by reducing the number of available threads to 1, forcing the printTestWithSleep calls to execute sequentially and going over the 500ms timeout.</p><pre class="brush:java;wrap-lines:false">@Test
public void verification_with_timeout_with_verification_mode_fails() {
	// Given
	int poolsize = 1;
	
	// When
	ExecutorService service = Executors.newFixedThreadPool(poolsize);
	service.execute(this::printTestWithSleep);
	service.execute(this::printTestWithSleep);
	service.execute(this::printTestWithSleep);
				
	// Then
	verify(printer, timeout(500).times(3)).printTestPage();
}
</pre><p>The first 2 calls happen within 400ms while the last one will happen after 600ms, causing the timeout of 500ms to fail with the following output:</p><pre class="brush:shell;wrap-lines:false">org.mockito.exceptions.verification.TooLittleActualInvocations: 
printer.printTestPage();
Wanted 3 times:
-&gt; at com.javacodegeeks.hughwphamill.mockito.verification.PrinterTest.verification_with_timeout_with_verification_mode_fails(PrinterTest.java:410)
But was 2 times:
-&gt; at com.javacodegeeks.hughwphamill.mockito.verification.PrinterTest.printTestWithSleep(PrinterTest.java:376)
</pre><h2><a name="no_interactions"></a>3. Verifying No Interactions and No More Interactions</h2><p>We saw already that we can use the <code>never()</code> VerificationMode to ensure that a particular method of a Mock is not invoked, but what about verifying that there are no interactions on a Mock at all?</p><p>Mockito provides us with the <code>verifyZeroInteractions()</code> method to do just that. This method uses varargs to allow us to verify no interactions with several mocks in one line of code.</p><p>Let’s add some other Mock to our test class:</p><pre class="brush:java;wrap-lines:false">@Mock
private List&lt;String&gt; list;
</pre><p>Now we can write the following simplistic test to verify no interactions with the Printer or the List</p><pre class="brush:java;wrap-lines:false">@Test
public void verify_zero_interactions() {
	// Given
		
	// When
				
	// Then
	verifyZeroInteractions(printer, list);		
}
</pre><p>As usual, the following test will fail</p><pre class="brush:java;wrap-lines:false">@Test
public void verify_zero_interactions_fails() {
	// Given
		
	// When
	printer.printTestPage();
				
	// Then
	verifyZeroInteractions(printer, list);		
}
</pre><p>With the following output</p><pre class="brush:shell;wrap-lines:false">org.mockito.exceptions.verification.NoInteractionsWanted: 
No interactions wanted here:
-&gt; at com.javacodegeeks.hughwphamill.mockito.verification.PrinterTest.verify_zero_interactions_fails(PrinterTest.java:288)
But found this interaction:
-&gt; at com.javacodegeeks.hughwphamill.mockito.verification.PrinterTest.verify_zero_interactions_fails(PrinterTest.java:285)
Actually, above is the only interaction with this mock.
	at com.javacodegeeks.hughwphamill.mockito.verification.PrinterTest.verify_zero_interactions_fails(PrinterTest.java:288)
</pre><p>We can also verify that once a certain number of invocations have been verified there are no more interactions with the Mock, using the <code>verifyNoMoreInteractions()</code> method.</p><pre class="brush:java;wrap-lines:false">@Test
public void verify_no_more_interactions() {
	// Given
	String text = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, "
			+ "sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.";
	Integer copies = 3;
	Boolean collate = true;
		
	// When
	printer.print(text, copies, collate);
				
	// Then
	verify(printer).print(text, copies, collate);
	verifyNoMoreInteractions(printer);
}
</pre><p>You can see above that we verify the call to <code>print()</code> and then verify that there are no more interactions with the Mock.</p><p>The following test will fail because there was an additional interaction with the mock after the verified call to <code>print()</code></p><pre class="brush:java;wrap-lines:false">@Test
public void verify_no_more_interactions_fails() {
	// Given
	String text = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, "
			+ "sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.";
	Integer copies = 3;
	Boolean collate = true;
		
	// When
	printer.print(text, copies, collate);
	printer.turnOff();
				
	// Then
	verify(printer).print(text, copies, collate);
	verifyNoMoreInteractions(printer);
}
</pre><p>The failing test generates the following message:</p><pre class="brush:shell;wrap-lines:false">org.mockito.exceptions.verification.NoInteractionsWanted: 
No interactions wanted here:
-&gt; at com.javacodegeeks.hughwphamill.mockito.verification.PrinterTest.verify_no_more_interactions_fails(PrinterTest.java:342)
But found this interaction:
-&gt; at com.javacodegeeks.hughwphamill.mockito.verification.PrinterTest.verify_no_more_interactions_fails(PrinterTest.java:338)
***
For your reference, here is the list of all invocations ([?] - means unverified).
1. -&gt; at com.javacodegeeks.hughwphamill.mockito.verification.PrinterTest.verify_no_more_interactions_fails(PrinterTest.java:337)
2. [?]-&gt; at com.javacodegeeks.hughwphamill.mockito.verification.PrinterTest.verify_no_more_interactions_fails(PrinterTest.java:338)
</pre><h2><a name="in_order"></a>4. Verification in Order</h2><p>Sometimes we want to verify that interactions with our Mocks happened in a particular order. Mockito provides a class called <code>InOrder</code> to help us achieve this.</p><p>The first thing we need to do is register the mocks that we want to confirm the invocation order on with the InOrder object. We then execute methods on the Mock object, and then call the <code>verify()</code> method of the <code>InOrder</code> object for each mock method for which we want to confirm the ordered executions, in the order in which we want to verify they happened.</p><p>The <code>InOrder.verify()</code> method behaves almost like the standard <code>verify()</code> method, allowing you to pass in VerificationModes, however you can’t do Verification With Timeout with InOrder.</p><p>Here is an example of verification in order in action:</p><pre class="brush:java;wrap-lines:false">@Test
public void verify_in_order() {
	// Given
	InOrder inOrder = Mockito.inOrder(printer);
		
	// When
	printer.printTestPage();
	printer.turnOff();
				
	// Then
	inOrder.verify(printer).printTestPage();
	inOrder.verify(printer).turnOff();
}
</pre><p>And the converse failing test:</p><pre class="brush:java;wrap-lines:false">@Test
public void verify_in_order_fails() {
	// Given
	InOrder inOrder = Mockito.inOrder(printer);
		
	// When
	printer.turnOff();
	printer.printTestPage();
				
	// Then
	inOrder.verify(printer).printTestPage();
	inOrder.verify(printer).turnOff();
}
</pre><p>Which fails with the following error message:</p><pre class="brush:shell;wrap-lines:false">org.mockito.exceptions.verification.VerificationInOrderFailure: 
Verification in order failure
Wanted but not invoked:
printer.turnOff();
-&gt; at com.javacodegeeks.hughwphamill.mockito.verification.PrinterTest.verify_in_order_fails(PrinterTest.java:440)
Wanted anywhere AFTER following interaction:
printer.printTestPage();
-&gt; at com.javacodegeeks.hughwphamill.mockito.verification.PrinterTest.verify_in_order_fails(PrinterTest.java:436)
</pre><p>You can also Verify In Order across multiple Mocks:</p><pre class="brush:java;wrap-lines:false">@Test
public void verify_in_order_multiple() {
	// Given
	InOrder inOrder = Mockito.inOrder(printer, list);
		
	// When
	printer.printTestPage();
	list.clear();
	printer.turnOff();
				
	// Then
	inOrder.verify(printer).printTestPage();
	inOrder.verify(list).clear();
	inOrder.verify(printer).turnOff();
}
</pre><h2><a name="captors"></a>5. Argument Captors</h2><p>We have looked at using Argument Matchers for verifying invocations with particular parameters but Mockito lets us go further than this, capturing the parameters which were passed into the invocation and performing asserts directly on them. This is very useful for verifying log in your class which is performed on objects which will be passed to collaborators. The facility for doing this is a class called <code>ArgumentCaptor</code> and an annotation called <code>@Captor</code>.</p><p>Let’s make a new class in our model called <code>PrinterDiagnostics</code>. It will contain a Printer and expose a method called <code>diagnosticPrint</code>, which will have the same parameters as <code>Printer.print()</code> and add some diagnostic information to the text being printed.</p><pre class="brush:java;wrap-lines:false">package com.javacodegeeks.hughwphamill.mockito.verification;

public class PrinterDiagnostics {
	
	private Printer printer;
	
	public PrinterDiagnostics(Printer printer) {
		this.printer = printer;
	}
	
	public void diagnosticPrint(String text, Integer copies, Boolean collate) {
		StringBuilder diagnostic = new StringBuilder();
		diagnostic.append("** Diagnostic Print **\\n");
		diagnostic.append("*** Copies: ").append(copies).append(" ***\\n");
		diagnostic.append("*** Collate: ").append(collate).append(" ***\\n");
		diagnostic.append("********************\\n\\n");
		
		printer.print(new StringBuilder().append(diagnostic).append(text).toString(), copies, collate);
	}
}
</pre><p>We’ll create a new JUnit test to test this class, using a Mock <code>Printer</code> and an <code>ArgumentCaptor</code> which we’ll use to verify the input to the Printer.</p><p>Here’s the skeleton of the JUnit test:</p><pre class="brush:java;wrap-lines:false">package com.javacodegeeks.hughwphamill.mockito.verification;

import org.junit.Before;
import org.junit.runner.RunWith;
import org.mockito.ArgumentCaptor;
import org.mockito.Captor;
import org.mockito.Mock;
import org.mockito.runners.MockitoJUnitRunner;

@RunWith(MockitoJUnitRunner.class)
public class PrinterDiagnosticsTest {
	
	private PrinterDiagnostics diagnostics;
	@Mock
	private Printer printer;
	@Captor
	private ArgumentCaptor&lt;String&gt; textCaptor;

	@Before
	public void setUp() throws Exception {
		diagnostics = new PrinterDiagnostics(printer);
	}
}
</pre><p>Here we see that we create an instance of the class under test, diagnostics, a Mock to represent the printer, printer, and an ArgumentCaptor for String arguments to capture the text input to the printer called textCaptor. You can see that we annotated the ArgumentCaptor with the <code>@Captor</code> annotation; Mockito will automatically instantiate the ArgumentCaptor for us because we used the annotation.</p><p>You can also see that ArgumentCaptor is a Generic type, we create an ArgumentCaptor with Type Argument String in this case because we are going to be capturing the text argument, which is a String. If we were capturing the collate parameter we might have created <code>ArgumentCaptor<boolean> collateCaptor</boolean></code>.</p><p>In our <code>@Before</code> method we simply create a new <code>PrinterDiagnostics</code>., injecting our mock Printer through its constructor.</p><p>Now let’s create our test. We want to ensure two things:</p><p>1.	The number of copies is added to the input text.<br> 2.	The state of the collate parameter is added to the input text.<br> 3.	The original text is maintained.</p><p>We could also want to verify the formatting and the asterisks in the real world, but for now let’s content ourselves with verifying the two criteria above.</p><p>In the test we will initialize the test data, execute the call to <code>diagnosticPrint()</code> and then use <code>verify()</code> in conjunction with the <code>capture()</code> method of ArgumentCaptor to capture the text argument. We will then do necessary asserts on the captured String to verify the behaviour we expect by using the <code>getValue()</code> method to retrieve the captured text.</p><pre class="brush:java;wrap-lines:false">@Test
public void verify_diagnostic_information_added_to_text() {
	// Given
	String text = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, "
			+ "sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.";
	Integer copies = 3;
	Boolean collate = true;
	String expectedCopies = "Copies: " + copies;
	String expectedCollate = "Collate: " + collate;
		
	// When
	diagnostics.diagnosticPrint(text, copies, collate);
		
	// Then
	verify(printer).print(textCaptor.capture(), eq(copies), eq(collate));
	assertTrue(textCaptor.getValue().contains(expectedCopies));
	assertTrue(textCaptor.getValue().contains(expectedCollate));
	assertTrue(textCaptor.getValue().contains(text));	
}
</pre><p>Note that <code>capture()</code> acts a bit like a Matcher in that you have to use Matchers for the other parameters. We use the <code>eq()</code> matcher to ensure we pass through the expected copies and collate parameters.</p><p>If there are multiple invocations on the mocked method we can use the <code>getValues()</code> method of <code>ArgumentCaptor</code> to get a List of all the Strings which were passed through as the text parameter in each call.</p><p>Let’s create a new method in PrinterDiagnostics which will perform a diagnostic print of a single collated copy as well as the original print:</p><pre class="brush:java;wrap-lines:false">public void diagnosticAndOriginalPrint(String text, Integer copies, Boolean collate) {
	diagnosticPrint(text, copies, collate);
	printer.print(text, copies, collate);
}
</pre><p>We can now test this with the following test method:</p><pre class="brush:java;wrap-lines:false">@Test
public void verify_diagnostic_information_added_to_text_and_original_print() {
	// Given
	String text = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, "
			+ "sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.";
	Integer copies = 3;
	Boolean collate = true;
	String expectedCopies = "Copies: " + copies;
	String expectedCollate = "Collate: " + collate;
		
	// When
	diagnostics.diagnosticAndOriginalPrint(text, copies, collate);
		
	// Then
	verify(printer, times(2)).print(textCaptor.capture(), eq(copies), eq(collate));
	List&lt;String&gt; texts = textCaptor.getAllValues();
	assertEquals(2, texts.size());
		
	// First captured text is Diagnostic Print
	assertTrue(texts.get(0).contains(expectedCopies));
	assertTrue(texts.get(0).contains(expectedCollate));
	assertTrue(texts.get(0).contains(text));
		
	// Second captured text is normal Print
	assertFalse(texts.get(1).contains(expectedCopies));
	assertFalse(texts.get(1).contains(expectedCollate));
	assertEquals(text, texts.get(1));
}
</pre><p>Note that we have to use <code>times(2)</code> in our verification because we are expecting to invoke the <code>print()</code> method twice.</p><p>ArgumentCaptors are particularly useful when our parameters are complex objects or are created by the code under test. You can easily capture the argument and do any type of verification and validation you need on it.</p><h2><a name="conclusion"></a>6. Conclusion</h2><p>We have looked in detail at the verification phase of Mockito. We have examined the ways which we can verify behaviour out of the box, create our own Verification Modes and use Argument Captors for doing further more complex assertions on our Data.</p><p>In the next tutorial we will examine how the Hamcrest Matcher library lets us take our test verification even further, allowing us to do very fine grained behavioural validation.</p><h2><a name="code"></a>7. Download the Source Code</h2><p>This was a lesson on Mockito Verification. You may download the source code here: <a href="http://www.javacodegeeks.com/wp-content/uploads/2015/09/mockito3-verification.zip">mockito3-verification</a></p></div> <span style="display:none"><a href="https://www.javacodegeeks.com/tag/mockito/" rel="tag">Mockito</a> <a href="https://www.javacodegeeks.com/tag/testing/" rel="tag">Testing</a></span>				<span style="display:none" class="updated">2015-11-15</span><div style="display:none" class="vcard author" itemprop="author" itemscope="" itemtype="http://schema.org/Person"><strong class="fn" itemprop="name"><a href="https://www.javacodegeeks.com/author/hugh-hamill/" title="Posts by Hugh Hamill" rel="author">Hugh Hamill</a></strong></div></div> </article><p class="post-tag">Tagged with: <a href="https://www.javacodegeeks.com/tag/mockito/" rel="tag">Mockito</a> <a href="https://www.javacodegeeks.com/tag/testing/" rel="tag">Testing</a></p> <script type="text/javascript">(function(){if(!window.mc4wp){window.mc4wp={listeners:[],forms:{on:function(event,callback){window.mc4wp.listeners.push({event:event,callback:callback});}}}}})();</script><form id="mc4wp-form-2" class="mc4wp-form mc4wp-form-29380 mc4wp-form-theme mc4wp-form-theme-red mc4wp-ajax" method="post" data-id="29380" data-name="Under The Post"><div class="mc4wp-form-fields"><div class="nlbox1"><h1>Do you want to know how to develop your skillset to become a <span style="color: #CAB43D; text-shadow: 1px 1px #835D5D;">Java Rockstar?</span></h1><div style="background: url(&#39;/wp-content/uploads/2015/01/books_promo.png&#39;) no-repeat; float:left; padding: 75px 145px 310px 170px; margin-top: -10px; margin-left: -35px;"></div><table style="margin-top: 20px; padding-left: 20px;"><tbody><tr><td style="vertical-align:top;"><h2>Subscribe to our newsletter to start Rocking <span style="text-decoration: underline;">right now!</span></h2><h3>To get you started we give you our best selling eBooks for <span style="color:#e01404; text-shadow: 1px 1px #C99924; font-size: 20px; line-height: 25px;">FREE!</span></h3><p>&nbsp;</p><h3><strong>1.</strong> JPA Mini Book</h3><h3><strong>2.</strong> JVM Troubleshooting Guide</h3><h3><strong>3.</strong> JUnit Tutorial for Unit Testing</h3><h3><strong>4.</strong> Java Annotations Tutorial<!--3--></h3><h3><strong>5.</strong> Java Interview Questions</h3><h3><strong>6.</strong> Spring Interview Questions</h3><h3><strong>7.</strong> Android UI Design</h3><p>&nbsp;</p><h3>and many more ....</h3><p>&nbsp;</p><p></p><p> <label for="mc4wp_email"><span style="font-weight: bold; font-size: 13pt;">Email address: </span></label> <input type="email" id="mc4wp_email" name="EMAIL" required="" placeholder="Your email address"></p><p>&nbsp;</p> <input type="submit" value="Sign up"></td></tr></tbody></table></div><div style="display: none;"><input type="text" name="_mc4wp_honeypot" value="" tabindex="-1" autocomplete="off"></div><input type="hidden" name="_mc4wp_timestamp" value="1496626447"><input type="hidden" name="_mc4wp_form_id" value="29380"><input type="hidden" name="_mc4wp_form_element_id" value="mc4wp-form-2"></div><div class="mc4wp-response"></div></form><div class="e3lan-post"><div id="div-gpt-ad-1415445260332-5" style="width:300px; height:250px;"> <script type="text/javascript">googletag.cmd.push(function(){googletag.display('div-gpt-ad-1415445260332-5');});</script><div id="google_ads_iframe_/70432299/JCG_Under-post_0__container__" style="border: 0pt none;"><iframe id="google_ads_iframe_/70432299/JCG_Under-post_0" title="3rd party ad content" name="google_ads_iframe_/70432299/JCG_Under-post_0" width="300" height="250" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" style="border: 0px; vertical-align: bottom;" src="./M3-Mockito Verification _ Java Code Geeks - 2017_files/saved_resource(3).html"></iframe></div> </div></div><div id="comments"><div id="respond" class="comment-respond"><h3 id="reply-title" class="comment-reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="https://www.javacodegeeks.com/2015/11/mockito-verification.html#respond" style="display:none;">Cancel reply</a></small></h3><form action="https://www.javacodegeeks.com/wp-comments-post.php" method="post" id="commentform" class="comment-form"><p class="comment-notes">Your email address will not be published. Required fields are marked <span class="required">*</span></p><p class="comment-form-comment"><label for="comment">Comment</label><textarea id="comment" name="comment" cols="45" rows="8" maxlength="65525" aria-required="true" required="required"></textarea></p><p class="comment-form-author"><label for="author">Name</label> <span class="required">*</span><input id="author" name="author" type="text" value="" size="30" aria-required="true" required="true"></p><p class="comment-form-email"><label for="email">Email</label> <span class="required">*</span><input id="email" name="email" type="text" value="" size="30" aria-required="true" required="true"></p><p class="comment-form-url"><label for="url">Website</label><input id="url" name="url" type="text" value="" size="30"></p> <input type="hidden" name="_mc4wp_subscribe_wp-comment-form" value="0"><p class="mc4wp-checkbox mc4wp-checkbox-wp-comment-form"><label><input type="checkbox" name="_mc4wp_subscribe_wp-comment-form" value="1" checked="checked"><span>Sign me up for the newsletter!</span></label></p><div class="comment-sub-ops" data-auto="position"><label for="comment-mail-sub-type" class="cso-sub-type"> <span class="cso-icon"><svg style="width:1em; height:1em; vertical-align:middle;" viewBox="0 0 16 16" version="1.1" xmlns="http://www.w3.org/2000/svg"> <g fill="currentColor" fill-rule="evenodd"> <path d="M14.1,5.63571636 C14.9517714,6.33967604 15.450459,7.19287046 15.450459,8.11238878 C15.450459,9.00675525 14.9786798,9.83837654 14.1691007,10.5309611 L15.9373937,14.0087185 L12.3204301,12.0078104 C11.9296094,13.5858368 9.54844584,14.7997638 6.66936474,14.7997638 C5.53232152,14.7997638 4.47293941,14.6104254 3.58314938,14.2840966 L3.58314938,14.2840966 L0.600000024,15.934378 L1.91489821,13.3483263 C1.31289726,12.8333222 0.962083376,12.2149306 0.962083376,11.549882 C0.962083376,11.165606 1.07921023,10.7969075 1.29424428,10.4547307 L1.29424428,10.4547307 C0.538036753,9.77771086 0.100000001,8.97417858 0.100000001,8.11238878 C0.100000001,7.04123575 0.776722924,6.06008476 1.89999998,5.30000019 L1.89999998,7.0658888 C1.89999998,7.30870143 2.09163284,7.50553995 2.34867325,7.50553995 L13.6513267,7.50553995 C13.8991221,7.50553995 14.1,7.31362877 14.1,7.0658888 L14.1,5.63571636 L14.1,5.63571636 Z M1.91455086,10.9345943 C1.80464172,11.1556337 1.74596704,11.3882813 1.74596704,11.6284523 C1.74596704,12.1628789 2.03649339,12.660053 2.53556999,13.0749705 L1.89355472,14.5590821 L3.60073421,13.7061116 L3.60073421,13.7061116 C4.4110062,14.0513606 5.42865146,14.2569046 6.53374306,14.2569046 C8.94591699,14.2569046 10.9414496,13.2775827 11.2731076,12.0036603 C10.2241563,12.3100096 9.03514487,12.482874 7.77522952,12.482874 C5.42553187,12.482874 3.3224447,11.8816356 1.91455086,10.9345943 L1.91455086,10.9345943 Z M3.03674893,0 C2.79553911,0 2.5999999,0.198275445 2.5999999,0.450938832 L2.5999999,6.42178844 C2.5999999,6.67083508 2.80610042,6.87272727 3.03674893,6.87272727 L12.9632509,6.87272727 C13.2044607,6.87272727 13.3999999,6.67445183 13.3999999,6.42178844 L13.3999999,0.450938832 C13.3999999,0.201892192 13.1938994,0 12.9632509,0 L3.03674893,0 Z M7.99999989,4.5999999 L12.5,0.600000013 L11.5625,0.600000013 L7.99999989,2.78181813 L4.43749976,0.600000013 L3.5,0.599999905 L7.99999989,4.5999999 Z"></path> </g> </svg></span> Receive Email Notifications? </label><select id="comment-mail-sub-type" name="comment_mail_sub_type" class="cso-sub-type form-control" title="Receive Notifications?"><option value="" selected="selected">no, do not subscribe</option><option value="comment">yes, replies to my comment</option><option value="comments">yes, all comments/replies</option> </select> <select id="comment-mail-sub-deliver" name="comment_mail_sub_deliver" class="cso-sub-deliver form-control" title="Notify Me" disabled="disabled"><option value="asap" selected="selected">instantly</option><option value="hourly">hourly digest</option><option value="daily">daily digest</option><option value="weekly">weekly digest</option> </select><div class="cso-links"> <span class="cso-link-new">Or, you can <a href="https://www.javacodegeeks.com/?comment_mail%5Bmanage%5D%5Bsub_new%5D=0&amp;comment_mail%5Bmanage%5D%5Bsub_form%5D%5Bpost_id%5D=44892" rel="nofollow">subscribe without commenting</a>.</span></div></div><style type="text/css">.comment-sub-ops{margin:1em
0 1em 0}.comment-sub-ops
label{display:block}.comment-sub-ops
select{box-sizing:border-box;display:inline-block}.comment-sub-ops select.cso-sub-type{width:70%;float:left}.comment-sub-ops select.cso-sub-deliver{width:28%;float:right}.comment-sub-ops select.cso-sub-deliver[disabled]{opacity:0.3}.comment-sub-ops .cso-links{font-size:80%;line-height:1.5em;margin:0
0 0 .5em;clear:both}.comment-sub-ops .cso-links .cso-link-summary{display:block;line-height:1em}.comment-sub-ops .cso-sub-list{margin:1em
0 0 0}.comment-sub-ops .cso-sub-list
label{cursor:pointer}</style><p class="form-submit"><input name="submit" type="submit" id="submit" class="submit" value="Post Comment"> <input type="hidden" name="comment_post_ID" value="44892" id="comment_post_ID"> <input type="hidden" name="comment_parent" id="comment_parent" value="0"></p><p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="ba2e94265c"></p><p style="display: none;"></p><input type="hidden" id="ak_js" name="ak_js" value="1496629403376"></form></div></div></div></div> <aside class="sidebar"><div id="text-html-widget-2" class="text-html-box"><div id="div-gpt-ad-1415445260332-3" style="width:300px; height:250px;"> <script type="text/javascript">googletag.cmd.push(function(){googletag.display('div-gpt-ad-1415445260332-3');});</script><div id="google_ads_iframe_/70432299/JCG_Side_0__container__" style="border: 0pt none;"><iframe id="google_ads_iframe_/70432299/JCG_Side_0" title="3rd party ad content" name="google_ads_iframe_/70432299/JCG_Side_0" width="300" height="250" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" style="border: 0px; vertical-align: bottom;" src="./M3-Mockito Verification _ Java Code Geeks - 2017_files/saved_resource(4).html"></iframe></div> </div></div><div id="text-html-widget-3" class="text-html-box"><div id="div-gpt-ad-1415445260332-4" style="width:300px; height:250px;"> <script type="text/javascript">googletag.cmd.push(function(){googletag.display('div-gpt-ad-1415445260332-4');});</script><div id="google_ads_iframe_/70432299/JCG_Side_1_0__container__" style="border: 0pt none;"><iframe id="google_ads_iframe_/70432299/JCG_Side_1_0" title="3rd party ad content" name="google_ads_iframe_/70432299/JCG_Side_1_0" width="300" height="250" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" style="border: 0px; vertical-align: bottom;" src="./M3-Mockito Verification _ Java Code Geeks - 2017_files/saved_resource(5).html"></iframe></div> </div></div><div id="mc4wp_form_widget-3" class="widget widget_mc4wp_form_widget"><div class="widget-top"><h4>Newsletter</h4><div class="stripe-line"></div></div><div class="widget-container"><script type="text/javascript">(function(){if(!window.mc4wp){window.mc4wp={listeners:[],forms:{on:function(event,callback){window.mc4wp.listeners.push({event:event,callback:callback});}}}}})();</script><form id="mc4wp-form-3" class="mc4wp-form mc4wp-form-28645 mc4wp-form-theme mc4wp-form-theme-red mc4wp-ajax" method="post" data-id="28645" data-name="Sidebar"><div class="mc4wp-form-fields"><div style="padding: 15px 15px 15px; background: url(&#39;/wp-content/uploads/2014/11/newsletter-bg.jpg&#39;) no-repeat; background-color: rgb(252, 252, 252);"><span style="text-shadow: 1px 1px #D0D0D0; font-weight: bold; font-size: 14pt; display: inline;">179,260</span> insiders are already enjoying weekly updates and complimentary whitepapers!<p> <span style="text-shadow: 1px 1px #D0D0D0; font-weight: bold; font-size: 14pt; display: inline;">Join them now</span> to gain <span style="text-decoration: underline;  font-size: 14pt;">exclusive access</span> to the latest news in the Java world, as well as insights about Android, Scala, Groovy and other related technologies.</p><p> <label for="mc4wp_email"><span style="font-weight: bold; font-size: 13pt;">Email address: </span></label> <input type="email" id="mc4wp_email" name="EMAIL" required="" placeholder="Your email address"></p> <input type="submit" value="Sign up"></div><div style="display: none;"><input type="text" name="_mc4wp_honeypot" value="" tabindex="-1" autocomplete="off"></div><input type="hidden" name="_mc4wp_timestamp" value="1496626447"><input type="hidden" name="_mc4wp_form_id" value="28645"><input type="hidden" name="_mc4wp_form_element_id" value="mc4wp-form-3"></div><div class="mc4wp-response"></div></form></div></div><div id="wpjb-recent-jobs-2" class="widget widget_wpjb-recent-jobs"><div class="widget-top"><h4>Recent Jobs</h4><div class="stripe-line"></div></div><div class="widget-container"><div class="wpjb wpjb-widget"><div class="wpjb-grid wpjb-grid-compact wpjb-grid-closed-top"><div class="wpjb-grid-row"><div class="wpjb-col-100"> <span class="wpjb-widget-grid-link"><a href="https://www.javacodegeeks.com/job/software-developer-in-bracknell-uk/">Software Developer in Bracknell (UK)</a></span><br> <span class="wpjb-sub">Bracknell, United Kingdom <span class="wpjb-glyphs wpjb-icon-location"></span></span></div></div><div class="wpjb-grid-row"><div class="wpjb-col-100"> <span class="wpjb-widget-grid-link"><a href="https://www.javacodegeeks.com/job/software-engineer-service-provider/">Software Engineer – Service Provider</a></span><br> <span class="wpjb-sub">Bracknell, United Kingdom <span class="wpjb-glyphs wpjb-icon-location"></span></span></div></div><div class=""><div class="wpjb-col-100"> <span class="wpjb-widget-grid-link wpjb-widget-recent-jobs-all"> <a class="wpjb-link-view-all" href="https://www.javacodegeeks.com/jobs/">View All</a> <span class="wpjb-glyphs wpjb-icon-right-open"></span> </span></div></div></div></div></div></div><div id="text-html-widget-5" class="widget text-html"><div class="widget-top"><h4>Join Us</h4><div class="stripe-line"></div></div><div class="widget-container"><div><div style="width:150px; height:150px; float:left; margin-top:-10px; margin-left:-10px;"> <img title="Join Us" alt="Join Us" src="./M3-Mockito Verification _ Java Code Geeks - 2017_files/w4g-badge-150x150.png" width="150" height="150"></div> With <label style="border:1px solid #D8D8D8;background:#F0F0F0;border-radius:3px;-moz-border-radius:3px;text-shadow: 1px 1px #D0D0D0;text-align:center;font-weight:bold;padding-left:3px;padding-right:3px">1,240,600</label> monthly unique visitors and over <label style="border:1px solid #D8D8D8;background:#F0F0F0;border-radius:3px;-moz-border-radius:3px;text-shadow: 1px 1px #D0D0D0;text-align:center;font-weight:bold;padding-left:3px;padding-right:3px">500</label> authors we are placed among the top Java related sites around. Constantly being on the lookout for partners; we encourage you to join us. So If you have a blog with unique and interesting content then you should check out our <strong><a href="http://www.javacodegeeks.com/join-us/jcg">JCG</a></strong> partners program. You can also be a <strong><a href="http://www.javacodegeeks.com/join-us/w4g">guest writer</a></strong> for Java Code Geeks and hone your writing skills!</div><div class="clear"></div></div></div><div id="text-html-widget-4" class="text-html-box"><div id="div-gpt-ad-1415445260332-6" style="width:300px; height:600px;"> <script type="text/javascript">googletag.cmd.push(function(){googletag.display('div-gpt-ad-1415445260332-6');});</script><div id="google_ads_iframe_/70432299/JCG_Side_2_0__container__" style="border: 0pt none;"><iframe id="google_ads_iframe_/70432299/JCG_Side_2_0" title="3rd party ad content" name="google_ads_iframe_/70432299/JCG_Side_2_0" width="300" height="600" scrolling="no" marginwidth="0" marginheight="0" frameborder="0" style="border: 0px; vertical-align: bottom;" src="./M3-Mockito Verification _ Java Code Geeks - 2017_files/saved_resource(6).html"></iframe></div> </div></div> </aside><div class="clear"></div><div class="clear"></div></div></div><footer id="theme-footer" class="fade-in animated4"><div id="footer-widget-area" class="wide-right-3c container"><div id="footer-first" class="footer-widgets-box"><div id="linkcat-4" class="footer-widget widget_links"><div class="footer-widget-top"><h4>Knowledge Base</h4></div><div class="footer-widget-container"><ul class="xoxo blogroll"><li><a href="http://www.javacodegeeks.com/courses/" target="_blank">Courses</a></li><li><a href="http://examples.javacodegeeks.com/" target="_blank">Examples</a></li><li><a href="http://www.javacodegeeks.com/p/resources.html" target="_blank">Resources</a></li><li><a href="http://www.javacodegeeks.com/tutorials/" target="_blank">Tutorials</a></li><li><a href="http://www.javacodegeeks.com/whitepaper/" target="_blank">Whitepapers</a></li></ul></div></div><div id="linkcat-3" class="footer-widget widget_links"><div class="footer-widget-top"><h4>Partners</h4></div><div class="footer-widget-container"><ul class="xoxo blogroll"><li><a href="http://www.mkyong.com/" target="_blank">Mkyong</a></li></ul></div></div><div id="linkcat-5" class="footer-widget widget_links"><div class="footer-widget-top"><h4>The Code Geeks Network</h4></div><div class="footer-widget-container"><ul class="xoxo blogroll"><li><a href="http://www.dotnetcodegeeks.com/" target="_blank">.NET Code Geeks</a></li><li><a href="http://www.javacodegeeks.com/" target="_blank">Java Code Geeks</a></li><li><a href="http://www.systemcodegeeks.com/" target="_blank">System Code Geeks</a></li><li><a href="http://www.webcodegeeks.com/" target="_blank">Web Code Geeks</a></li></ul></div></div></div><div id="footer-second" class="footer-widgets-box"><div id="linkcat-652" class="footer-widget widget_links"><div class="footer-widget-top"><h4>Hall Of Fame</h4></div><div class="footer-widget-container"><ul class="xoxo blogroll"><li><a href="http://www.javacodegeeks.com/2010/10/android-full-application-tutorial.html" target="_blank">“Android Full Application Tutorial” series</a></li><li><a href="http://www.javacodegeeks.com/2013/01/15-online-learning-websites-that-you-should-check-out.html" target="_blank">11 Online Learning websites that you should check out</a></li><li><a href="http://www.javacodegeeks.com/2013/04/advantages-and-disadvantages-of-cloud-computing-cloud-computing-pros-and-cons.html" target="_blank">Advantages and Disadvantages of Cloud Computing – Cloud computing pros and cons</a></li><li><a href="http://www.javacodegeeks.com/2011/02/android-google-maps-tutorial.html" target="_blank">Android Google Maps Tutorial</a></li><li><a href="http://www.javacodegeeks.com/2011/01/android-json-parsing-gson-tutorial.html" target="_blank">Android JSON Parsing with Gson Tutorial</a></li><li><a href="http://www.javacodegeeks.com/2010/09/android-location-based-services.html" target="_blank">Android Location Based Services Application – GPS location</a></li><li><a href="http://www.javacodegeeks.com/2011/01/android-quick-preferences-tutorial.html" target="_blank">Android Quick Preferences Tutorial</a></li><li><a href="http://www.javacodegeeks.com/2013/03/difference-between-comparator-and-comparable-in-java.html" target="_blank">Difference between Comparator and Comparable in Java</a></li><li><a href="http://www.javacodegeeks.com/2010/05/gwt-2-spring-3-jpa-2-hibernate-35-2.html" target="_blank">GWT 2 Spring 3 JPA 2 Hibernate 3.5 Tutorial</a></li><li><a href="http://www.javacodegeeks.com/2010/08/java-best-practices-vector-arraylist.html" target="_blank">Java Best Practices – Vector vs ArrayList vs HashSet</a></li></ul></div></div></div><div id="footer-third" class="footer-widgets-box"><div id="text-html-widget-7" class="footer-widget text-html"><div class="footer-widget-top"><h4>About Java Code Geeks</h4></div><div class="footer-widget-container"><div>JCGs (Java Code Geeks) is an independent online community focused on creating the ultimate Java to Java developers resource center; targeted at the technical architect, technical team lead (senior developer), project manager and junior developers alike. JCGs serve the Java, SOA, Agile and Telecom communities with daily news written by domain experts, articles, tutorials, reviews, announcements, code snippets and open source projects.</div><div class="clear"></div></div></div><div id="text-html-widget-8" class="footer-widget text-html"><div class="footer-widget-top"><h4>Disclaimer</h4></div><div class="footer-widget-container"><div>All trademarks and registered trademarks appearing on Java Code Geeks are the property of their respective owners. Java is a trademark or registered trademark of Oracle Corporation in the United States and other countries. Examples Java Code Geeks is not connected to Oracle Corporation and is not sponsored by Oracle Corporation.</div><div class="clear"></div></div></div></div></div><div class="clear"></div> </footer><div class="clear"></div><div class="footer-bottom fade-in animated4"><div class="container"><div class="social-icons icon_flat"> <a class="ttip" href="http://feeds.feedburner.com/JavaCodeGeeks" target="_blank" original-title="Rss"><i class="tieicon-rss"></i></a><a class="ttip" href="https://plus.google.com/+JavaCodeGeeks/" target="_blank" original-title="Google+"><i class="tieicon-gplus"></i></a><a class="ttip" href="https://www.facebook.com/javacodegeeks" target="_blank" original-title="Facebook"><i class="tieicon-facebook"></i></a><a class="ttip" href="https://twitter.com/javacodegeeks" target="_blank" original-title="Twitter"><i class="tieicon-twitter"></i></a><a class="ttip" href="https://www.linkedin.com/groups/Java-Code-Geeks-3810709" target="_blank" original-title="LinkedIn"><i class="tieicon-linkedin"></i></a><a class="ttip" href="https://github.com/javacodegeeks/" target="_blank" original-title="Github"><i class="tieicon-github"></i></a></div><div class="alignleft"> Java Code Geeks and all content copyright © 2010-2017,  <a href="http://www.exelixismedia.com/">Exelixis Media P.C.</a> | <a href="http://www.javacodegeeks.com/about/terms-of-use/">Terms of Use</a> | <a href="http://www.javacodegeeks.com/about/privacy-policy/">Privacy Policy</a> | <a href="https://www.javacodegeeks.com/cdn-cgi/l/email-protection#3a494f4a4a55484e7a505b4c5b59555e5f5d5f5f514914595557">Contact</a></div></div></div></div><div id="topcontrol" class="tieicon-up-open" title="Scroll To Top"></div><div id="fb-root"></div><div id="um_upload_single" style="display:none"></div><div id="um_view_photo" style="display:none"><a href="https://www.javacodegeeks.com/2015/11/mockito-verification.html#" data-action="um_remove_modal" class="um-modal-close"><i class="um-faicon-times"></i></a><div class="um-modal-body photo"><div class="um-modal-photo"></div></div></div> <script>(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)})(window,document,'script','//www.google-analytics.com/analytics.js','ga');ga('create','UA-12271632-2','auto');ga('send','pageview');</script>  <script type="text/javascript">window.cookieconsent_options={"message":"We use cookies to ensure that we give you the best experience on our website. If you continue to use this site, you agree to our use of cookies","dismiss":"Got it!","learnMore":"More info","link":"about/privacy-policy/","theme":"light-floating"};</script> <script type="text/javascript" src="./M3-Mockito Verification _ Java Code Geeks - 2017_files/cookieconsent.min.js"></script>  <script>var snp_f=[];var snp_hostname=new RegExp(location.host);var snp_http=new RegExp("^(http|https)://","i");var snp_cookie_prefix='';var snp_separate_cookies=false;var snp_ajax_url='https://www.javacodegeeks.com/wp-admin/admin-ajax.php';var snp_ignore_cookies=false;var snp_enable_analytics_events=true;var snp_enable_mobile=true;var snp_use_in_all=false;var snp_excluded_urls=[];snp_excluded_urls.push('');</script> <div class="snp-root"> <input type="hidden" id="snp_popup" value=""> <input type="hidden" id="snp_popup_id" value=""> <input type="hidden" id="snp_popup_theme" value=""> <input type="hidden" id="snp_exithref" value=""> <input type="hidden" id="snp_exittarget" value=""><div id="snppopup-welcome" class="snp-pop-59902 snppopup"><input type="hidden" class="snp_open" value="load"><input type="hidden" class="snp_show_on_exit" value="2"><input type="hidden" class="snp_exit_js_alert_text" value=""><input type="hidden" class="snp_open_after" value="5"><input type="hidden" class="snp_open_scroll" value="10"><input type="hidden" class="snp_optin_redirect_url" value=""><input type="hidden" class="snp_show_cb_button" value="yes"><input type="hidden" class="snp_popup_id" value="59902"><input type="hidden" class="snp_popup_theme" value="builder"><input type="hidden" class="snp_overlay" value="default"><input type="hidden" class="snp_cookie_conversion" value="30"><input type="hidden" class="snp_cookie_close" value="5"><div class="snp-builder"><div class="snp-bld-step-cont snp-bld-step-cont-1 snp-bld-center"><div id="snp-bld-step-1" data-width="800" data-height="500" class="snp-bld-step snp-bld-step-1  animated bounceInDown " data-animation="bounceInDown"><form action="https://www.javacodegeeks.com/2015/11/mockito-verification.html#" method="post" class="snp-subscribeform snp_subscribeform"><div class="bld-el-cont bld-el-text bld-step-1-el-0 "><div class="bld-el  "><p style="text-align: center;"><strong><span style="font-size: 26px;">Want to take your Java skills to the next level?</span></strong></p></div></div><div class="bld-el-cont bld-el-text bld-step-1-el-1 "><div class="bld-el  "><p style="text-align: center;"><span style="font-size: 18px;">Grab our programming books for <strong>FREE</strong>!</span></p></div></div><div class="bld-el-cont bld-el-text bld-step-1-el-2 "><div class="bld-el  "><p>Here are some of the eBooks you will get:</p></div></div><div class="bld-el-cont bld-el-pointlist bld-step-1-el-3  animated fadeIn" data-animation="fadeIn"><ul class="bld-el  "><li>Spring Interview QnA</li></ul></div><div class="bld-el-cont bld-el-pointlist bld-step-1-el-4  animated fadeIn" data-animation="fadeIn"><ul class="bld-el  "><li>Multithreading &amp; Concurrency QnA</li></ul></div><div class="bld-el-cont bld-el-pointlist bld-step-1-el-5  animated fadeIn" data-animation="fadeIn"><ul class="bld-el  "><li>JPA Minibook</li></ul></div><div class="bld-el-cont bld-el-pointlist bld-step-1-el-6  animated fadeIn" data-animation="fadeIn"><ul class="bld-el  "><li>JVM Troubleshooting Guide</li></ul></div><div class="bld-el-cont bld-el-pointlist bld-step-1-el-7  animated fadeIn" data-animation="fadeIn"><ul class="bld-el  "><li>Advanced Java</li></ul></div><div class="bld-el-cont bld-el-pointlist bld-step-1-el-8  animated fadeIn" data-animation="fadeIn"><ul class="bld-el  "><li>Java Interview QnA</li></ul></div><div class="bld-el-cont bld-el-pointlist bld-step-1-el-9  animated fadeIn" data-animation="fadeIn"><ul class="bld-el  "><li>Java Design Patterns</li></ul></div><div class="bld-el-cont bld-el-input bld-step-1-el-10  animated bounceIn bld-icon" data-animation="bounceIn"><span class="bld-input-icon"><i class="fa fa-envelope"></i></span><div class="bld-table-cont"><input placeholder="Your email address" required="" name="email" value="" class="bld-el  "></div></div><div class="bld-el-cont bld-el-button bld-step-1-el-11  animated bounceIn" data-animation="bounceIn"><button class="bld-el   snp-submit snp-cursor-pointer" data-loading="&lt;i class=&quot;fa fa-spinner fa-spin&quot;&gt;&lt;/i&gt;" type="submit">Get the Books <i style="margin-left: 15px;" class="fa fa-arrow-right"></i></button></div><div class="bld-el-cont bld-el-button bld-step-1-el-12  animated bounceIn" data-animation="bounceIn"><button class="bld-el   snp-close-link snp-cursor-pointer" data-loading="&lt;i class=&quot;fa fa-spinner fa-spin&quot;&gt;&lt;/i&gt;" type="button">No Thanks!</button></div><div class="bld-el-cont bld-el-img bld-step-1-el-13  animated bounceInLeft" data-animation="bounceInLeft"><img class="bld-el  " src="./M3-Mockito Verification _ Java Code Geeks - 2017_files/Spring-Interview-Questions_book_lp.png"></div><div class="bld-el-cont bld-el-img bld-step-1-el-14  animated bounceInLeft" data-animation="bounceInLeft"><img class="bld-el  " src="./M3-Mockito Verification _ Java Code Geeks - 2017_files/Multithreading-and-Concurrency-Questions_book_lp.png"></div><div class="bld-el-cont bld-el-img bld-step-1-el-15  animated bounceInLeft" data-animation="bounceInLeft"><img class="bld-el  " src="./M3-Mockito Verification _ Java Code Geeks - 2017_files/jpa-tutorial_book_lp.png"></div><div class="bld-el-cont bld-el-img bld-step-1-el-16  animated bounceInLeft" data-animation="bounceInLeft"><img class="bld-el  " src="./M3-Mockito Verification _ Java Code Geeks - 2017_files/JVM_Troubleshooting_Guide_book_lp.png"></div><div class="bld-el-cont bld-el-img bld-step-1-el-17  animated bounceInLeft" data-animation="bounceInLeft"><img class="bld-el  " src="./M3-Mockito Verification _ Java Code Geeks - 2017_files/Advanced_Java_book_lp.png"></div><div class="bld-el-cont bld-el-img bld-step-1-el-18  animated bounceInLeft" data-animation="bounceInLeft"><img class="bld-el  " src="./M3-Mockito Verification _ Java Code Geeks - 2017_files/Java-Interview-Questions_book_lp.png"></div><div class="bld-el-cont bld-el-img bld-step-1-el-19  animated bounceInLeft" data-animation="bounceInLeft"><img class="bld-el  " src="./M3-Mockito Verification _ Java Code Geeks - 2017_files/java_design_patterns_book_lp.png"></div><div class="bld-el-cont bld-el-button bld-step-1-el-20  animated fadeIn" data-animation="fadeIn"><button class="bld-el   snp-close-link snp-cursor-pointer" data-loading="&lt;i class=&quot;fa fa-spinner fa-spin&quot;&gt;&lt;/i&gt;" type="button">Close Popup</button></div></form></div></div></div><div class="snp-overlay" id="snp-pop-59902-overlay"></div><script>var snp_bld_open59902=function(){_snp_bld_open(59902);}
var snp_bld_close59902=function(){_snp_bld_close(59902);}</script> <style>.snp-pop-59902 .snp-bld-step-cont-1{}.snp-pop-59902 .snp-bld-step-1{width:800px;height:500px;background-position:center center;background-repeat:repeat}.snp-pop-59902 .bld-step-1-el-0{border:1px
solid transparent;width:413px;height:70px;top:9px;left:380px;z-index:100}.snp-pop-59902 .bld-step-1-el-0 .bld-el,.snp-pop-59902 .bld-step-1-el-0 .bld-el p,.snp-pop-59902 .bld-step-1-el-0 .bld-el:focus,.snp-pop-59902 .bld-step-1-el-0 .bld-el:active,.snp-pop-59902 .bld-step-1-el-0 .bld-el:hover{outline:0;font-family:Open Sans;border-width:0px;background-position:center center;background-repeat:repeat}.snp-pop-59902 .bld-step-1-el-1{border:1px
solid transparent;width:255px;height:50px;top:93px;left:455px;z-index:100}.snp-pop-59902 .bld-step-1-el-1 .bld-el,.snp-pop-59902 .bld-step-1-el-1 .bld-el p,.snp-pop-59902 .bld-step-1-el-1 .bld-el:focus,.snp-pop-59902 .bld-step-1-el-1 .bld-el:active,.snp-pop-59902 .bld-step-1-el-1 .bld-el:hover{outline:0;font-family:Open Sans;border-width:0px;background-position:center center;background-repeat:repeat}.snp-pop-59902 .bld-step-1-el-2{border:1px
solid transparent;width:336px;height:29px;top:155px;left:427px;z-index:100}.snp-pop-59902 .bld-step-1-el-2 .bld-el,.snp-pop-59902 .bld-step-1-el-2 .bld-el p,.snp-pop-59902 .bld-step-1-el-2 .bld-el:focus,.snp-pop-59902 .bld-step-1-el-2 .bld-el:active,.snp-pop-59902 .bld-step-1-el-2 .bld-el:hover{outline:0;font-family:Open Sans;border-width:0px;background-position:center center;background-repeat:repeat}.snp-pop-59902 .bld-step-1-el-3{border:1px
solid transparent;width:320px;height:19px;top:184px;left:428px;z-index:100;-webkit-animation-delay:2000ms;animation-delay:2000ms}.snp-pop-59902 .bld-step-1-el-3 .bld-el,.snp-pop-59902 .bld-step-1-el-3 .bld-el p,.snp-pop-59902 .bld-step-1-el-3 .bld-el:focus,.snp-pop-59902 .bld-step-1-el-3 .bld-el:active,.snp-pop-59902 .bld-step-1-el-3 .bld-el:hover{outline:0;font-family:Open Sans;font-size:14px;border-width:0px;background-position:center center;background-repeat:repeat}.snp-pop-59902 .bld-step-1-el-3 ul.bld-el
li{line-height:normal;padding-left:15px;background-image:url("/wp-content/plugins/arscode-ninja-popups/img/dot.png")}.snp-pop-59902 .bld-step-1-el-4{border:1px
solid transparent;width:320px;height:19px;top:203px;left:428px;z-index:100;-webkit-animation-delay:3000ms;animation-delay:3000ms}.snp-pop-59902 .bld-step-1-el-4 .bld-el,.snp-pop-59902 .bld-step-1-el-4 .bld-el p,.snp-pop-59902 .bld-step-1-el-4 .bld-el:focus,.snp-pop-59902 .bld-step-1-el-4 .bld-el:active,.snp-pop-59902 .bld-step-1-el-4 .bld-el:hover{outline:0;font-family:Open Sans;font-size:14px;border-width:0px;background-position:center center;background-repeat:repeat}.snp-pop-59902 .bld-step-1-el-4 ul.bld-el
li{line-height:normal;padding-left:15px;background-image:url("/wp-content/plugins/arscode-ninja-popups/img/dot.png")}.snp-pop-59902 .bld-step-1-el-5{border:1px
solid transparent;width:320px;height:19px;top:222px;left:428px;z-index:100;-webkit-animation-delay:4000ms;animation-delay:4000ms}.snp-pop-59902 .bld-step-1-el-5 .bld-el,.snp-pop-59902 .bld-step-1-el-5 .bld-el p,.snp-pop-59902 .bld-step-1-el-5 .bld-el:focus,.snp-pop-59902 .bld-step-1-el-5 .bld-el:active,.snp-pop-59902 .bld-step-1-el-5 .bld-el:hover{outline:0;font-family:Open Sans;font-size:14px;border-width:0px;background-position:center center;background-repeat:repeat}.snp-pop-59902 .bld-step-1-el-5 ul.bld-el
li{line-height:normal;padding-left:15px;background-image:url("/wp-content/plugins/arscode-ninja-popups/img/dot.png")}.snp-pop-59902 .bld-step-1-el-6{border:1px
solid transparent;width:320px;height:19px;top:241px;left:428px;z-index:100;-webkit-animation-delay:5000ms;animation-delay:5000ms}.snp-pop-59902 .bld-step-1-el-6 .bld-el,.snp-pop-59902 .bld-step-1-el-6 .bld-el p,.snp-pop-59902 .bld-step-1-el-6 .bld-el:focus,.snp-pop-59902 .bld-step-1-el-6 .bld-el:active,.snp-pop-59902 .bld-step-1-el-6 .bld-el:hover{outline:0;font-family:Open Sans;font-size:14px;border-width:0px;background-position:center center;background-repeat:repeat}.snp-pop-59902 .bld-step-1-el-6 ul.bld-el
li{line-height:normal;padding-left:15px;background-image:url("/wp-content/plugins/arscode-ninja-popups/img/dot.png")}.snp-pop-59902 .bld-step-1-el-7{border:1px
solid transparent;width:320px;height:19px;top:260px;left:428px;z-index:100;-webkit-animation-delay:6000ms;animation-delay:6000ms}.snp-pop-59902 .bld-step-1-el-7 .bld-el,.snp-pop-59902 .bld-step-1-el-7 .bld-el p,.snp-pop-59902 .bld-step-1-el-7 .bld-el:focus,.snp-pop-59902 .bld-step-1-el-7 .bld-el:active,.snp-pop-59902 .bld-step-1-el-7 .bld-el:hover{outline:0;font-family:Open Sans;font-size:14px;border-width:0px;background-position:center center;background-repeat:repeat}.snp-pop-59902 .bld-step-1-el-7 ul.bld-el
li{line-height:normal;padding-left:15px;background-image:url("/wp-content/plugins/arscode-ninja-popups/img/dot.png")}.snp-pop-59902 .bld-step-1-el-8{border:1px
solid transparent;width:200px;height:19px;top:279px;left:428px;z-index:100;-webkit-animation-delay:7000ms;animation-delay:7000ms}.snp-pop-59902 .bld-step-1-el-8 .bld-el,.snp-pop-59902 .bld-step-1-el-8 .bld-el p,.snp-pop-59902 .bld-step-1-el-8 .bld-el:focus,.snp-pop-59902 .bld-step-1-el-8 .bld-el:active,.snp-pop-59902 .bld-step-1-el-8 .bld-el:hover{outline:0;font-family:Open Sans;font-size:14px;border-width:0px;background-position:center center;background-repeat:repeat}.snp-pop-59902 .bld-step-1-el-8 ul.bld-el
li{line-height:normal;padding-left:15px;background-image:url("/wp-content/plugins/arscode-ninja-popups/img/dot.png")}.snp-pop-59902 .bld-step-1-el-9{border:1px
solid transparent;width:320px;height:19px;top:298px;left:428px;z-index:100;-webkit-animation-delay:8000ms;animation-delay:8000ms}.snp-pop-59902 .bld-step-1-el-9 .bld-el,.snp-pop-59902 .bld-step-1-el-9 .bld-el p,.snp-pop-59902 .bld-step-1-el-9 .bld-el:focus,.snp-pop-59902 .bld-step-1-el-9 .bld-el:active,.snp-pop-59902 .bld-step-1-el-9 .bld-el:hover{outline:0;font-family:Open Sans;font-size:14px;border-width:0px;background-position:center center;background-repeat:repeat}.snp-pop-59902 .bld-step-1-el-9 ul.bld-el
li{line-height:normal;padding-left:15px;background-image:url("/wp-content/plugins/arscode-ninja-popups/img/dot.png")}.snp-pop-59902 .bld-step-1-el-10{border:1px
solid transparent;width:415px;height:50px;top:339px;left:380px;z-index:100;-webkit-animation-delay:9000ms;animation-delay:9000ms}.snp-pop-59902 .bld-step-1-el-10 .bld-el,.snp-pop-59902 .bld-step-1-el-10 .bld-el p,.snp-pop-59902 .bld-step-1-el-10 .bld-el:focus,.snp-pop-59902 .bld-step-1-el-10 .bld-el:active,.snp-pop-59902 .bld-step-1-el-10 .bld-el:hover{outline:0;height:48px;font-family:Open Sans;font-size:14px;border-style:solid;border-width:1px;border-color:#197fd2;border-radius:5px;padding:5px;background-position:center center;background-repeat:repeat}.snp-pop-59902 .bld-step-1-el-10 .bld-el::-webkit-input-placeholder{color: }.snp-pop-59902 .bld-step-1-el-10 .bld-el::-moz-placeholder{color: }.snp-pop-59902 .bld-step-1-el-10.bld-icon .bld-input-icon{border-right-width:0 !important;width:px;font-size:20px;border-style:solid;border-width:1px;border-color:#197fd2;border-radius:5px;background-color:#197fd2}.snp-pop-59902 .bld-step-1-el-11{border:1px
solid transparent;width:200px;height:60px;top:400px;left:384px;z-index:100;-webkit-animation-delay:9000ms;animation-delay:9000ms}.snp-pop-59902 .bld-step-1-el-11 .bld-el,.snp-pop-59902 .bld-step-1-el-11 .bld-el p,.snp-pop-59902 .bld-step-1-el-11 .bld-el:focus,.snp-pop-59902 .bld-step-1-el-11 .bld-el:active,.snp-pop-59902 .bld-step-1-el-11 .bld-el:hover{outline:0;color:#fff;font-family:Open Sans;font-size:20px;font-weight:bold;border-style:none;border-width:0px;border-radius:5px;background-color:#197FD2 !important;background-position:center center;background-repeat:repeat;padding-left:10px}.snp-pop-59902 .bld-step-1-el-12{border:1px
solid transparent;width:200px;height:60px;top:400px;left:591px;z-index:100;-webkit-animation-delay:9000ms;animation-delay:9000ms}.snp-pop-59902 .bld-step-1-el-12 .bld-el,.snp-pop-59902 .bld-step-1-el-12 .bld-el p,.snp-pop-59902 .bld-step-1-el-12 .bld-el:focus,.snp-pop-59902 .bld-step-1-el-12 .bld-el:active,.snp-pop-59902 .bld-step-1-el-12 .bld-el:hover{outline:0;color:#fff;font-family:Open Sans;font-size:20px;font-weight:bold;border-style:none;border-width:0px;border-radius:5px;background-color:#5b5b5b !important;background-position:center center;background-repeat:repeat;padding-left:10px}.snp-pop-59902 .bld-step-1-el-13{border:1px
solid transparent;width:265px;height:397px;top:3px;left:-56px;z-index:100;-webkit-animation-delay:2000ms;animation-delay:2000ms}.snp-pop-59902 .bld-step-1-el-13 .bld-el,.snp-pop-59902 .bld-step-1-el-13 .bld-el p,.snp-pop-59902 .bld-step-1-el-13 .bld-el:focus,.snp-pop-59902 .bld-step-1-el-13 .bld-el:active,.snp-pop-59902 .bld-step-1-el-13 .bld-el:hover{outline:0}.snp-pop-59902 .bld-step-1-el-14{border:1px
solid transparent;width:265px;height:397px;top:21px;left:-30px;z-index:100;-webkit-animation-delay:3000ms;animation-delay:3000ms}.snp-pop-59902 .bld-step-1-el-14 .bld-el,.snp-pop-59902 .bld-step-1-el-14 .bld-el p,.snp-pop-59902 .bld-step-1-el-14 .bld-el:focus,.snp-pop-59902 .bld-step-1-el-14 .bld-el:active,.snp-pop-59902 .bld-step-1-el-14 .bld-el:hover{outline:0}.snp-pop-59902 .bld-step-1-el-15{border:1px
solid transparent;width:265px;height:397px;top:42px;left:0px;z-index:100;-webkit-animation-delay:4000ms;animation-delay:4000ms}.snp-pop-59902 .bld-step-1-el-15 .bld-el,.snp-pop-59902 .bld-step-1-el-15 .bld-el p,.snp-pop-59902 .bld-step-1-el-15 .bld-el:focus,.snp-pop-59902 .bld-step-1-el-15 .bld-el:active,.snp-pop-59902 .bld-step-1-el-15 .bld-el:hover{outline:0}.snp-pop-59902 .bld-step-1-el-16{border:1px
solid transparent;width:265px;height:397px;top:62px;left:28px;z-index:100;-webkit-animation-delay:5000ms;animation-delay:5000ms}.snp-pop-59902 .bld-step-1-el-16 .bld-el,.snp-pop-59902 .bld-step-1-el-16 .bld-el p,.snp-pop-59902 .bld-step-1-el-16 .bld-el:focus,.snp-pop-59902 .bld-step-1-el-16 .bld-el:active,.snp-pop-59902 .bld-step-1-el-16 .bld-el:hover{outline:0}.snp-pop-59902 .bld-step-1-el-17{border:1px
solid transparent;width:265px;height:397px;top:81px;left:58px;z-index:100;-webkit-animation-delay:6000ms;animation-delay:6000ms}.snp-pop-59902 .bld-step-1-el-17 .bld-el,.snp-pop-59902 .bld-step-1-el-17 .bld-el p,.snp-pop-59902 .bld-step-1-el-17 .bld-el:focus,.snp-pop-59902 .bld-step-1-el-17 .bld-el:active,.snp-pop-59902 .bld-step-1-el-17 .bld-el:hover{outline:0}.snp-pop-59902 .bld-step-1-el-18{border:1px
solid transparent;width:265px;height:397px;top:100px;left:88px;z-index:100;-webkit-animation-delay:7000ms;animation-delay:7000ms}.snp-pop-59902 .bld-step-1-el-18 .bld-el,.snp-pop-59902 .bld-step-1-el-18 .bld-el p,.snp-pop-59902 .bld-step-1-el-18 .bld-el:focus,.snp-pop-59902 .bld-step-1-el-18 .bld-el:active,.snp-pop-59902 .bld-step-1-el-18 .bld-el:hover{outline:0}.snp-pop-59902 .bld-step-1-el-19{border:1px
solid transparent;width:265px;height:397px;top:121px;left:118px;z-index:100;-webkit-animation-delay:8000ms;animation-delay:8000ms}.snp-pop-59902 .bld-step-1-el-19 .bld-el,.snp-pop-59902 .bld-step-1-el-19 .bld-el p,.snp-pop-59902 .bld-step-1-el-19 .bld-el:focus,.snp-pop-59902 .bld-step-1-el-19 .bld-el:active,.snp-pop-59902 .bld-step-1-el-19 .bld-el:hover{outline:0}.snp-pop-59902 .bld-step-1-el-20{border:1px
solid transparent;width:127px;height:26px;top:466px;left:520px;z-index:100;-webkit-animation-delay:750ms;animation-delay:750ms}.snp-pop-59902 .bld-step-1-el-20 .bld-el,.snp-pop-59902 .bld-step-1-el-20 .bld-el p,.snp-pop-59902 .bld-step-1-el-20 .bld-el:focus,.snp-pop-59902 .bld-step-1-el-20 .bld-el:active,.snp-pop-59902 .bld-step-1-el-20 .bld-el:hover{outline:0;color:#d33;font-family:Open Sans;font-size:14px;font-weight:bold;border-style:none;border-width:0px;background-color:#fafafa !important;background-position:center center;background-repeat:repeat}#snp-pop-59902-overlay{opacity:1;background-color:#fafafa}</style><script>snp_f['snppopup-welcome-open']=snp_bld_open59902;snp_f['snppopup-welcome-close']=snp_bld_close59902;</script></div></div> <script type="text/javascript">/*<![CDATA[*/(function(){function addEventListener(element,event,handler){if(element.addEventListener){element.addEventListener(event,handler,false);}else if(element.attachEvent){element.attachEvent('on'+event,handler);}}function maybePrefixUrlField(){if(this.value.trim()!==''&&this.value.indexOf('http')!==0){this.value="http://"+this.value;}}
var urlFields=document.querySelectorAll('.mc4wp-form input[type="url"]');if(urlFields&&urlFields.length>0){for(var j=0;j<urlFields.length;j++){addEventListener(urlFields[j],'blur',maybePrefixUrlField);}}
var testInput=document.createElement('input');testInput.setAttribute('type','date');if(testInput.type!=='date'){var dateFields=document.querySelectorAll('.mc4wp-form input[type="date"]');for(var i=0;i<dateFields.length;i++){if(!dateFields[i].placeholder){dateFields[i].placeholder='YYYY-MM-DD';}
if(!dateFields[i].pattern){dateFields[i].pattern='[0-9]{4}-(0[1-9]|1[012])-(0[1-9]|1[0-9]|2[0-9]|3[01])';}}}})();/*]]>*/</script> <link rel="stylesheet" id="font-Open+Sans-css" href="./M3-Mockito Verification _ Java Code Geeks - 2017_files/css(1)" type="text/css" media="all"> <script type="text/javascript">var qpprFrontData={"linkData":{"https:\/\/www.javacodegeeks.com\/2016\/12\/future-java-might-look-like.html":[0,0,""]},"siteURL":"https:\/\/www.javacodegeeks.com","siteURLq":"https:\/\/www.javacodegeeks.com"};</script> <script type="text/javascript">var tie={"go_to":"Go to...","ajaxurl":"https:\/\/www.javacodegeeks.com\/wp-admin\/admin-ajax.php","your_rating":"Your Rating:","is_singular":"1","reading_indicator":""};</script> <script type="text/javascript" src="./M3-Mockito Verification _ Java Code Geeks - 2017_files/imagesloaded.min.js"></script> <script type="text/javascript" src="./M3-Mockito Verification _ Java Code Geeks - 2017_files/masonry.min.js"></script> <script type="text/javascript" src="./M3-Mockito Verification _ Java Code Geeks - 2017_files/jquery.masonry.min.js"></script> <script type="text/javascript">var um_scripts={"ajaxurl":"https:\/\/www.javacodegeeks.com\/wp-admin\/admin-ajax.php","fileupload":"https:\/\/www.javacodegeeks.com\/wp-content\/plugins\/ultimate-member\/core\/lib\/upload\/um-file-upload.php","imageupload":"https:\/\/www.javacodegeeks.com\/wp-content\/plugins\/ultimate-member\/core\/lib\/upload\/um-image-upload.php"};</script> <script type="text/javascript" src="./M3-Mockito Verification _ Java Code Geeks - 2017_files/um.min.js"></script> <script type="text/javascript">var mc4wp_forms_config=[];</script> <script type="text/javascript">var mc4wp_ajax_vars={"loading_character":"\u2022","ajax_url":"https:\/\/www.javacodegeeks.com\/wp-admin\/admin-ajax.php?action=mc4wp-form","error_text":"Oops. Something went wrong. Please try again later."};</script> <!--[if lte IE 9]> <script type='text/javascript' src='//www.javacodegeeks.com/wp-content/plugins/mailchimp-for-wp/assets/js/third-party/placeholders.min.js'></script> <![endif]--> <script type="text/javascript">jQuery('#request').val('');</script> <script type="text/javascript">(function($)
{'use strict';$(document).ready(function()
{var $subOps=$('.comment-sub-ops'),$subType,$subDeliver;if($subOps.data('auto')==='position')$subOps.prevUntil('form').each(function()
{var $this=$(this);if($this.find(':input[type="submit"]').length)
{$subOps.remove(),$this.before($subOps);return false;}});$subOps=$('.comment-sub-ops'),$subType=$subOps.find('select.cso-sub-type'),$subDeliver=$subOps.find('select.cso-sub-deliver');$subType.on('change',function()
{if($(this).val()==='')
$subDeliver.attr('disabled','disabled');else $subDeliver.removeAttr('disabled');}).trigger('change');});})(jQuery);</script><script type="text/javascript">(function($)
{'use strict';$(document).ready(function()
{var $subOps=$('.comment-sub-ops'),$subType,$subDeliver;if($subOps.data('auto')==='position')$subOps.prevUntil('form').each(function()
{var $this=$(this);if($this.find(':input[type="submit"]').length)
{$subOps.remove(),$this.before($subOps);return false;}});$subOps=$('.comment-sub-ops'),$subType=$subOps.find('select.cso-sub-type'),$subDeliver=$subOps.find('select.cso-sub-deliver');$subType.on('change',function()
{if($(this).val()==='')
$subDeliver.attr('disabled','disabled');else $subDeliver.removeAttr('disabled');}).trigger('change');});})(jQuery);</script> <script type="text/javascript" src="./M3-Mockito Verification _ Java Code Geeks - 2017_files/shCore.js"></script> <script type="text/javascript" src="./M3-Mockito Verification _ Java Code Geeks - 2017_files/shBrushBash.js"></script> <script type="text/javascript" src="./M3-Mockito Verification _ Java Code Geeks - 2017_files/shBrushJava.js"></script> <script type="text/javascript" src="./M3-Mockito Verification _ Java Code Geeks - 2017_files/shBrushScala.js"></script> <script type="text/javascript" src="./M3-Mockito Verification _ Java Code Geeks - 2017_files/shBrushGroovy.js"></script> <script type="text/javascript" src="./M3-Mockito Verification _ Java Code Geeks - 2017_files/shBrushSql.js"></script> <script type="text/javascript" src="./M3-Mockito Verification _ Java Code Geeks - 2017_files/shBrushXml.js"></script> <script type="text/javascript" src="./M3-Mockito Verification _ Java Code Geeks - 2017_files/shBrushJScript.js"></script> <script type="text/javascript" src="./M3-Mockito Verification _ Java Code Geeks - 2017_files/shAll.js"></script> <link rel="stylesheet" href="./M3-Mockito Verification _ Java Code Geeks - 2017_files/shCore.css" type="text/css" media="all"><link rel="stylesheet" href="./M3-Mockito Verification _ Java Code Geeks - 2017_files/shThemeDefault.css" type="text/css" media="all"> <script type="text/javascript" src="./M3-Mockito Verification _ Java Code Geeks - 2017_files/3f1ae.single.include-footer.3c5ccd.js"></script> </body></html>